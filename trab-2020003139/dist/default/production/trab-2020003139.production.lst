

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jul 28 13:30:17 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73  0000                     
    74                           ; Version 2.20
    75                           ; Generated 12/02/2020 GMT
    76                           ; 
    77                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F4520 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     
   109                           	psect	idataCOMRAM
   110  004866                     __pidataCOMRAM:
   111                           	callstack 0
   112                           
   113                           ;initializer for _tempPontos
   114  004866  0000               	dw	0
   115  004868  41B0               	dw	16816
   116                           
   117                           ;initializer for _tempLiquido
   118  00486A  0000               	dw	0
   119  00486C  41B0               	dw	16816
   120                           
   121                           ;initializer for _temperatura
   122  00486E  0000               	dw	0
   123  004870  41B0               	dw	16816
   124                           
   125                           	psect	idataBANK0
   126  004984                     __pidataBANK0:
   127                           	callstack 0
   128                           
   129                           ;initializer for ligar@F2436
   130  004984  1F                 	db	31
   131  004985  04                 	db	4
   132  004986  04                 	db	4
   133  004987  04                 	db	4
   134  004988  04                 	db	4
   135  004989  0E                 	db	14
   136  00498A  0E                 	db	14
   137  00498B  0E                 	db	14
   138  00498C  0E                 	db	14
   139  00498D  0E                 	db	14
   140  00498E  0E                 	db	14
   141  00498F  0E                 	db	14
   142  004990  04                 	db	4
   143  004991  04                 	db	4
   144  004992  04                 	db	4
   145  004993  00                 	db	0
   146                           
   147                           ;initializer for inicia@F2432
   148  004994  00                 	db	0
   149  004995  05                 	db	5
   150  004996  02                 	db	2
   151  004997  07                 	db	7
   152  004998  05                 	db	5
   153  004999  07                 	db	7
   154  00499A  03                 	db	3
   155  00499B  05                 	db	5
   156  00499C  00                 	db	0
   157  00499D  1A                 	db	26
   158  00499E  1C                 	db	28
   159  00499F  1E                 	db	30
   160  0049A0  0A                 	db	10
   161  0049A1  1E                 	db	30
   162  0049A2  0C                 	db	12
   163  0049A3  1A                 	db	26
   164                           
   165                           ;initializer for _minimo
   166  0049A4  0000               	dw	0
   167  0049A6  41B0               	dw	16816
   168                           
   169                           ;initializer for _maximo
   170  0049A8  0000               	dw	0
   171  0049AA  41B0               	dw	16816
   172                           
   173                           ;initializer for _ponto2
   174  0049AC  0000               	dw	0
   175  0049AE  41B0               	dw	16816
   176                           
   177                           ;initializer for _ponto1
   178  0049B0  0000               	dw	0
   179  0049B2  41B0               	dw	16816
   180                           
   181                           ;initializer for _limiteInferior
   182  0049B4  0002               	dw	2
   183                           
   184                           ;initializer for _limiteSuperior
   185  0049B6  0008               	dw	8
   186                           
   187                           	psect	mediumconst
   188  007E90                     __pmediumconst:
   189                           	callstack 0
   190  007E90  00                 	db	0
   191  007E91                     _valor@ssd$F306:
   192                           	callstack 0
   193  007E91  3F                 	db	63
   194  007E92  06                 	db	6
   195  007E93  5B                 	db	91
   196  007E94  4F                 	db	79
   197  007E95  66                 	db	102
   198  007E96  6D                 	db	109
   199  007E97  7D                 	db	125
   200  007E98  07                 	db	7
   201  007E99  7F                 	db	127
   202  007E9A  6F                 	db	111
   203  007E9B  77                 	db	119
   204  007E9C  7C                 	db	124
   205  007E9D  39                 	db	57
   206  007E9E  5E                 	db	94
   207  007E9F  79                 	db	121
   208  007EA0  71                 	db	113
   209  007EA1                     __end_of_valor@ssd$F306:
   210                           	callstack 0
   211  0000                     _TRISEbits	set	3990
   212  0000                     _TRISCbits	set	3988
   213  0000                     _PORTCbits	set	3970
   214  0000                     _RCREG	set	4014
   215  0000                     _PIR1bits	set	3998
   216  0000                     _TXREG	set	4013
   217  0000                     _RCSTAbits	set	4011
   218  0000                     _TXSTAbits	set	4012
   219  0000                     _SPBRG	set	4015
   220  0000                     _TRISE	set	3990
   221  0000                     _TRISC	set	3988
   222  0000                     _TRISB	set	3987
   223  0000                     _TRISA	set	3986
   224  0000                     _PORTE	set	3972
   225  0000                     _PORTC	set	3970
   226  0000                     _PORTB	set	3969
   227  0000                     _PORTA	set	3968
   228  0000                     _TRISD	set	3989
   229  0000                     _PORTEbits	set	3972
   230  0000                     _PORTD	set	3971
   231  007EA1                     STR_30:
   232  007EA1  23                 	db	35
   233  007EA2  23                 	db	35
   234  007EA3  23                 	db	35
   235  007EA4  23                 	db	35
   236  007EA5  23                 	db	35
   237  007EA6  4D                 	db	77	;'M'
   238  007EA7  41                 	db	65	;'A'
   239  007EA8  58                 	db	88	;'X'
   240  007EA9  49                 	db	73	;'I'
   241  007EAA  4D                 	db	77	;'M'
   242  007EAB  41                 	db	65	;'A'
   243  007EAC  23                 	db	35
   244  007EAD  23                 	db	35
   245  007EAE  23                 	db	35
   246  007EAF  23                 	db	35
   247  007EB0  23                 	db	35
   248  007EB1  00                 	db	0
   249  007EB2                     STR_33:
   250  007EB2  23                 	db	35
   251  007EB3  23                 	db	35
   252  007EB4  23                 	db	35
   253  007EB5  23                 	db	35
   254  007EB6  23                 	db	35
   255  007EB7  4D                 	db	77	;'M'
   256  007EB8  49                 	db	73	;'I'
   257  007EB9  4E                 	db	78	;'N'
   258  007EBA  49                 	db	73	;'I'
   259  007EBB  4D                 	db	77	;'M'
   260  007EBC  4F                 	db	79	;'O'
   261  007EBD  23                 	db	35
   262  007EBE  23                 	db	35
   263  007EBF  23                 	db	35
   264  007EC0  23                 	db	35
   265  007EC1  23                 	db	35
   266  007EC2  00                 	db	0
   267  007EC3                     STR_16:
   268  007EC3  23                 	db	35
   269  007EC4  23                 	db	35
   270  007EC5  23                 	db	35
   271  007EC6  23                 	db	35
   272  007EC7  4D                 	db	77	;'M'
   273  007EC8  45                 	db	69	;'E'
   274  007EC9  44                 	db	68	;'D'
   275  007ECA  49                 	db	73	;'I'
   276  007ECB  44                 	db	68	;'D'
   277  007ECC  41                 	db	65	;'A'
   278  007ECD  53                 	db	83	;'S'
   279  007ECE  23                 	db	35
   280  007ECF  23                 	db	35
   281  007ED0  23                 	db	35
   282  007ED1  23                 	db	35
   283  007ED2  23                 	db	35
   284  007ED3  00                 	db	0
   285  007ED4                     STR_14:
   286  007ED4  23                 	db	35
   287  007ED5  4E                 	db	78	;'N'
   288  007ED6  41                 	db	65	;'A'
   289  007ED7  4F                 	db	79	;'O'
   290  007ED8  20                 	db	32
   291  007ED9  48                 	db	72	;'H'
   292  007EDA  41                 	db	65	;'A'
   293  007EDB  20                 	db	32
   294  007EDC  56                 	db	86	;'V'
   295  007EDD  41                 	db	65	;'A'
   296  007EDE  43                 	db	67	;'C'
   297  007EDF  49                 	db	73	;'I'
   298  007EE0  4E                 	db	78	;'N'
   299  007EE1  41                 	db	65	;'A'
   300  007EE2  53                 	db	83	;'S'
   301  007EE3  23                 	db	35
   302  007EE4  00                 	db	0
   303  007EE5                     STR_11:
   304  007EE5  44                 	db	68	;'D'
   305  007EE6  69                 	db	105	;'i'
   306  007EE7  67                 	db	103	;'g'
   307  007EE8  69                 	db	105	;'i'
   308  007EE9  74                 	db	116	;'t'
   309  007EEA  65                 	db	101	;'e'
   310  007EEB  20                 	db	32
   311  007EEC  61                 	db	97	;'a'
   312  007EED  20                 	db	32
   313  007EEE  71                 	db	113	;'q'
   314  007EEF  75                 	db	117	;'u'
   315  007EF0  61                 	db	97	;'a'
   316  007EF1  6E                 	db	110	;'n'
   317  007EF2  74                 	db	116	;'t'
   318  007EF3  69                 	db	105	;'i'
   319  007EF4  2D                 	db	45
   320  007EF5  00                 	db	0
   321  007EF6                     STR_9:
   322  007EF6  4D                 	db	77	;'M'
   323  007EF7  61                 	db	97	;'a'
   324  007EF8  78                 	db	120	;'x'
   325  007EF9  69                 	db	105	;'i'
   326  007EFA  6D                 	db	109	;'m'
   327  007EFB  6F                 	db	111	;'o'
   328  007EFC  20                 	db	32
   329  007EFD  64                 	db	100	;'d'
   330  007EFE  65                 	db	101	;'e'
   331  007EFF  20                 	db	32
   332  007F00  35                 	db	53	;'5'
   333  007F01  20                 	db	32
   334  007F02  75                 	db	117	;'u'
   335  007F03  6E                 	db	110	;'n'
   336  007F04  64                 	db	100	;'d'
   337  007F05  2E                 	db	46
   338  007F06  00                 	db	0
   339  007F07                     STR_24:
   340  007F07  33                 	db	51	;'3'
   341  007F08  20                 	db	32
   342  007F09  2D                 	db	45
   343  007F0A  20                 	db	32
   344  007F0B  46                 	db	70	;'F'
   345  007F0C  65                 	db	101	;'e'
   346  007F0D  63                 	db	99	;'c'
   347  007F0E  68                 	db	104	;'h'
   348  007F0F  61                 	db	97	;'a'
   349  007F10  72                 	db	114	;'r'
   350  007F11  20                 	db	32
   351  007F12  50                 	db	80	;'P'
   352  007F13  6F                 	db	111	;'o'
   353  007F14  72                 	db	114	;'r'
   354  007F15  74                 	db	116	;'t'
   355  007F16  61                 	db	97	;'a'
   356  007F17  00                 	db	0
   357  007F18                     STR_12:
   358  007F18  64                 	db	100	;'d'
   359  007F19  61                 	db	97	;'a'
   360  007F1A  64                 	db	100	;'d'
   361  007F1B  65                 	db	101	;'e'
   362  007F1C  20                 	db	32
   363  007F1D  6E                 	db	110	;'n'
   364  007F1E  6F                 	db	111	;'o'
   365  007F1F  20                 	db	32
   366  007F20  73                 	db	115	;'s'
   367  007F21  65                 	db	101	;'e'
   368  007F22  72                 	db	114	;'r'
   369  007F23  69                 	db	105	;'i'
   370  007F24  61                 	db	97	;'a'
   371  007F25  6C                 	db	108	;'l'
   372  007F26  2E                 	db	46
   373  007F27  00                 	db	0
   374  007F28                     STR_3:
   375  007F28  56                 	db	86	;'V'
   376  007F29  61                 	db	97	;'a'
   377  007F2A  6C                 	db	108	;'l'
   378  007F2B  6F                 	db	111	;'o'
   379  007F2C  72                 	db	114	;'r'
   380  007F2D  20                 	db	32
   381  007F2E  69                 	db	105	;'i'
   382  007F2F  6E                 	db	110	;'n'
   383  007F30  76                 	db	118	;'v'
   384  007F31  61                 	db	97	;'a'
   385  007F32  6C                 	db	108	;'l'
   386  007F33  69                 	db	105	;'i'
   387  007F34  64                 	db	100	;'d'
   388  007F35  6F                 	db	111	;'o'
   389  007F36  2E                 	db	46
   390  007F37  00                 	db	0
   391  007F38                     STR_23:
   392  007F38  32                 	db	50	;'2'
   393  007F39  20                 	db	32
   394  007F3A  2D                 	db	45
   395  007F3B  20                 	db	32
   396  007F3C  41                 	db	65	;'A'
   397  007F3D  62                 	db	98	;'b'
   398  007F3E  72                 	db	114	;'r'
   399  007F3F  69                 	db	105	;'i'
   400  007F40  72                 	db	114	;'r'
   401  007F41  20                 	db	32
   402  007F42  50                 	db	80	;'P'
   403  007F43  6F                 	db	111	;'o'
   404  007F44  72                 	db	114	;'r'
   405  007F45  74                 	db	116	;'t'
   406  007F46  61                 	db	97	;'a'
   407  007F47  00                 	db	0
   408  007F48                     STR_38:
   409  007F48  23                 	db	35
   410  007F49  23                 	db	35
   411  007F4A  50                 	db	80	;'P'
   412  007F4B  4F                 	db	79	;'O'
   413  007F4C  52                 	db	82	;'R'
   414  007F4D  54                 	db	84	;'T'
   415  007F4E  41                 	db	65	;'A'
   416  007F4F  20                 	db	32
   417  007F50  41                 	db	65	;'A'
   418  007F51  42                 	db	66	;'B'
   419  007F52  45                 	db	69	;'E'
   420  007F53  52                 	db	82	;'R'
   421  007F54  54                 	db	84	;'T'
   422  007F55  41                 	db	65	;'A'
   423  007F56  00                 	db	0
   424  007F57                     STR_10:
   425  007F57  70                 	db	112	;'p'
   426  007F58  6F                 	db	111	;'o'
   427  007F59  72                 	db	114	;'r'
   428  007F5A  20                 	db	32
   429  007F5B  61                 	db	97	;'a'
   430  007F5C  62                 	db	98	;'b'
   431  007F5D  65                 	db	101	;'e'
   432  007F5E  72                 	db	114	;'r'
   433  007F5F  74                 	db	116	;'t'
   434  007F60  75                 	db	117	;'u'
   435  007F61  72                 	db	114	;'r'
   436  007F62  61                 	db	97	;'a'
   437  007F63  2E                 	db	46
   438  007F64  00                 	db	0
   439  007F65                     STR_7:
   440  007F65  37                 	db	55	;'7'
   441  007F66  20                 	db	32
   442  007F67  2D                 	db	45
   443  007F68  20                 	db	32
   444  007F69  41                 	db	65	;'A'
   445  007F6A  64                 	db	100	;'d'
   446  007F6B  69                 	db	105	;'i'
   447  007F6C  63                 	db	99	;'c'
   448  007F6D  69                 	db	105	;'i'
   449  007F6E  6F                 	db	111	;'o'
   450  007F6F  6E                 	db	110	;'n'
   451  007F70  61                 	db	97	;'a'
   452  007F71  72                 	db	114	;'r'
   453  007F72  00                 	db	0
   454  007F73                     STR_27:
   455  007F73  23                 	db	35
   456  007F74  23                 	db	35
   457  007F75  52                 	db	82	;'R'
   458  007F76  45                 	db	69	;'E'
   459  007F77  53                 	db	83	;'S'
   460  007F78  46                 	db	70	;'F'
   461  007F79  52                 	db	82	;'R'
   462  007F7A  49                 	db	73	;'I'
   463  007F7B  41                 	db	65	;'A'
   464  007F7C  4E                 	db	78	;'N'
   465  007F7D  44                 	db	68	;'D'
   466  007F7E  4F                 	db	79	;'O'
   467  007F7F  00                 	db	0
   468  007F80                     STR_8:
   469  007F80  23                 	db	35
   470  007F81  20                 	db	32
   471  007F82  2D                 	db	45
   472  007F83  20                 	db	32
   473  007F84  43                 	db	67	;'C'
   474  007F85  61                 	db	97	;'a'
   475  007F86  6E                 	db	110	;'n'
   476  007F87  63                 	db	99	;'c'
   477  007F88  65                 	db	101	;'e'
   478  007F89  6C                 	db	108	;'l'
   479  007F8A  61                 	db	97	;'a'
   480  007F8B  72                 	db	114	;'r'
   481  007F8C  00                 	db	0
   482  007F8D                     STR_25:
   483  007F8D  34                 	db	52	;'4'
   484  007F8E  20                 	db	32
   485  007F8F  2D                 	db	45
   486  007F90  20                 	db	32
   487  007F91  4D                 	db	77	;'M'
   488  007F92  61                 	db	97	;'a'
   489  007F93  78                 	db	120	;'x'
   490  007F94  2F                 	db	47
   491  007F95  4D                 	db	77	;'M'
   492  007F96  69                 	db	105	;'i'
   493  007F97  6E                 	db	110	;'n'
   494  007F98  00                 	db	0
   495  007F99                     STR_6:
   496  007F99  36                 	db	54	;'6'
   497  007F9A  20                 	db	32
   498  007F9B  2D                 	db	45
   499  007F9C  20                 	db	32
   500  007F9D  52                 	db	82	;'R'
   501  007F9E  65                 	db	101	;'e'
   502  007F9F  74                 	db	116	;'t'
   503  007FA0  69                 	db	105	;'i'
   504  007FA1  72                 	db	114	;'r'
   505  007FA2  61                 	db	97	;'a'
   506  007FA3  72                 	db	114	;'r'
   507  007FA4  00                 	db	0
   508  007FA5                     STR_22:
   509  007FA5  31                 	db	49	;'1'
   510  007FA6  20                 	db	32
   511  007FA7  2D                 	db	45
   512  007FA8  20                 	db	32
   513  007FA9  4D                 	db	77	;'M'
   514  007FAA  65                 	db	101	;'e'
   515  007FAB  64                 	db	100	;'d'
   516  007FAC  69                 	db	105	;'i'
   517  007FAD  64                 	db	100	;'d'
   518  007FAE  61                 	db	97	;'a'
   519  007FAF  73                 	db	115	;'s'
   520  007FB0  00                 	db	0
   521  007FB1                     STR_1:
   522  007FB1  20                 	db	32
   523  007FB2  44                 	db	68	;'D'
   524  007FB3  69                 	db	105	;'i'
   525  007FB4  67                 	db	103	;'g'
   526  007FB5  69                 	db	105	;'i'
   527  007FB6  74                 	db	116	;'t'
   528  007FB7  65                 	db	101	;'e'
   529  007FB8  3A                 	db	58	;':'
   530  007FB9  0D                 	db	13
   531  007FBA  0A                 	db	10
   532  007FBB  00                 	db	0
   533  007FBC                     STR_26:
   534  007FBC  23                 	db	35
   535  007FBD  20                 	db	32
   536  007FBE  2D                 	db	45
   537  007FBF  20                 	db	32
   538  007FC0  56                 	db	86	;'V'
   539  007FC1  6F                 	db	111	;'o'
   540  007FC2  6C                 	db	108	;'l'
   541  007FC3  74                 	db	116	;'t'
   542  007FC4  61                 	db	97	;'a'
   543  007FC5  72                 	db	114	;'r'
   544  007FC6  00                 	db	0
   545  007FC7                     STR_5:
   546  007FC7  45                 	db	69	;'E'
   547  007FC8  53                 	db	83	;'S'
   548  007FC9  54                 	db	84	;'T'
   549  007FCA  4F                 	db	79	;'O'
   550  007FCB  51                 	db	81	;'Q'
   551  007FCC  55                 	db	85	;'U'
   552  007FCD  45                 	db	69	;'E'
   553  007FCE  3A                 	db	58	;':'
   554  007FCF  00                 	db	0
   555  007FD0                     STR_29:
   556  007FD0  23                 	db	35
   557  007FD1  20                 	db	32
   558  007FD2  2D                 	db	45
   559  007FD3  20                 	db	32
   560  007FD4  4D                 	db	77	;'M'
   561  007FD5  65                 	db	101	;'e'
   562  007FD6  6E                 	db	110	;'n'
   563  007FD7  75                 	db	117	;'u'
   564  007FD8  00                 	db	0
   565  007FD9                     STR_21:
   566  007FD9  4F                 	db	79	;'O'
   567  007FDA  50                 	db	80	;'P'
   568  007FDB  43                 	db	67	;'C'
   569  007FDC  4F                 	db	79	;'O'
   570  007FDD  45                 	db	69	;'E'
   571  007FDE  53                 	db	83	;'S'
   572  007FDF  3A                 	db	58	;':'
   573  007FE0  00                 	db	0
   574  007FE1                     STR_2:
   575  007FE1  44                 	db	68	;'D'
   576  007FE2  69                 	db	105	;'i'
   577  007FE3  67                 	db	103	;'g'
   578  007FE4  69                 	db	105	;'i'
   579  007FE5  74                 	db	116	;'t'
   580  007FE6  65                 	db	101	;'e'
   581  007FE7  3A                 	db	58	;':'
   582  007FE8  00                 	db	0
   583  007FE9                     STR_28:
   584  007FE9  45                 	db	69	;'E'
   585  007FEA  53                 	db	83	;'S'
   586  007FEB  43                 	db	67	;'C'
   587  007FEC  4F                 	db	79	;'O'
   588  007FED  4C                 	db	76	;'L'
   589  007FEE  48                 	db	72	;'H'
   590  007FEF  41                 	db	65	;'A'
   591  007FF0  00                 	db	0
   592  007FF1                     STR_15:
   593  007FF1  56                 	db	86	;'V'
   594  007FF2  61                 	db	97	;'a'
   595  007FF3  63                 	db	99	;'c'
   596  007FF4  2D                 	db	45
   597  007FF5  31                 	db	49	;'1'
   598  007FF6  34                 	db	52	;'4'
   599  007FF7  00                 	db	0
   600  007FF8                     STR_4:
   601  007FF8  46                 	db	70	;'F'
   602  007FF9  49                 	db	73	;'I'
   603  007FFA  4D                 	db	77	;'M'
   604  007FFB  00                 	db	0
   605  007FFC                     STR_17:
   606  007FFC  43                 	db	67	;'C'
   607  007FFD  00                 	db	0
   608  007FFE  00                 	db	0	; dummy byte at the end
   609  0000                     
   610                           ; #config settings
   611                           
   612                           	psect	cinit
   613  004B48                     __pcinit:
   614                           	callstack 0
   615  004B48                     start_initialization:
   616                           	callstack 0
   617  004B48                     __initialization:
   618                           	callstack 0
   619                           
   620                           ; Initialize objects allocated to BANK0 (52 bytes)
   621                           ; load TBLPTR registers with __pidataBANK0
   622  004B48  0E84               	movlw	low __pidataBANK0
   623  004B4A  6EF6               	movwf	tblptrl,c
   624  004B4C  0E49               	movlw	high __pidataBANK0
   625  004B4E  6EF7               	movwf	tblptrh,c
   626  004B50  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   627  004B52  6EF8               	movwf	tblptru,c
   628  004B54  EE00  F080         	lfsr	0,__pdataBANK0
   629  004B58  EE10 F034          	lfsr	1,52
   630  004B5C                     copy_data0:
   631  004B5C  0009               	tblrd		*+
   632  004B5E  CFF5 FFEE          	movff	tablat,postinc0
   633  004B62  50E5               	movf	postdec1,w,c
   634  004B64  50E1               	movf	fsr1l,w,c
   635  004B66  E1FA               	bnz	copy_data0
   636                           
   637                           ; Initialize objects allocated to COMRAM (12 bytes)
   638                           ; load TBLPTR registers with __pidataCOMRAM
   639  004B68  0E66               	movlw	low __pidataCOMRAM
   640  004B6A  6EF6               	movwf	tblptrl,c
   641  004B6C  0E48               	movlw	high __pidataCOMRAM
   642  004B6E  6EF7               	movwf	tblptrh,c
   643  004B70  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   644  004B72  6EF8               	movwf	tblptru,c
   645  004B74  EE00  F073         	lfsr	0,__pdataCOMRAM
   646  004B78  EE10 F00C          	lfsr	1,12
   647  004B7C                     copy_data1:
   648  004B7C  0009               	tblrd		*+
   649  004B7E  CFF5 FFEE          	movff	tablat,postinc0
   650  004B82  50E5               	movf	postdec1,w,c
   651  004B84  50E1               	movf	fsr1l,w,c
   652  004B86  E1FA               	bnz	copy_data1
   653                           
   654                           ; Clear objects allocated to COMRAM (22 bytes)
   655  004B88  EE00  F05D         	lfsr	0,__pbssCOMRAM
   656  004B8C  0E16               	movlw	22
   657  004B8E                     clear_0:
   658  004B8E  6AEE               	clrf	postinc0,c
   659  004B90  06E8               	decf	wreg,f,c
   660  004B92  E1FD               	bnz	clear_0
   661  004B94                     end_of_initialization:
   662                           	callstack 0
   663  004B94                     __end_of__initialization:
   664                           	callstack 0
   665  004B94  0E00               	movlw	low (__Lmediumconst shr (0+16))
   666  004B96  6EF8               	movwf	tblptru,c
   667  004B98  0100               	movlb	0
   668  004B9A  EF87  F037         	goto	_main	;jump to C main() function
   669                           
   670                           	psect	bssCOMRAM
   671  00005D                     __pbssCOMRAM:
   672                           	callstack 0
   673  00005D                     _estoque:
   674                           	callstack 0
   675  00005D                     	ds	2
   676  00005F                     _auxiliar:
   677                           	callstack 0
   678  00005F                     	ds	2
   679  000061                     kpDebounce@valorAntigo:
   680                           	callstack 0
   681  000061                     	ds	2
   682  000063                     kpDebounce@valorNovo:
   683                           	callstack 0
   684  000063                     	ds	2
   685  000065                     _valor:
   686                           	callstack 0
   687  000065                     	ds	2
   688  000067                     _v3:
   689                           	callstack 0
   690  000067                     	ds	1
   691  000068                     _v2:
   692                           	callstack 0
   693  000068                     	ds	1
   694  000069                     _v1:
   695                           	callstack 0
   696  000069                     	ds	1
   697  00006A                     _v0:
   698                           	callstack 0
   699  00006A                     	ds	1
   700  00006B                     _display:
   701                           	callstack 0
   702  00006B                     	ds	1
   703  00006C                     kpDebounce@tempo:
   704                           	callstack 0
   705  00006C                     	ds	1
   706  00006D                     _str:
   707                           	callstack 0
   708  00006D                     	ds	6
   709                           
   710                           	psect	dataCOMRAM
   711  000073                     __pdataCOMRAM:
   712                           	callstack 0
   713  000073                     _tempPontos:
   714                           	callstack 0
   715  000073                     	ds	4
   716  000077                     _tempLiquido:
   717                           	callstack 0
   718  000077                     	ds	4
   719  00007B                     _temperatura:
   720                           	callstack 0
   721  00007B                     	ds	4
   722                           
   723                           	psect	dataBANK0
   724  000080                     __pdataBANK0:
   725                           	callstack 0
   726  000080                     ligar@F2436:
   727                           	callstack 0
   728  000080                     	ds	16
   729  000090                     inicia@F2432:
   730                           	callstack 0
   731  000090                     	ds	16
   732  0000A0                     _minimo:
   733                           	callstack 0
   734  0000A0                     	ds	4
   735  0000A4                     _maximo:
   736                           	callstack 0
   737  0000A4                     	ds	4
   738  0000A8                     _ponto2:
   739                           	callstack 0
   740  0000A8                     	ds	4
   741  0000AC                     _ponto1:
   742                           	callstack 0
   743  0000AC                     	ds	4
   744  0000B0                     _limiteInferior:
   745                           	callstack 0
   746  0000B0                     	ds	2
   747  0000B2                     _limiteSuperior:
   748                           	callstack 0
   749  0000B2                     	ds	2
   750                           
   751                           	psect	cstackCOMRAM
   752  000001                     __pcstackCOMRAM:
   753                           	callstack 0
   754  000001                     ??_kpDebounce:
   755  000001                     ?_kpRead:
   756                           	callstack 0
   757  000001                     ?___wmul:
   758                           	callstack 0
   759  000001                     ?___lwmod:
   760                           	callstack 0
   761  000001                     ?___aldiv:
   762                           	callstack 0
   763  000001                     ?___xxtofl:
   764                           	callstack 0
   765  000001                     lcd_wr@val:
   766                           	callstack 0
   767  000001                     Delay40us@i:
   768                           	callstack 0
   769  000001                     serial_tx@val:
   770                           	callstack 0
   771  000001                     sobe@i:
   772                           	callstack 0
   773  000001                     desce@i:
   774                           	callstack 0
   775  000001                     atraso_ms@valor:
   776                           	callstack 0
   777  000001                     digitalWrite@pin:
   778                           	callstack 0
   779  000001                     pinMode@pin:
   780                           	callstack 0
   781  000001                     ___wmul@multiplier:
   782                           	callstack 0
   783  000001                     ___lwmod@dividend:
   784                           	callstack 0
   785  000001                     ___aldiv@dividend:
   786                           	callstack 0
   787  000001                     ___fleq@ff1:
   788                           	callstack 0
   789  000001                     ___flge@ff1:
   790                           	callstack 0
   791  000001                     ___xxtofl@val:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0x0
   795  000001                     	ds	1
   796  000002                     Delay2ms@i:
   797                           	callstack 0
   798  000002                     sobe@k:
   799                           	callstack 0
   800  000002                     desce@k:
   801                           	callstack 0
   802  000002                     serial_tx_str@val:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x1
   806  000002                     	ds	1
   807  000003                     sobe@before:
   808                           	callstack 0
   809  000003                     desce@before:
   810                           	callstack 0
   811  000003                     atraso_ms@i:
   812                           	callstack 0
   813  000003                     digitalWrite@value:
   814                           	callstack 0
   815  000003                     pinMode@type:
   816                           	callstack 0
   817  000003                     ___wmul@multiplicand:
   818                           	callstack 0
   819  000003                     ___lwmod@divisor:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x2
   823  000003                     	ds	1
   824  000004                     ??_serial_tx_str:
   825  000004                     sobe@j:
   826                           	callstack 0
   827  000004                     desce@j:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x3
   831  000004                     	ds	1
   832  000005                     ??_digitalWrite:
   833  000005                     ??_pinMode:
   834  000005                     ??___xxtofl:
   835  000005                     atraso_ms@j:
   836                           	callstack 0
   837  000005                     ___lwmod@counter:
   838                           	callstack 0
   839  000005                     ___wmul@product:
   840                           	callstack 0
   841  000005                     ___aldiv@divisor:
   842                           	callstack 0
   843  000005                     ___fleq@ff2:
   844                           	callstack 0
   845  000005                     ___flge@ff2:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x4
   849  000005                     	ds	1
   850  000006                     ?___lwdiv:
   851                           	callstack 0
   852  000006                     atraso_ms@k:
   853                           	callstack 0
   854  000006                     kpDebounce@old_D:
   855                           	callstack 0
   856  000006                     serial_tx_str@i:
   857                           	callstack 0
   858  000006                     ___lwdiv@dividend:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x5
   862  000006                     	ds	1
   863  000007                     ??_ssdUpdate:
   864  000007                     lcd_cmd@val:
   865                           	callstack 0
   866  000007                     lcd_dat@val:
   867                           	callstack 0
   868  000007                     lcdCommand@old_D:
   869                           	callstack 0
   870  000007                     lcdData@valor:
   871                           	callstack 0
   872  000007                     kpDebounce@k:
   873                           	callstack 0
   874  000007                     serial_rx@timeout:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x6
   878  000007                     	ds	1
   879  000008                     lcdCommand@cmd:
   880                           	callstack 0
   881  000008                     lcdData@old_D:
   882                           	callstack 0
   883  000008                     lcd_str@str:
   884                           	callstack 0
   885  000008                     shift_texto@tempo:
   886                           	callstack 0
   887  000008                     ___lwdiv@divisor:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x7
   891  000008                     	ds	1
   892  000009                     ??___fleq:
   893  000009                     ??___flge:
   894  000009                     kpDebounce@j:
   895                           	callstack 0
   896  000009                     ___aldiv@counter:
   897                           	callstack 0
   898  000009                     ___xxtofl@sign:
   899                           	callstack 0
   900  000009                     serial_rx@to:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x8
   904  000009                     	ds	1
   905  00000A                     ??_lcd_str:
   906  00000A                     kpDebounce@i:
   907                           	callstack 0
   908  00000A                     shift_texto@i:
   909                           	callstack 0
   910  00000A                     ___aldiv@sign:
   911                           	callstack 0
   912  00000A                     ___xxtofl@exp:
   913                           	callstack 0
   914  00000A                     ___lwdiv@quotient:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x9
   918  00000A                     	ds	1
   919  00000B                     ___aldiv@quotient:
   920                           	callstack 0
   921  00000B                     ___xxtofl@arg:
   922                           	callstack 0
   923  00000B                     inicia@desenho:
   924                           	callstack 0
   925                           
   926                           ; 16 bytes @ 0xA
   927  00000B                     	ds	1
   928  00000C                     lcd_str@i:
   929                           	callstack 0
   930  00000C                     ___lwdiv@counter:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0xB
   934  00000C                     	ds	1
   935  00000D                     ??_pwmSet1:
   936  00000D                     ?_serial:
   937                           	callstack 0
   938  00000D                     ssdDigit@pos:
   939                           	callstack 0
   940  00000D                     ligar@logo:
   941                           	callstack 0
   942                           
   943                           ; 16 bytes @ 0xC
   944  00000D                     	ds	1
   945  00000E                     ssdDigit@val:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0xD
   949  00000E                     	ds	1
   950  00000F                     ?___flmul:
   951                           	callstack 0
   952  00000F                     pwmSet1@porcento:
   953                           	callstack 0
   954  00000F                     serial@i:
   955                           	callstack 0
   956  00000F                     pwmFrequency@freq:
   957                           	callstack 0
   958  00000F                     ___flmul@b:
   959                           	callstack 0
   960                           
   961                           ; 4 bytes @ 0xE
   962  00000F                     	ds	1
   963  000010                     serial@tmp:
   964                           	callstack 0
   965  000010                     pwmSet1@val:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0xF
   969  000010                     	ds	1
   970  000011                     perigo@k:
   971                           	callstack 0
   972  000011                     controleEstoque@tecla:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x10
   976  000011                     	ds	1
   977  000012                     perigo@i:
   978                           	callstack 0
   979                           
   980                           ; 1 bytes @ 0x11
   981  000012                     	ds	1
   982  000013                     controleEstoque@i:
   983                           	callstack 0
   984  000013                     ___flmul@a:
   985                           	callstack 0
   986                           
   987                           ; 4 bytes @ 0x12
   988  000013                     	ds	1
   989  000014                     controleEstoque@opc:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x13
   993  000014                     	ds	2
   994  000016                     controleEstoque@aux:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x15
   998  000016                     	ds	1
   999  000017                     ??___flmul:
  1000                           
  1001                           ; 1 bytes @ 0x16
  1002  000017                     	ds	4
  1003  00001B                     inicia@i:
  1004                           	callstack 0
  1005  00001B                     ___flmul@sign:
  1006                           	callstack 0
  1007                           
  1008                           ; 1 bytes @ 0x1A
  1009  00001B                     	ds	1
  1010  00001C                     ___flmul@grs:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x1B
  1014  00001C                     	ds	1
  1015  00001D                     ligar@i:
  1016                           	callstack 0
  1017                           
  1018                           ; 1 bytes @ 0x1C
  1019  00001D                     	ds	3
  1020  000020                     ___flmul@aexp:
  1021                           	callstack 0
  1022                           
  1023                           ; 1 bytes @ 0x1F
  1024  000020                     	ds	1
  1025  000021                     ___flmul@bexp:
  1026                           	callstack 0
  1027                           
  1028                           ; 1 bytes @ 0x20
  1029  000021                     	ds	1
  1030  000022                     ___flmul@prod:
  1031                           	callstack 0
  1032                           
  1033                           ; 4 bytes @ 0x21
  1034  000022                     	ds	4
  1035  000026                     ___flmul@temp:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x25
  1039  000026                     	ds	2
  1040  000028                     ?___fladd:
  1041                           	callstack 0
  1042  000028                     ?___fltol:
  1043                           	callstack 0
  1044  000028                     ___fltol@f1:
  1045                           	callstack 0
  1046  000028                     ___fladd@b:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0x27
  1050  000028                     	ds	4
  1051  00002C                     ??___fltol:
  1052  00002C                     ___fladd@a:
  1053                           	callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x2B
  1056  00002C                     	ds	4
  1057  000030                     ??___fladd:
  1058  000030                     ___fltol@sign1:
  1059                           	callstack 0
  1060                           
  1061                           ; 1 bytes @ 0x2F
  1062  000030                     	ds	1
  1063  000031                     ___fltol@exp1:
  1064                           	callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x30
  1067  000031                     	ds	1
  1068  000032                     itoa@val:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x31
  1072  000032                     	ds	2
  1073  000034                     ___fladd@signs:
  1074                           	callstack 0
  1075  000034                     itoa@str:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x33
  1079  000034                     	ds	1
  1080  000035                     ___fladd@aexp:
  1081                           	callstack 0
  1082                           
  1083                           ; 1 bytes @ 0x34
  1084  000035                     	ds	1
  1085  000036                     ___fladd@bexp:
  1086                           	callstack 0
  1087                           
  1088                           ; 1 bytes @ 0x35
  1089  000036                     	ds	1
  1090  000037                     ___fladd@grs:
  1091                           	callstack 0
  1092                           
  1093                           ; 1 bytes @ 0x36
  1094  000037                     	ds	1
  1095  000038                     ?___fldiv:
  1096                           	callstack 0
  1097  000038                     ?___flsub:
  1098                           	callstack 0
  1099  000038                     fecharPorta@cont:
  1100                           	callstack 0
  1101  000038                     ___flsub@b:
  1102                           	callstack 0
  1103  000038                     ___fldiv@b:
  1104                           	callstack 0
  1105                           
  1106                           ; 4 bytes @ 0x37
  1107  000038                     	ds	2
  1108  00003A                     
  1109                           ; 1 bytes @ 0x39
  1110  00003A                     	ds	2
  1111  00003C                     ___flsub@a:
  1112                           	callstack 0
  1113  00003C                     ___fldiv@a:
  1114                           	callstack 0
  1115                           
  1116                           ; 4 bytes @ 0x3B
  1117  00003C                     	ds	4
  1118  000040                     ??___fldiv:
  1119  000040                     
  1120                           ; 1 bytes @ 0x3F
  1121  000040                     	ds	4
  1122  000044                     ___fldiv@rem:
  1123                           	callstack 0
  1124                           
  1125                           ; 4 bytes @ 0x43
  1126  000044                     	ds	4
  1127  000048                     ___fldiv@sign:
  1128                           	callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x47
  1131  000048                     	ds	1
  1132  000049                     ___fldiv@new_exp:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x48
  1136  000049                     	ds	2
  1137  00004B                     ___fldiv@grs:
  1138                           	callstack 0
  1139                           
  1140                           ; 4 bytes @ 0x4A
  1141  00004B                     	ds	4
  1142  00004F                     ___fldiv@bexp:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x4E
  1146  00004F                     	ds	1
  1147  000050                     ___fldiv@aexp:
  1148                           	callstack 0
  1149                           
  1150                           ; 1 bytes @ 0x4F
  1151  000050                     	ds	1
  1152  000051                     resfria@cont:
  1153                           	callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x50
  1156  000051                     	ds	2
  1157  000053                     main@tecla:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x52
  1161  000053                     	ds	2
  1162  000055                     main@controle:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x54
  1166  000055                     	ds	2
  1167  000057                     main@aux:
  1168                           	callstack 0
  1169                           
  1170                           ; 4 bytes @ 0x56
  1171  000057                     	ds	4
  1172  00005B                     main@cont:
  1173                           	callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x5A
  1176  00005B                     	ds	2
  1177                           
  1178 ;;
  1179 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1180 ;;
  1181 ;; *************** function _main *****************
  1182 ;; Defined at:
  1183 ;;		line 544 in file "main.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;		None
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  aux             4   86[COMRAM] float 
  1188 ;;  cont            2   90[COMRAM] unsigned int 
  1189 ;;  controle        2   84[COMRAM] unsigned int 
  1190 ;;  tecla           2   82[COMRAM] unsigned int 
  1191 ;;  i               1    0        unsigned char 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1201 ;;      Params:         0       0       0       0       0       0       0
  1202 ;;      Locals:        10       0       0       0       0       0       0
  1203 ;;      Temps:          0       0       0       0       0       0       0
  1204 ;;      Totals:        10       0       0       0       0       0       0
  1205 ;;Total ram usage:       10 bytes
  1206 ;; Hardware stack levels required when called: 5
  1207 ;; This function calls:
  1208 ;;		___fladd
  1209 ;;		___fleq
  1210 ;;		_alerta
  1211 ;;		_aquece
  1212 ;;		_atraso_ms
  1213 ;;		_atualizar
  1214 ;;		_controleEstoque
  1215 ;;		_fecharPorta
  1216 ;;		_imprime
  1217 ;;		_inicia
  1218 ;;		_instrucoes
  1219 ;;		_kpDebounce
  1220 ;;		_kpInit
  1221 ;;		_kpRead
  1222 ;;		_lcdCommand
  1223 ;;		_lcd_cmd
  1224 ;;		_lcd_init
  1225 ;;		_lcd_str
  1226 ;;		_ligar
  1227 ;;		_maxEmin
  1228 ;;		_perigo
  1229 ;;		_pwmInit
  1230 ;;		_resfria
  1231 ;;		_serial_init
  1232 ;;		_ssdEstoque
  1233 ;;		_ssdInit
  1234 ;;		_ssdUpdate
  1235 ;; This function is called by:
  1236 ;;		Startup code after reset
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text0
  1241  006F0E                     __ptext0:
  1242                           	callstack 0
  1243  006F0E                     _main:
  1244                           	callstack 26
  1245  006F0E                     
  1246                           ;main.c: 545:     char i;;main.c: 546:     float aux = 0;
  1247  006F0E  0E00               	movlw	0
  1248  006F10  6E57               	movwf	main@aux^0,c
  1249  006F12  0E00               	movlw	0
  1250  006F14  6E58               	movwf	(main@aux+1)^0,c
  1251  006F16  0E00               	movlw	0
  1252  006F18  6E59               	movwf	(main@aux+2)^0,c
  1253  006F1A  0E00               	movlw	0
  1254  006F1C  6E5A               	movwf	(main@aux+3)^0,c
  1255                           
  1256                           ;main.c: 547:     unsigned int tecla = 16, controle = 0, cont = 0;
  1257  006F1E  0E00               	movlw	0
  1258  006F20  6E54               	movwf	(main@tecla+1)^0,c
  1259  006F22  0E10               	movlw	16
  1260  006F24  6E53               	movwf	main@tecla^0,c
  1261  006F26  0E00               	movlw	0
  1262  006F28  6E56               	movwf	(main@controle+1)^0,c
  1263  006F2A  0E00               	movlw	0
  1264  006F2C  6E55               	movwf	main@controle^0,c
  1265  006F2E  0E00               	movlw	0
  1266  006F30  6E5C               	movwf	(main@cont+1)^0,c
  1267  006F32  0E00               	movlw	0
  1268  006F34  6E5B               	movwf	main@cont^0,c
  1269                           
  1270                           ;main.c: 548:     TRISA = 0xC3;
  1271  006F36  0EC3               	movlw	195
  1272  006F38  6E92               	movwf	146,c	;volatile
  1273                           
  1274                           ;main.c: 549:     TRISB = 0x03;
  1275  006F3A  0E03               	movlw	3
  1276  006F3C  6E93               	movwf	147,c	;volatile
  1277                           
  1278                           ;main.c: 550:     TRISC = 0x00;
  1279  006F3E  0E00               	movlw	0
  1280  006F40  6E94               	movwf	148,c	;volatile
  1281                           
  1282                           ;main.c: 551:     TRISD = 0x00;
  1283  006F42  0E00               	movlw	0
  1284  006F44  6E95               	movwf	149,c	;volatile
  1285                           
  1286                           ;main.c: 552:     TRISE = 0x00;
  1287  006F46  0E00               	movlw	0
  1288  006F48  6E96               	movwf	150,c	;volatile
  1289                           
  1290                           ;main.c: 553:     PORTD = 0x00;
  1291  006F4A  0E00               	movlw	0
  1292  006F4C  6E83               	movwf	131,c	;volatile
  1293  006F4E                     
  1294                           ;main.c: 556:     lcd_init();
  1295  006F4E  ECFB  F025         	call	_lcd_init	;wreg free
  1296  006F52                     
  1297                           ;main.c: 557:     ssdInit();
  1298  006F52  EC79  F025         	call	_ssdInit	;wreg free
  1299  006F56                     
  1300                           ;main.c: 558:     pwmInit();
  1301  006F56  EC39  F024         	call	_pwmInit	;wreg free
  1302  006F5A                     
  1303                           ;main.c: 559:     serial_init();
  1304  006F5A  EC43  F024         	call	_serial_init	;wreg free
  1305  006F5E                     
  1306                           ;main.c: 560:     lcd_cmd(0x0C);
  1307  006F5E  0E0C               	movlw	12
  1308  006F60  EC98  F024         	call	_lcd_cmd
  1309  006F64                     
  1310                           ;main.c: 563:     inicia();
  1311  006F64  EC29  F033         	call	_inicia	;wreg free
  1312  006F68                     
  1313                           ;main.c: 564:     ligar();
  1314  006F68  ECBB  F028         	call	_ligar	;wreg free
  1315  006F6C                     
  1316                           ;main.c: 567:     temperatura = (limiteSuperior + limiteInferior) / 2;
  1317  006F6C  0E00               	movlw	0
  1318  006F6E  6E7B               	movwf	_temperatura^0,c
  1319  006F70  0E00               	movlw	0
  1320  006F72  6E7C               	movwf	(_temperatura+1)^0,c
  1321  006F74  0EA0               	movlw	160
  1322  006F76  6E7D               	movwf	(_temperatura+2)^0,c
  1323  006F78  0E40               	movlw	64
  1324  006F7A  6E7E               	movwf	(_temperatura+3)^0,c
  1325  006F7C                     
  1326                           ;main.c: 568:     ponto1 = temperatura;
  1327  006F7C  C07B  F0AC         	movff	_temperatura,_ponto1
  1328  006F80  C07C  F0AD         	movff	_temperatura+1,_ponto1+1
  1329  006F84  C07D  F0AE         	movff	_temperatura+2,_ponto1+2
  1330  006F88  C07E  F0AF         	movff	_temperatura+3,_ponto1+3
  1331  006F8C                     
  1332                           ;main.c: 569:     ponto2 = temperatura;
  1333  006F8C  C07B  F0A8         	movff	_temperatura,_ponto2
  1334  006F90  C07C  F0A9         	movff	_temperatura+1,_ponto2+1
  1335  006F94  C07D  F0AA         	movff	_temperatura+2,_ponto2+2
  1336  006F98  C07E  F0AB         	movff	_temperatura+3,_ponto2+3
  1337  006F9C                     
  1338                           ;main.c: 570:     tempLiquido = temperatura;
  1339  006F9C  C07B  F077         	movff	_temperatura,_tempLiquido
  1340  006FA0  C07C  F078         	movff	_temperatura+1,_tempLiquido+1
  1341  006FA4  C07D  F079         	movff	_temperatura+2,_tempLiquido+2
  1342  006FA8  C07E  F07A         	movff	_temperatura+3,_tempLiquido+3
  1343  006FAC                     
  1344                           ;main.c: 571:     tempPontos = temperatura;
  1345  006FAC  C07B  F073         	movff	_temperatura,_tempPontos
  1346  006FB0  C07C  F074         	movff	_temperatura+1,_tempPontos+1
  1347  006FB4  C07D  F075         	movff	_temperatura+2,_tempPontos+2
  1348  006FB8  C07E  F076         	movff	_temperatura+3,_tempPontos+3
  1349  006FBC                     
  1350                           ;main.c: 572:     maximo = temperatura;
  1351  006FBC  C07B  F0A4         	movff	_temperatura,_maximo
  1352  006FC0  C07C  F0A5         	movff	_temperatura+1,_maximo+1
  1353  006FC4  C07D  F0A6         	movff	_temperatura+2,_maximo+2
  1354  006FC8  C07E  F0A7         	movff	_temperatura+3,_maximo+3
  1355  006FCC                     
  1356                           ;main.c: 573:     minimo = temperatura;
  1357  006FCC  C07B  F0A0         	movff	_temperatura,_minimo
  1358  006FD0  C07C  F0A1         	movff	_temperatura+1,_minimo+1
  1359  006FD4  C07D  F0A2         	movff	_temperatura+2,_minimo+2
  1360  006FD8  C07E  F0A3         	movff	_temperatura+3,_minimo+3
  1361  006FDC                     
  1362                           ;main.c: 575:     lcdCommand(0x01);
  1363  006FDC  0E01               	movlw	1
  1364  006FDE  EC69  F027         	call	_lcdCommand
  1365  006FE2                     
  1366                           ;main.c: 578:     kpInit();
  1367  006FE2  EC29  F024         	call	_kpInit	;wreg free
  1368  006FE6                     l4874:
  1369                           
  1370                           ;main.c: 581:         kpDebounce();
  1371  006FE6  EC39  F02F         	call	_kpDebounce	;wreg free
  1372  006FEA                     
  1373                           ;main.c: 582:         if (controle == 0) {
  1374  006FEA  5055               	movf	main@controle^0,w,c
  1375  006FEC  1056               	iorwf	(main@controle+1)^0,w,c
  1376  006FEE  A4D8               	btfss	status,2,c
  1377  006FF0  EFFC  F037         	goto	u5191
  1378  006FF4  EFFE  F037         	goto	u5190
  1379  006FF8                     u5191:
  1380  006FF8  EF16  F038         	goto	l4890
  1381  006FFC                     u5190:
  1382  006FFC                     
  1383                           ;main.c: 583:             controle = 1;
  1384  006FFC  0E00               	movlw	0
  1385  006FFE  6E56               	movwf	(main@controle+1)^0,c
  1386  007000  0E01               	movlw	1
  1387  007002  6E55               	movwf	main@controle^0,c
  1388  007004                     
  1389                           ;main.c: 584:             instrucoes();
  1390  007004  EC72  F028         	call	_instrucoes	;wreg free
  1391  007008                     
  1392                           ;main.c: 585:             lcd_cmd(0x80);
  1393  007008  0E80               	movlw	128
  1394  00700A  EC98  F024         	call	_lcd_cmd
  1395  00700E                     
  1396                           ;main.c: 586:             lcd_str("ESCOLHA");
  1397  00700E  0EE9               	movlw	low STR_28
  1398  007010  6E08               	movwf	lcd_str@str^0,c
  1399  007012  0E7F               	movlw	high STR_28
  1400  007014  6E09               	movwf	(lcd_str@str+1)^0,c
  1401  007016  ECFF  F024         	call	_lcd_str	;wreg free
  1402  00701A                     
  1403                           ;main.c: 587:             lcd_cmd(0x90);
  1404  00701A  0E90               	movlw	144
  1405  00701C  EC98  F024         	call	_lcd_cmd
  1406  007020                     
  1407                           ;main.c: 588:             lcd_str("# - Menu");
  1408  007020  0ED0               	movlw	low STR_29
  1409  007022  6E08               	movwf	lcd_str@str^0,c
  1410  007024  0E7F               	movlw	high STR_29
  1411  007026  6E09               	movwf	(lcd_str@str+1)^0,c
  1412  007028  ECFF  F024         	call	_lcd_str	;wreg free
  1413  00702C                     l4890:
  1414                           
  1415                           ;main.c: 590:         if (kpRead() != tecla) {
  1416  00702C  EC2E  F024         	call	_kpRead	;wreg free
  1417  007030  5053               	movf	main@tecla^0,w,c
  1418  007032  1801               	xorwf	?_kpRead^0,w,c
  1419  007034  E109               	bnz	u5200
  1420  007036  5054               	movf	(main@tecla+1)^0,w,c
  1421  007038  1802               	xorwf	(?_kpRead+1)^0,w,c
  1422  00703A  B4D8               	btfsc	status,2,c
  1423  00703C  EF22  F038         	goto	u5201
  1424  007040  EF24  F038         	goto	u5200
  1425  007044                     u5201:
  1426  007044  EF97  F038         	goto	l4934
  1427  007048                     u5200:
  1428  007048                     
  1429                           ;main.c: 591:             tecla = kpRead();
  1430  007048  EC2E  F024         	call	_kpRead	;wreg free
  1431  00704C  C001  F053         	movff	?_kpRead,main@tecla
  1432  007050  C002  F054         	movff	?_kpRead+1,main@tecla+1
  1433                           
  1434                           ;main.c: 593:             if (((kpRead()) & (1<<(3)))) {
  1435  007054  EC2E  F024         	call	_kpRead	;wreg free
  1436  007058  A601               	btfss	?_kpRead^0,3,c
  1437  00705A  EF31  F038         	goto	u5211
  1438  00705E  EF33  F038         	goto	u5210
  1439  007062                     u5211:
  1440  007062  EF35  F038         	goto	l4896
  1441  007066                     u5210:
  1442  007066                     
  1443                           ;main.c: 594:                 imprime();
  1444  007066  EC7C  F031         	call	_imprime	;wreg free
  1445  00706A                     l4896:
  1446                           
  1447                           ;main.c: 596:             if (((kpRead()) & (1<<(7)))) {
  1448  00706A  EC2E  F024         	call	_kpRead	;wreg free
  1449  00706E  AE01               	btfss	?_kpRead^0,7,c
  1450  007070  EF3C  F038         	goto	u5221
  1451  007074  EF3E  F038         	goto	u5220
  1452  007078                     u5221:
  1453  007078  EF59  F038         	goto	l4912
  1454  00707C                     u5220:
  1455  00707C                     
  1456                           ;main.c: 597:                 controleEstoque();
  1457  00707C  EC17  F034         	call	_controleEstoque	;wreg free
  1458  007080                     
  1459                           ;main.c: 598:                 lcd_cmd(0x01);
  1460  007080  0E01               	movlw	1
  1461  007082  EC98  F024         	call	_lcd_cmd
  1462  007086                     
  1463                           ;main.c: 599:                 lcd_cmd(0x80);
  1464  007086  0E80               	movlw	128
  1465  007088  EC98  F024         	call	_lcd_cmd
  1466  00708C                     
  1467                           ;main.c: 600:                 lcd_str("##PORTA ABERTA");
  1468  00708C  0E48               	movlw	low STR_38
  1469  00708E  6E08               	movwf	lcd_str@str^0,c
  1470  007090  0E7F               	movlw	high STR_38
  1471  007092  6E09               	movwf	(lcd_str@str+1)^0,c
  1472  007094  ECFF  F024         	call	_lcd_str	;wreg free
  1473  007098                     
  1474                           ;main.c: 601:                 lcd_cmd(0x90);
  1475  007098  0E90               	movlw	144
  1476  00709A  EC98  F024         	call	_lcd_cmd
  1477  00709E                     
  1478                           ;main.c: 602:                 lcd_str("3 - Fechar Porta");
  1479  00709E  0E07               	movlw	low STR_24
  1480  0070A0  6E08               	movwf	lcd_str@str^0,c
  1481  0070A2  0E7F               	movlw	high STR_24
  1482  0070A4  6E09               	movwf	(lcd_str@str+1)^0,c
  1483  0070A6  ECFF  F024         	call	_lcd_str	;wreg free
  1484  0070AA                     
  1485                           ;main.c: 603:                 cont = 3;
  1486  0070AA  0E00               	movlw	0
  1487  0070AC  6E5C               	movwf	(main@cont+1)^0,c
  1488  0070AE  0E03               	movlw	3
  1489  0070B0  6E5B               	movwf	main@cont^0,c
  1490  0070B2                     l4912:
  1491                           
  1492                           ;main.c: 605:             if (((kpRead()) & (1<<(11)))) {
  1493  0070B2  EC2E  F024         	call	_kpRead	;wreg free
  1494  0070B6  A602               	btfss	(?_kpRead+1)^0,3,c
  1495  0070B8  EF60  F038         	goto	u5231
  1496  0070BC  EF62  F038         	goto	u5230
  1497  0070C0                     u5231:
  1498  0070C0  EF7C  F038         	goto	l4924
  1499  0070C4                     u5230:
  1500  0070C4                     
  1501                           ;main.c: 606:                 if (cont != 0)
  1502  0070C4  505B               	movf	main@cont^0,w,c
  1503  0070C6  105C               	iorwf	(main@cont+1)^0,w,c
  1504  0070C8  B4D8               	btfsc	status,2,c
  1505  0070CA  EF69  F038         	goto	u5241
  1506  0070CE  EF6B  F038         	goto	u5240
  1507  0070D2                     u5241:
  1508  0070D2  EF71  F038         	goto	l4918
  1509  0070D6                     u5240:
  1510  0070D6                     
  1511                           ;main.c: 607:                     fecharPorta(cont);
  1512  0070D6  C05B  F038         	movff	main@cont,fecharPorta@cont
  1513  0070DA  C05C  F039         	movff	main@cont+1,fecharPorta@cont+1
  1514  0070DE  ECA8  F027         	call	_fecharPorta	;wreg free
  1515  0070E2                     l4918:
  1516                           
  1517                           ;main.c: 608:                 cont = 0;
  1518  0070E2  0E00               	movlw	0
  1519  0070E4  6E5C               	movwf	(main@cont+1)^0,c
  1520  0070E6  0E00               	movlw	0
  1521  0070E8  6E5B               	movwf	main@cont^0,c
  1522  0070EA                     
  1523                           ;main.c: 609:                 lcd_cmd(0x01);
  1524  0070EA  0E01               	movlw	1
  1525  0070EC  EC98  F024         	call	_lcd_cmd
  1526  0070F0                     
  1527                           ;main.c: 610:                 controle = 0;
  1528  0070F0  0E00               	movlw	0
  1529  0070F2  6E56               	movwf	(main@controle+1)^0,c
  1530  0070F4  0E00               	movlw	0
  1531  0070F6  6E55               	movwf	main@controle^0,c
  1532  0070F8                     l4924:
  1533                           
  1534                           ;main.c: 613:             if (((kpRead()) & (1<<(2)))) {
  1535  0070F8  EC2E  F024         	call	_kpRead	;wreg free
  1536  0070FC  A401               	btfss	?_kpRead^0,2,c
  1537  0070FE  EF83  F038         	goto	u5251
  1538  007102  EF85  F038         	goto	u5250
  1539  007106                     u5251:
  1540  007106  EF87  F038         	goto	l4928
  1541  00710A                     u5250:
  1542  00710A                     
  1543                           ;main.c: 614:                 maxEmin();
  1544  00710A  ECF6  F02F         	call	_maxEmin	;wreg free
  1545  00710E                     l4928:
  1546                           
  1547                           ;main.c: 616:             if (((kpRead()) & (1<<(8)))) {
  1548  00710E  EC2E  F024         	call	_kpRead	;wreg free
  1549  007112  A002               	btfss	(?_kpRead+1)^0,0,c
  1550  007114  EF8E  F038         	goto	u5261
  1551  007118  EF90  F038         	goto	u5260
  1552  00711C                     u5261:
  1553  00711C  EF97  F038         	goto	l4934
  1554  007120                     u5260:
  1555  007120                     
  1556                           ;main.c: 617:                 lcd_cmd(0x01);
  1557  007120  0E01               	movlw	1
  1558  007122  EC98  F024         	call	_lcd_cmd
  1559  007126                     
  1560                           ;main.c: 618:                 controle = 0;
  1561  007126  0E00               	movlw	0
  1562  007128  6E56               	movwf	(main@controle+1)^0,c
  1563  00712A  0E00               	movlw	0
  1564  00712C  6E55               	movwf	main@controle^0,c
  1565  00712E                     l4934:
  1566                           
  1567                           ;main.c: 622:         alerta();
  1568  00712E  EC92  F02C         	call	_alerta	;wreg free
  1569  007132                     
  1570                           ;main.c: 623:         perigo();
  1571  007132  ECB6  F030         	call	_perigo	;wreg free
  1572  007136                     
  1573                           ;main.c: 624:         atualizar();
  1574  007136  EC7C  F02E         	call	_atualizar	;wreg free
  1575  00713A                     
  1576                           ;main.c: 625:         resfria();
  1577  00713A  EC31  F02D         	call	_resfria	;wreg free
  1578  00713E                     
  1579                           ;main.c: 626:         aquece();
  1580  00713E  EC11  F02A         	call	_aquece	;wreg free
  1581  007142                     
  1582                           ;main.c: 627:         aux++;
  1583  007142  C057  F028         	movff	main@aux,___fladd@b
  1584  007146  C058  F029         	movff	main@aux+1,___fladd@b+1
  1585  00714A  C059  F02A         	movff	main@aux+2,___fladd@b+2
  1586  00714E  C05A  F02B         	movff	main@aux+3,___fladd@b+3
  1587  007152  0E00               	movlw	0
  1588  007154  6E2C               	movwf	___fladd@a^0,c
  1589  007156  0E00               	movlw	0
  1590  007158  6E2D               	movwf	(___fladd@a+1)^0,c
  1591  00715A  0E80               	movlw	128
  1592  00715C  6E2E               	movwf	(___fladd@a+2)^0,c
  1593  00715E  0E3F               	movlw	63
  1594  007160  6E2F               	movwf	(___fladd@a+3)^0,c
  1595  007162  ECE8  F03C         	call	___fladd	;wreg free
  1596  007166  C028  F057         	movff	?___fladd,main@aux
  1597  00716A  C029  F058         	movff	?___fladd+1,main@aux+1
  1598  00716E  C02A  F059         	movff	?___fladd+2,main@aux+2
  1599  007172  C02B  F05A         	movff	?___fladd+3,main@aux+3
  1600  007176                     
  1601                           ;main.c: 629:         if (aux == 10000) {
  1602  007176  C057  F001         	movff	main@aux,___fleq@ff1
  1603  00717A  C058  F002         	movff	main@aux+1,___fleq@ff1+1
  1604  00717E  C059  F003         	movff	main@aux+2,___fleq@ff1+2
  1605  007182  C05A  F004         	movff	main@aux+3,___fleq@ff1+3
  1606  007186  0E00               	movlw	0
  1607  007188  6E05               	movwf	___fleq@ff2^0,c
  1608  00718A  0E40               	movlw	64
  1609  00718C  6E06               	movwf	(___fleq@ff2+1)^0,c
  1610  00718E  0E1C               	movlw	28
  1611  007190  6E07               	movwf	(___fleq@ff2+2)^0,c
  1612  007192  0E46               	movlw	70
  1613  007194  6E08               	movwf	(___fleq@ff2+3)^0,c
  1614  007196  EC06  F029         	call	___fleq	;wreg free
  1615  00719A  A0D8               	btfss	status,0,c
  1616  00719C  EFD2  F038         	goto	u5271
  1617  0071A0  EFD4  F038         	goto	u5270
  1618  0071A4                     u5271:
  1619  0071A4  EFFE  F038         	goto	l4956
  1620  0071A8                     u5270:
  1621  0071A8                     
  1622                           ;main.c: 630:             temperatura += 2;
  1623  0071A8  C07B  F028         	movff	_temperatura,___fladd@b
  1624  0071AC  C07C  F029         	movff	_temperatura+1,___fladd@b+1
  1625  0071B0  C07D  F02A         	movff	_temperatura+2,___fladd@b+2
  1626  0071B4  C07E  F02B         	movff	_temperatura+3,___fladd@b+3
  1627  0071B8  0E00               	movlw	0
  1628  0071BA  6E2C               	movwf	___fladd@a^0,c
  1629  0071BC  0E00               	movlw	0
  1630  0071BE  6E2D               	movwf	(___fladd@a+1)^0,c
  1631  0071C0  0E00               	movlw	0
  1632  0071C2  6E2E               	movwf	(___fladd@a+2)^0,c
  1633  0071C4  0E40               	movlw	64
  1634  0071C6  6E2F               	movwf	(___fladd@a+3)^0,c
  1635  0071C8  ECE8  F03C         	call	___fladd	;wreg free
  1636  0071CC  C028  F07B         	movff	?___fladd,_temperatura
  1637  0071D0  C029  F07C         	movff	?___fladd+1,_temperatura+1
  1638  0071D4  C02A  F07D         	movff	?___fladd+2,_temperatura+2
  1639  0071D8  C02B  F07E         	movff	?___fladd+3,_temperatura+3
  1640  0071DC                     
  1641                           ;main.c: 631:             PORTCbits.RC5 = 1;
  1642  0071DC  8A82               	bsf	130,5,c	;volatile
  1643                           
  1644                           ;main.c: 632:             atraso_ms(350);
  1645  0071DE  0E01               	movlw	1
  1646  0071E0  6E02               	movwf	(atraso_ms@valor+1)^0,c
  1647  0071E2  0E5E               	movlw	94
  1648  0071E4  6E01               	movwf	atraso_ms@valor^0,c
  1649  0071E6  EC29  F026         	call	_atraso_ms	;wreg free
  1650  0071EA                     
  1651                           ;main.c: 633:             PORTCbits.RC5 = 0;
  1652  0071EA  9A82               	bcf	130,5,c	;volatile
  1653  0071EC                     
  1654                           ;main.c: 634:             aux = 0;
  1655  0071EC  0E00               	movlw	0
  1656  0071EE  6E57               	movwf	main@aux^0,c
  1657  0071F0  0E00               	movlw	0
  1658  0071F2  6E58               	movwf	(main@aux+1)^0,c
  1659  0071F4  0E00               	movlw	0
  1660  0071F6  6E59               	movwf	(main@aux+2)^0,c
  1661  0071F8  0E00               	movlw	0
  1662  0071FA  6E5A               	movwf	(main@aux+3)^0,c
  1663  0071FC                     l4956:
  1664                           
  1665                           ;main.c: 636:         ssdEstoque();
  1666  0071FC  ECE9  F027         	call	_ssdEstoque	;wreg free
  1667  007200                     
  1668                           ;main.c: 637:         ssdUpdate();
  1669  007200  ECD4  F02D         	call	_ssdUpdate	;wreg free
  1670                           
  1671                           ;main.c: 638:     }
  1672  007204  EFF3  F037         	goto	l4874
  1673  007208  EF00  F000         	goto	start
  1674  00720C                     __end_of_main:
  1675                           	callstack 0
  1676                           
  1677 ;; *************** function _ssdUpdate *****************
  1678 ;; Defined at:
  1679 ;;		line 54 in file "ssd.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1693 ;;      Params:         0       0       0       0       0       0       0
  1694 ;;      Locals:         0       0       0       0       0       0       0
  1695 ;;      Temps:          2       0       0       0       0       0       0
  1696 ;;      Totals:         2       0       0       0       0       0       0
  1697 ;;Total ram usage:        2 bytes
  1698 ;; Hardware stack levels used: 1
  1699 ;; Hardware stack levels required when called: 1
  1700 ;; This function calls:
  1701 ;;		_digitalWrite
  1702 ;; This function is called by:
  1703 ;;		_main
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text1
  1708  005BA8                     __ptext1:
  1709                           	callstack 0
  1710  005BA8                     _ssdUpdate:
  1711                           	callstack 29
  1712  005BA8                     
  1713                           ;ssd.c: 58:     TRISD= 0x00;
  1714  005BA8  0E00               	movlw	0
  1715  005BAA  6E95               	movwf	149,c	;volatile
  1716  005BAC                     
  1717                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  1718  005BAC  0E00               	movlw	0
  1719  005BAE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1720  005BB0  0E02               	movlw	2
  1721  005BB2  6E01               	movwf	digitalWrite@pin^0,c
  1722  005BB4  0E00               	movlw	0
  1723  005BB6  6E04               	movwf	(digitalWrite@value+1)^0,c
  1724  005BB8  0E00               	movlw	0
  1725  005BBA  6E03               	movwf	digitalWrite@value^0,c
  1726  005BBC  EC39  F035         	call	_digitalWrite	;wreg free
  1727  005BC0                     
  1728                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  1729  005BC0  0E00               	movlw	0
  1730  005BC2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1731  005BC4  0E03               	movlw	3
  1732  005BC6  6E01               	movwf	digitalWrite@pin^0,c
  1733  005BC8  0E00               	movlw	0
  1734  005BCA  6E04               	movwf	(digitalWrite@value+1)^0,c
  1735  005BCC  0E00               	movlw	0
  1736  005BCE  6E03               	movwf	digitalWrite@value^0,c
  1737  005BD0  EC39  F035         	call	_digitalWrite	;wreg free
  1738  005BD4                     
  1739                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  1740  005BD4  0E00               	movlw	0
  1741  005BD6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1742  005BD8  0E04               	movlw	4
  1743  005BDA  6E01               	movwf	digitalWrite@pin^0,c
  1744  005BDC  0E00               	movlw	0
  1745  005BDE  6E04               	movwf	(digitalWrite@value+1)^0,c
  1746  005BE0  0E00               	movlw	0
  1747  005BE2  6E03               	movwf	digitalWrite@value^0,c
  1748  005BE4  EC39  F035         	call	_digitalWrite	;wreg free
  1749  005BE8                     
  1750                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  1751  005BE8  0E00               	movlw	0
  1752  005BEA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1753  005BEC  0E05               	movlw	5
  1754  005BEE  6E01               	movwf	digitalWrite@pin^0,c
  1755  005BF0  0E00               	movlw	0
  1756  005BF2  6E04               	movwf	(digitalWrite@value+1)^0,c
  1757  005BF4  0E00               	movlw	0
  1758  005BF6  6E03               	movwf	digitalWrite@value^0,c
  1759  005BF8  EC39  F035         	call	_digitalWrite	;wreg free
  1760                           
  1761                           ;ssd.c: 66:     PORTD = 0x00;
  1762  005BFC  0E00               	movlw	0
  1763  005BFE  6E83               	movwf	131,c	;volatile
  1764                           
  1765                           ;ssd.c: 69:     switch (display)
  1766  005C00  EF5E  F02E         	goto	l4366
  1767  005C04                     l4338:
  1768                           
  1769                           ;ssd.c: 72:             PORTD = valor[v0];
  1770  005C04  0E91               	movlw	low _valor@ssd$F306
  1771  005C06  246A               	addwf	_v0^0,w,c
  1772  005C08  6EF6               	movwf	tblptrl,c
  1773  005C0A  6AF7               	clrf	tblptrh,c
  1774  005C0C  0E7E               	movlw	high _valor@ssd$F306
  1775  005C0E  22F7               	addwfc	tblptrh,f,c
  1776  005C10                     	if	0	;There are less than 3 active tblptr bytes
  1777  005C10                     	endif
  1778  005C10  0008               	tblrd		*
  1779  005C12  CFF5 FF83          	movff	tablat,3971	;volatile
  1780  005C16                     
  1781                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  1782  005C16  0E00               	movlw	0
  1783  005C18  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1784  005C1A  0E02               	movlw	2
  1785  005C1C  6E01               	movwf	digitalWrite@pin^0,c
  1786  005C1E  0E00               	movlw	0
  1787  005C20  6E04               	movwf	(digitalWrite@value+1)^0,c
  1788  005C22  0E01               	movlw	1
  1789  005C24  6E03               	movwf	digitalWrite@value^0,c
  1790  005C26  EC39  F035         	call	_digitalWrite	;wreg free
  1791  005C2A                     
  1792                           ;ssd.c: 74:             display = 1;
  1793  005C2A  0E01               	movlw	1
  1794  005C2C  6E6B               	movwf	_display^0,c
  1795                           
  1796                           ;ssd.c: 75:             break;
  1797  005C2E  EF7B  F02E         	goto	l229
  1798  005C32                     l4344:
  1799                           
  1800                           ;ssd.c: 78:             PORTD = valor[v1];
  1801  005C32  0E91               	movlw	low _valor@ssd$F306
  1802  005C34  2469               	addwf	_v1^0,w,c
  1803  005C36  6EF6               	movwf	tblptrl,c
  1804  005C38  6AF7               	clrf	tblptrh,c
  1805  005C3A  0E7E               	movlw	high _valor@ssd$F306
  1806  005C3C  22F7               	addwfc	tblptrh,f,c
  1807  005C3E                     	if	0	;There are less than 3 active tblptr bytes
  1808  005C3E                     	endif
  1809  005C3E  0008               	tblrd		*
  1810  005C40  CFF5 FF83          	movff	tablat,3971	;volatile
  1811  005C44                     
  1812                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  1813  005C44  0E00               	movlw	0
  1814  005C46  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1815  005C48  0E03               	movlw	3
  1816  005C4A  6E01               	movwf	digitalWrite@pin^0,c
  1817  005C4C  0E00               	movlw	0
  1818  005C4E  6E04               	movwf	(digitalWrite@value+1)^0,c
  1819  005C50  0E01               	movlw	1
  1820  005C52  6E03               	movwf	digitalWrite@value^0,c
  1821  005C54  EC39  F035         	call	_digitalWrite	;wreg free
  1822  005C58                     
  1823                           ;ssd.c: 80:             display = 2;
  1824  005C58  0E02               	movlw	2
  1825  005C5A  6E6B               	movwf	_display^0,c
  1826                           
  1827                           ;ssd.c: 81:             break;
  1828  005C5C  EF7B  F02E         	goto	l229
  1829  005C60                     l4350:
  1830                           
  1831                           ;ssd.c: 84:             PORTD = valor[v2];
  1832  005C60  0E91               	movlw	low _valor@ssd$F306
  1833  005C62  2468               	addwf	_v2^0,w,c
  1834  005C64  6EF6               	movwf	tblptrl,c
  1835  005C66  6AF7               	clrf	tblptrh,c
  1836  005C68  0E7E               	movlw	high _valor@ssd$F306
  1837  005C6A  22F7               	addwfc	tblptrh,f,c
  1838  005C6C                     	if	0	;There are less than 3 active tblptr bytes
  1839  005C6C                     	endif
  1840  005C6C  0008               	tblrd		*
  1841  005C6E  CFF5 FF83          	movff	tablat,3971	;volatile
  1842  005C72                     
  1843                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  1844  005C72  0E00               	movlw	0
  1845  005C74  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1846  005C76  0E04               	movlw	4
  1847  005C78  6E01               	movwf	digitalWrite@pin^0,c
  1848  005C7A  0E00               	movlw	0
  1849  005C7C  6E04               	movwf	(digitalWrite@value+1)^0,c
  1850  005C7E  0E01               	movlw	1
  1851  005C80  6E03               	movwf	digitalWrite@value^0,c
  1852  005C82  EC39  F035         	call	_digitalWrite	;wreg free
  1853  005C86                     
  1854                           ;ssd.c: 86:             display = 3;
  1855  005C86  0E03               	movlw	3
  1856  005C88  6E6B               	movwf	_display^0,c
  1857                           
  1858                           ;ssd.c: 87:             break;
  1859  005C8A  EF7B  F02E         	goto	l229
  1860  005C8E                     l4356:
  1861                           
  1862                           ;ssd.c: 90:             PORTD = valor[v3];
  1863  005C8E  0E91               	movlw	low _valor@ssd$F306
  1864  005C90  2467               	addwf	_v3^0,w,c
  1865  005C92  6EF6               	movwf	tblptrl,c
  1866  005C94  6AF7               	clrf	tblptrh,c
  1867  005C96  0E7E               	movlw	high _valor@ssd$F306
  1868  005C98  22F7               	addwfc	tblptrh,f,c
  1869  005C9A                     	if	0	;There are less than 3 active tblptr bytes
  1870  005C9A                     	endif
  1871  005C9A  0008               	tblrd		*
  1872  005C9C  CFF5 FF83          	movff	tablat,3971	;volatile
  1873  005CA0                     
  1874                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  1875  005CA0  0E00               	movlw	0
  1876  005CA2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1877  005CA4  0E05               	movlw	5
  1878  005CA6  6E01               	movwf	digitalWrite@pin^0,c
  1879  005CA8  0E00               	movlw	0
  1880  005CAA  6E04               	movwf	(digitalWrite@value+1)^0,c
  1881  005CAC  0E01               	movlw	1
  1882  005CAE  6E03               	movwf	digitalWrite@value^0,c
  1883  005CB0  EC39  F035         	call	_digitalWrite	;wreg free
  1884  005CB4                     l4360:
  1885                           
  1886                           ;ssd.c: 92:             display = 0;
  1887  005CB4  0E00               	movlw	0
  1888  005CB6  6E6B               	movwf	_display^0,c
  1889                           
  1890                           ;ssd.c: 93:             break;
  1891  005CB8  EF7B  F02E         	goto	l229
  1892  005CBC                     l4366:
  1893  005CBC  506B               	movf	_display^0,w,c
  1894  005CBE  6E07               	movwf	??_ssdUpdate^0,c
  1895  005CC0  6A08               	clrf	(??_ssdUpdate+1)^0,c
  1896                           
  1897                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1898                           ; Switch size 1, requested type "simple"
  1899                           ; Number of cases is 1, Range of values is 0 to 0
  1900                           ; switch strategies available:
  1901                           ; Name         Instructions Cycles
  1902                           ; simple_byte            4     3 (average)
  1903                           ;	Chosen strategy is simple_byte
  1904  005CC2  5008               	movf	(??_ssdUpdate+1)^0,w,c
  1905  005CC4  0A00               	xorlw	0	; case 0
  1906  005CC6  B4D8               	btfsc	status,2,c
  1907  005CC8  EF68  F02E         	goto	l5024
  1908  005CCC  EF5A  F02E         	goto	l4360
  1909  005CD0                     l5024:
  1910                           
  1911                           ; Switch size 1, requested type "simple"
  1912                           ; Number of cases is 4, Range of values is 0 to 3
  1913                           ; switch strategies available:
  1914                           ; Name         Instructions Cycles
  1915                           ; simple_byte           13     7 (average)
  1916                           ;	Chosen strategy is simple_byte
  1917  005CD0  5007               	movf	??_ssdUpdate^0,w,c
  1918  005CD2  0A00               	xorlw	0	; case 0
  1919  005CD4  B4D8               	btfsc	status,2,c
  1920  005CD6  EF02  F02E         	goto	l4338
  1921  005CDA  0A01               	xorlw	1	; case 1
  1922  005CDC  B4D8               	btfsc	status,2,c
  1923  005CDE  EF19  F02E         	goto	l4344
  1924  005CE2  0A03               	xorlw	3	; case 2
  1925  005CE4  B4D8               	btfsc	status,2,c
  1926  005CE6  EF30  F02E         	goto	l4350
  1927  005CEA  0A01               	xorlw	1	; case 3
  1928  005CEC  B4D8               	btfsc	status,2,c
  1929  005CEE  EF47  F02E         	goto	l4356
  1930  005CF2  EF5A  F02E         	goto	l4360
  1931  005CF6                     l229:
  1932  005CF6  0012               	return		;funcret
  1933  005CF8                     __end_of_ssdUpdate:
  1934                           	callstack 0
  1935                           
  1936 ;; *************** function _ssdInit *****************
  1937 ;; Defined at:
  1938 ;;		line 101 in file "ssd.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2, status,0, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1952 ;;      Params:         0       0       0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0
  1955 ;;      Totals:         0       0       0       0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; Hardware stack levels required when called: 1
  1959 ;; This function calls:
  1960 ;;		_pinMode
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text2
  1967  004AF2                     __ptext2:
  1968                           	callstack 0
  1969  004AF2                     _ssdInit:
  1970                           	callstack 29
  1971  004AF2                     
  1972                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
  1973  004AF2  0E00               	movlw	0
  1974  004AF4  6E02               	movwf	(pinMode@pin+1)^0,c
  1975  004AF6  0E02               	movlw	2
  1976  004AF8  6E01               	movwf	pinMode@pin^0,c
  1977  004AFA  0E00               	movlw	0
  1978  004AFC  6E04               	movwf	(pinMode@type+1)^0,c
  1979  004AFE  0E00               	movlw	0
  1980  004B00  6E03               	movwf	pinMode@type^0,c
  1981  004B02  EC60  F036         	call	_pinMode	;wreg free
  1982                           
  1983                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
  1984  004B06  0E00               	movlw	0
  1985  004B08  6E02               	movwf	(pinMode@pin+1)^0,c
  1986  004B0A  0E03               	movlw	3
  1987  004B0C  6E01               	movwf	pinMode@pin^0,c
  1988  004B0E  0E00               	movlw	0
  1989  004B10  6E04               	movwf	(pinMode@type+1)^0,c
  1990  004B12  0E00               	movlw	0
  1991  004B14  6E03               	movwf	pinMode@type^0,c
  1992  004B16  EC60  F036         	call	_pinMode	;wreg free
  1993                           
  1994                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
  1995  004B1A  0E00               	movlw	0
  1996  004B1C  6E02               	movwf	(pinMode@pin+1)^0,c
  1997  004B1E  0E04               	movlw	4
  1998  004B20  6E01               	movwf	pinMode@pin^0,c
  1999  004B22  0E00               	movlw	0
  2000  004B24  6E04               	movwf	(pinMode@type+1)^0,c
  2001  004B26  0E00               	movlw	0
  2002  004B28  6E03               	movwf	pinMode@type^0,c
  2003  004B2A  EC60  F036         	call	_pinMode	;wreg free
  2004                           
  2005                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
  2006  004B2E  0E00               	movlw	0
  2007  004B30  6E02               	movwf	(pinMode@pin+1)^0,c
  2008  004B32  0E05               	movlw	5
  2009  004B34  6E01               	movwf	pinMode@pin^0,c
  2010  004B36  0E00               	movlw	0
  2011  004B38  6E04               	movwf	(pinMode@type+1)^0,c
  2012  004B3A  0E00               	movlw	0
  2013  004B3C  6E03               	movwf	pinMode@type^0,c
  2014  004B3E  EC60  F036         	call	_pinMode	;wreg free
  2015  004B42                     
  2016                           ;ssd.c: 109:     TRISD = 0x00;
  2017  004B42  0E00               	movlw	0
  2018  004B44  6E95               	movwf	149,c	;volatile
  2019  004B46  0012               	return		;funcret
  2020  004B48                     __end_of_ssdInit:
  2021                           	callstack 0
  2022                           
  2023 ;; *************** function _pinMode *****************
  2024 ;; Defined at:
  2025 ;;		line 54 in file "io.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  pin             2    0[COMRAM] int 
  2028 ;;  type            2    2[COMRAM] int 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;		None
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2040 ;;      Params:         4       0       0       0       0       0       0
  2041 ;;      Locals:         0       0       0       0       0       0       0
  2042 ;;      Temps:          2       0       0       0       0       0       0
  2043 ;;      Totals:         6       0       0       0       0       0       0
  2044 ;;Total ram usage:        6 bytes
  2045 ;; Hardware stack levels used: 1
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_ssdInit
  2050 ;;		_lcdInit
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text3
  2055  006CC0                     __ptext3:
  2056                           	callstack 0
  2057  006CC0                     _pinMode:
  2058                           	callstack 29
  2059  006CC0                     
  2060                           ;io.c: 56:     if(pin <8){
  2061  006CC0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2062  006CC2  EF6E  F036         	goto	u3910
  2063  006CC6  5002               	movf	(pinMode@pin+1)^0,w,c
  2064  006CC8  E107               	bnz	u3911
  2065  006CCA  0E08               	movlw	8
  2066  006CCC  5C01               	subwf	pinMode@pin^0,w,c
  2067  006CCE  B0D8               	btfsc	status,0,c
  2068  006CD0  EF6C  F036         	goto	u3911
  2069  006CD4  EF6E  F036         	goto	u3910
  2070  006CD8                     u3911:
  2071  006CD8  EF98  F036         	goto	l3788
  2072  006CDC                     u3910:
  2073  006CDC                     
  2074                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  2075  006CDC  5003               	movf	pinMode@type^0,w,c
  2076  006CDE  1004               	iorwf	(pinMode@type+1)^0,w,c
  2077  006CE0  B4D8               	btfsc	status,2,c
  2078  006CE2  EF75  F036         	goto	u3921
  2079  006CE6  EF77  F036         	goto	u3920
  2080  006CEA                     u3921:
  2081  006CEA  EF87  F036         	goto	l3786
  2082  006CEE                     u3920:
  2083  006CEE  C001  F005         	movff	pinMode@pin,??_pinMode
  2084  006CF2  0E01               	movlw	1
  2085  006CF4  6E06               	movwf	(??_pinMode+1)^0,c
  2086  006CF6  2A05               	incf	??_pinMode^0,f,c
  2087  006CF8  EF80  F036         	goto	u3934
  2088  006CFC                     u3935:
  2089  006CFC  90D8               	bcf	status,0,c
  2090  006CFE  3606               	rlcf	(??_pinMode+1)^0,f,c
  2091  006D00                     u3934:
  2092  006D00  2E05               	decfsz	??_pinMode^0,f,c
  2093  006D02  EF7E  F036         	goto	u3935
  2094  006D06  5006               	movf	(??_pinMode+1)^0,w,c
  2095  006D08  1292               	iorwf	146,f,c	;volatile
  2096  006D0A  EF86  F037         	goto	l144
  2097  006D0E                     l3786:
  2098  006D0E  C001  F005         	movff	pinMode@pin,??_pinMode
  2099  006D12  0E01               	movlw	1
  2100  006D14  6E06               	movwf	(??_pinMode+1)^0,c
  2101  006D16  2A05               	incf	??_pinMode^0,f,c
  2102  006D18  EF90  F036         	goto	u3944
  2103  006D1C                     u3945:
  2104  006D1C  90D8               	bcf	status,0,c
  2105  006D1E  3606               	rlcf	(??_pinMode+1)^0,f,c
  2106  006D20                     u3944:
  2107  006D20  2E05               	decfsz	??_pinMode^0,f,c
  2108  006D22  EF8E  F036         	goto	u3945
  2109  006D26  5006               	movf	(??_pinMode+1)^0,w,c
  2110  006D28  0AFF               	xorlw	255
  2111  006D2A  1692               	andwf	146,f,c	;volatile
  2112  006D2C  EF86  F037         	goto	l144
  2113  006D30                     l3788:
  2114  006D30  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2115  006D32  EFA6  F036         	goto	u3950
  2116  006D36  5002               	movf	(pinMode@pin+1)^0,w,c
  2117  006D38  E107               	bnz	u3951
  2118  006D3A  0E10               	movlw	16
  2119  006D3C  5C01               	subwf	pinMode@pin^0,w,c
  2120  006D3E  B0D8               	btfsc	status,0,c
  2121  006D40  EFA4  F036         	goto	u3951
  2122  006D44  EFA6  F036         	goto	u3950
  2123  006D48                     u3951:
  2124  006D48  EFD4  F036         	goto	l3796
  2125  006D4C                     u3950:
  2126  006D4C                     
  2127                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  2128  006D4C  5003               	movf	pinMode@type^0,w,c
  2129  006D4E  1004               	iorwf	(pinMode@type+1)^0,w,c
  2130  006D50  B4D8               	btfsc	status,2,c
  2131  006D52  EFAD  F036         	goto	u3961
  2132  006D56  EFAF  F036         	goto	u3960
  2133  006D5A                     u3961:
  2134  006D5A  EFC1  F036         	goto	l3794
  2135  006D5E                     u3960:
  2136  006D5E  C001  F005         	movff	pinMode@pin,??_pinMode
  2137  006D62  0EF8               	movlw	-8
  2138  006D64  2605               	addwf	??_pinMode^0,f,c
  2139  006D66  0E01               	movlw	1
  2140  006D68  6E06               	movwf	(??_pinMode+1)^0,c
  2141  006D6A  2A05               	incf	??_pinMode^0,f,c
  2142  006D6C  EFBA  F036         	goto	u3974
  2143  006D70                     u3975:
  2144  006D70  90D8               	bcf	status,0,c
  2145  006D72  3606               	rlcf	(??_pinMode+1)^0,f,c
  2146  006D74                     u3974:
  2147  006D74  2E05               	decfsz	??_pinMode^0,f,c
  2148  006D76  EFB8  F036         	goto	u3975
  2149  006D7A  5006               	movf	(??_pinMode+1)^0,w,c
  2150  006D7C  1293               	iorwf	147,f,c	;volatile
  2151  006D7E  EF86  F037         	goto	l144
  2152  006D82                     l3794:
  2153  006D82  C001  F005         	movff	pinMode@pin,??_pinMode
  2154  006D86  0EF8               	movlw	-8
  2155  006D88  2605               	addwf	??_pinMode^0,f,c
  2156  006D8A  0E01               	movlw	1
  2157  006D8C  6E06               	movwf	(??_pinMode+1)^0,c
  2158  006D8E  2A05               	incf	??_pinMode^0,f,c
  2159  006D90  EFCC  F036         	goto	u3984
  2160  006D94                     u3985:
  2161  006D94  90D8               	bcf	status,0,c
  2162  006D96  3606               	rlcf	(??_pinMode+1)^0,f,c
  2163  006D98                     u3984:
  2164  006D98  2E05               	decfsz	??_pinMode^0,f,c
  2165  006D9A  EFCA  F036         	goto	u3985
  2166  006D9E  5006               	movf	(??_pinMode+1)^0,w,c
  2167  006DA0  0AFF               	xorlw	255
  2168  006DA2  1693               	andwf	147,f,c	;volatile
  2169  006DA4  EF86  F037         	goto	l144
  2170  006DA8                     l3796:
  2171  006DA8  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2172  006DAA  EFE2  F036         	goto	u3990
  2173  006DAE  5002               	movf	(pinMode@pin+1)^0,w,c
  2174  006DB0  E107               	bnz	u3991
  2175  006DB2  0E18               	movlw	24
  2176  006DB4  5C01               	subwf	pinMode@pin^0,w,c
  2177  006DB6  B0D8               	btfsc	status,0,c
  2178  006DB8  EFE0  F036         	goto	u3991
  2179  006DBC  EFE2  F036         	goto	u3990
  2180  006DC0                     u3991:
  2181  006DC0  EF10  F037         	goto	l3804
  2182  006DC4                     u3990:
  2183  006DC4                     
  2184                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  2185  006DC4  5003               	movf	pinMode@type^0,w,c
  2186  006DC6  1004               	iorwf	(pinMode@type+1)^0,w,c
  2187  006DC8  B4D8               	btfsc	status,2,c
  2188  006DCA  EFE9  F036         	goto	u4001
  2189  006DCE  EFEB  F036         	goto	u4000
  2190  006DD2                     u4001:
  2191  006DD2  EFFD  F036         	goto	l3802
  2192  006DD6                     u4000:
  2193  006DD6  C001  F005         	movff	pinMode@pin,??_pinMode
  2194  006DDA  0EF0               	movlw	-16
  2195  006DDC  2605               	addwf	??_pinMode^0,f,c
  2196  006DDE  0E01               	movlw	1
  2197  006DE0  6E06               	movwf	(??_pinMode+1)^0,c
  2198  006DE2  2A05               	incf	??_pinMode^0,f,c
  2199  006DE4  EFF6  F036         	goto	u4014
  2200  006DE8                     u4015:
  2201  006DE8  90D8               	bcf	status,0,c
  2202  006DEA  3606               	rlcf	(??_pinMode+1)^0,f,c
  2203  006DEC                     u4014:
  2204  006DEC  2E05               	decfsz	??_pinMode^0,f,c
  2205  006DEE  EFF4  F036         	goto	u4015
  2206  006DF2  5006               	movf	(??_pinMode+1)^0,w,c
  2207  006DF4  1294               	iorwf	148,f,c	;volatile
  2208  006DF6  EF86  F037         	goto	l144
  2209  006DFA                     l3802:
  2210  006DFA  C001  F005         	movff	pinMode@pin,??_pinMode
  2211  006DFE  0EF0               	movlw	-16
  2212  006E00  2605               	addwf	??_pinMode^0,f,c
  2213  006E02  0E01               	movlw	1
  2214  006E04  6E06               	movwf	(??_pinMode+1)^0,c
  2215  006E06  2A05               	incf	??_pinMode^0,f,c
  2216  006E08  EF08  F037         	goto	u4024
  2217  006E0C                     u4025:
  2218  006E0C  90D8               	bcf	status,0,c
  2219  006E0E  3606               	rlcf	(??_pinMode+1)^0,f,c
  2220  006E10                     u4024:
  2221  006E10  2E05               	decfsz	??_pinMode^0,f,c
  2222  006E12  EF06  F037         	goto	u4025
  2223  006E16  5006               	movf	(??_pinMode+1)^0,w,c
  2224  006E18  0AFF               	xorlw	255
  2225  006E1A  1694               	andwf	148,f,c	;volatile
  2226  006E1C  EF86  F037         	goto	l144
  2227  006E20                     l3804:
  2228  006E20  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2229  006E22  EF1E  F037         	goto	u4030
  2230  006E26  5002               	movf	(pinMode@pin+1)^0,w,c
  2231  006E28  E107               	bnz	u4031
  2232  006E2A  0E20               	movlw	32
  2233  006E2C  5C01               	subwf	pinMode@pin^0,w,c
  2234  006E2E  B0D8               	btfsc	status,0,c
  2235  006E30  EF1C  F037         	goto	u4031
  2236  006E34  EF1E  F037         	goto	u4030
  2237  006E38                     u4031:
  2238  006E38  EF4C  F037         	goto	l3812
  2239  006E3C                     u4030:
  2240  006E3C                     
  2241                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  2242  006E3C  5003               	movf	pinMode@type^0,w,c
  2243  006E3E  1004               	iorwf	(pinMode@type+1)^0,w,c
  2244  006E40  B4D8               	btfsc	status,2,c
  2245  006E42  EF25  F037         	goto	u4041
  2246  006E46  EF27  F037         	goto	u4040
  2247  006E4A                     u4041:
  2248  006E4A  EF39  F037         	goto	l3810
  2249  006E4E                     u4040:
  2250  006E4E  C001  F005         	movff	pinMode@pin,??_pinMode
  2251  006E52  0EE8               	movlw	-24
  2252  006E54  2605               	addwf	??_pinMode^0,f,c
  2253  006E56  0E01               	movlw	1
  2254  006E58  6E06               	movwf	(??_pinMode+1)^0,c
  2255  006E5A  2A05               	incf	??_pinMode^0,f,c
  2256  006E5C  EF32  F037         	goto	u4054
  2257  006E60                     u4055:
  2258  006E60  90D8               	bcf	status,0,c
  2259  006E62  3606               	rlcf	(??_pinMode+1)^0,f,c
  2260  006E64                     u4054:
  2261  006E64  2E05               	decfsz	??_pinMode^0,f,c
  2262  006E66  EF30  F037         	goto	u4055
  2263  006E6A  5006               	movf	(??_pinMode+1)^0,w,c
  2264  006E6C  1295               	iorwf	149,f,c	;volatile
  2265  006E6E  EF86  F037         	goto	l144
  2266  006E72                     l3810:
  2267  006E72  C001  F005         	movff	pinMode@pin,??_pinMode
  2268  006E76  0EE8               	movlw	-24
  2269  006E78  2605               	addwf	??_pinMode^0,f,c
  2270  006E7A  0E01               	movlw	1
  2271  006E7C  6E06               	movwf	(??_pinMode+1)^0,c
  2272  006E7E  2A05               	incf	??_pinMode^0,f,c
  2273  006E80  EF44  F037         	goto	u4064
  2274  006E84                     u4065:
  2275  006E84  90D8               	bcf	status,0,c
  2276  006E86  3606               	rlcf	(??_pinMode+1)^0,f,c
  2277  006E88                     u4064:
  2278  006E88  2E05               	decfsz	??_pinMode^0,f,c
  2279  006E8A  EF42  F037         	goto	u4065
  2280  006E8E  5006               	movf	(??_pinMode+1)^0,w,c
  2281  006E90  0AFF               	xorlw	255
  2282  006E92  1695               	andwf	149,f,c	;volatile
  2283  006E94  EF86  F037         	goto	l144
  2284  006E98                     l3812:
  2285  006E98  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2286  006E9A  EF5A  F037         	goto	u4070
  2287  006E9E  5002               	movf	(pinMode@pin+1)^0,w,c
  2288  006EA0  E107               	bnz	u4071
  2289  006EA2  0E28               	movlw	40
  2290  006EA4  5C01               	subwf	pinMode@pin^0,w,c
  2291  006EA6  B0D8               	btfsc	status,0,c
  2292  006EA8  EF58  F037         	goto	u4071
  2293  006EAC  EF5A  F037         	goto	u4070
  2294  006EB0                     u4071:
  2295  006EB0  EF86  F037         	goto	l144
  2296  006EB4                     u4070:
  2297  006EB4                     
  2298                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  2299  006EB4  5003               	movf	pinMode@type^0,w,c
  2300  006EB6  1004               	iorwf	(pinMode@type+1)^0,w,c
  2301  006EB8  B4D8               	btfsc	status,2,c
  2302  006EBA  EF61  F037         	goto	u4081
  2303  006EBE  EF63  F037         	goto	u4080
  2304  006EC2                     u4081:
  2305  006EC2  EF75  F037         	goto	l3818
  2306  006EC6                     u4080:
  2307  006EC6  C001  F005         	movff	pinMode@pin,??_pinMode
  2308  006ECA  0EE0               	movlw	-32
  2309  006ECC  2605               	addwf	??_pinMode^0,f,c
  2310  006ECE  0E01               	movlw	1
  2311  006ED0  6E06               	movwf	(??_pinMode+1)^0,c
  2312  006ED2  2A05               	incf	??_pinMode^0,f,c
  2313  006ED4  EF6E  F037         	goto	u4094
  2314  006ED8                     u4095:
  2315  006ED8  90D8               	bcf	status,0,c
  2316  006EDA  3606               	rlcf	(??_pinMode+1)^0,f,c
  2317  006EDC                     u4094:
  2318  006EDC  2E05               	decfsz	??_pinMode^0,f,c
  2319  006EDE  EF6C  F037         	goto	u4095
  2320  006EE2  5006               	movf	(??_pinMode+1)^0,w,c
  2321  006EE4  1296               	iorwf	150,f,c	;volatile
  2322  006EE6  EF86  F037         	goto	l144
  2323  006EEA                     l3818:
  2324  006EEA  C001  F005         	movff	pinMode@pin,??_pinMode
  2325  006EEE  0EE0               	movlw	-32
  2326  006EF0  2605               	addwf	??_pinMode^0,f,c
  2327  006EF2  0E01               	movlw	1
  2328  006EF4  6E06               	movwf	(??_pinMode+1)^0,c
  2329  006EF6  2A05               	incf	??_pinMode^0,f,c
  2330  006EF8  EF80  F037         	goto	u4104
  2331  006EFC                     u4105:
  2332  006EFC  90D8               	bcf	status,0,c
  2333  006EFE  3606               	rlcf	(??_pinMode+1)^0,f,c
  2334  006F00                     u4104:
  2335  006F00  2E05               	decfsz	??_pinMode^0,f,c
  2336  006F02  EF7E  F037         	goto	u4105
  2337  006F06  5006               	movf	(??_pinMode+1)^0,w,c
  2338  006F08  0AFF               	xorlw	255
  2339  006F0A  1696               	andwf	150,f,c	;volatile
  2340  006F0C                     l144:
  2341  006F0C  0012               	return		;funcret
  2342  006F0E                     __end_of_pinMode:
  2343                           	callstack 0
  2344                           
  2345 ;; *************** function _serial_init *****************
  2346 ;; Defined at:
  2347 ;;		line 30 in file "serial.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;		None
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;		None
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      void 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2361 ;;      Params:         0       0       0       0       0       0       0
  2362 ;;      Locals:         0       0       0       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0       0       0
  2364 ;;      Totals:         0       0       0       0       0       0       0
  2365 ;;Total ram usage:        0 bytes
  2366 ;; Hardware stack levels used: 1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_main
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text4
  2375  004886                     __ptext4:
  2376                           	callstack 0
  2377  004886                     _serial_init:
  2378                           	callstack 30
  2379  004886                     
  2380                           ;serial.c: 32:     SPBRG=103;
  2381  004886  0E67               	movlw	103
  2382  004888  6EAF               	movwf	175,c	;volatile
  2383  00488A                     
  2384                           ;serial.c: 37:     TXSTAbits.TX9=0;
  2385  00488A  9CAC               	bcf	172,6,c	;volatile
  2386  00488C                     
  2387                           ;serial.c: 38:     TXSTAbits.TXEN=1;
  2388  00488C  8AAC               	bsf	172,5,c	;volatile
  2389  00488E                     
  2390                           ;serial.c: 39:     TXSTAbits.SYNC=0;
  2391  00488E  98AC               	bcf	172,4,c	;volatile
  2392  004890                     
  2393                           ;serial.c: 40:     TXSTAbits.BRGH=1;
  2394  004890  84AC               	bsf	172,2,c	;volatile
  2395  004892                     
  2396                           ;serial.c: 41:     RCSTAbits.SPEN=1;
  2397  004892  8EAB               	bsf	171,7,c	;volatile
  2398  004894                     
  2399                           ;serial.c: 42:     RCSTAbits.RX9=0;
  2400  004894  9CAB               	bcf	171,6,c	;volatile
  2401  004896                     
  2402                           ;serial.c: 43:     RCSTAbits.CREN=1;
  2403  004896  88AB               	bsf	171,4,c	;volatile
  2404  004898  0012               	return		;funcret
  2405  00489A                     __end_of_serial_init:
  2406                           	callstack 0
  2407                           
  2408 ;; *************** function _resfria *****************
  2409 ;; Defined at:
  2410 ;;		line 419 in file "main.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  cont            2   80[COMRAM] int 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2424 ;;      Params:         0       0       0       0       0       0       0
  2425 ;;      Locals:         2       0       0       0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0
  2427 ;;      Totals:         2       0       0       0       0       0       0
  2428 ;;Total ram usage:        2 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; Hardware stack levels required when called: 3
  2431 ;; This function calls:
  2432 ;;		___flge
  2433 ;;		___flsub
  2434 ;;		_atraso_ms
  2435 ;;		_atualizar
  2436 ;;		_lcd_cmd
  2437 ;;		_lcd_str
  2438 ;;		_pwmSet1
  2439 ;; This function is called by:
  2440 ;;		_main
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text5
  2445  005A62                     __ptext5:
  2446                           	callstack 0
  2447  005A62                     _resfria:
  2448                           	callstack 27
  2449  005A62                     
  2450                           ;main.c: 420:     int cont = 0;
  2451  005A62  0E00               	movlw	0
  2452  005A64  6E52               	movwf	(resfria@cont+1)^0,c
  2453  005A66  0E00               	movlw	0
  2454  005A68  6E51               	movwf	resfria@cont^0,c
  2455                           
  2456                           ;main.c: 421:     while (temperatura >= limiteSuperior || tempPontos >= limiteSuperior |
      +                          | tempLiquido >= limiteSuperior) {
  2457  005A6A  EF67  F02D         	goto	l4622
  2458  005A6E                     l4608:
  2459                           
  2460                           ;main.c: 422:         lcd_cmd(0x80);
  2461  005A6E  0E80               	movlw	128
  2462  005A70  EC98  F024         	call	_lcd_cmd
  2463  005A74                     
  2464                           ;main.c: 423:         lcd_str("##RESFRIANDO");
  2465  005A74  0E73               	movlw	low STR_27
  2466  005A76  6E08               	movwf	lcd_str@str^0,c
  2467  005A78  0E7F               	movlw	high STR_27
  2468  005A7A  6E09               	movwf	(lcd_str@str+1)^0,c
  2469  005A7C  ECFF  F024         	call	_lcd_str	;wreg free
  2470  005A80                     
  2471                           ;main.c: 424:         pwmSet1(96);
  2472  005A80  0E60               	movlw	96
  2473  005A82  ECF9  F026         	call	_pwmSet1
  2474  005A86                     
  2475                           ;main.c: 425:         temperatura -= 0.25;
  2476  005A86  C07B  F038         	movff	_temperatura,___flsub@b
  2477  005A8A  C07C  F039         	movff	_temperatura+1,___flsub@b+1
  2478  005A8E  C07D  F03A         	movff	_temperatura+2,___flsub@b+2
  2479  005A92  C07E  F03B         	movff	_temperatura+3,___flsub@b+3
  2480  005A96  0E00               	movlw	0
  2481  005A98  6E3C               	movwf	___flsub@a^0,c
  2482  005A9A  0E00               	movlw	0
  2483  005A9C  6E3D               	movwf	(___flsub@a+1)^0,c
  2484  005A9E  0E80               	movlw	128
  2485  005AA0  6E3E               	movwf	(___flsub@a+2)^0,c
  2486  005AA2  0E3E               	movlw	62
  2487  005AA4  6E3F               	movwf	(___flsub@a+3)^0,c
  2488  005AA6  ECDC  F024         	call	___flsub	;wreg free
  2489  005AAA  C038  F07B         	movff	?___flsub,_temperatura
  2490  005AAE  C039  F07C         	movff	?___flsub+1,_temperatura+1
  2491  005AB2  C03A  F07D         	movff	?___flsub+2,_temperatura+2
  2492  005AB6  C03B  F07E         	movff	?___flsub+3,_temperatura+3
  2493  005ABA                     
  2494                           ;main.c: 426:         atraso_ms(150);
  2495  005ABA  0E00               	movlw	0
  2496  005ABC  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2497  005ABE  0E96               	movlw	150
  2498  005AC0  6E01               	movwf	atraso_ms@valor^0,c
  2499  005AC2  EC29  F026         	call	_atraso_ms	;wreg free
  2500  005AC6                     
  2501                           ;main.c: 427:         atualizar();
  2502  005AC6  EC7C  F02E         	call	_atualizar	;wreg free
  2503  005ACA                     
  2504                           ;main.c: 428:         cont++;
  2505  005ACA  4A51               	infsnz	resfria@cont^0,f,c
  2506  005ACC  2A52               	incf	(resfria@cont+1)^0,f,c
  2507  005ACE                     l4622:
  2508                           
  2509                           ;main.c: 421:     while (temperatura >= limiteSuperior || tempPontos >= limiteSuperior |
      +                          | tempLiquido >= limiteSuperior) {
  2510  005ACE  C07B  F001         	movff	_temperatura,___flge@ff1
  2511  005AD2  C07C  F002         	movff	_temperatura+1,___flge@ff1+1
  2512  005AD6  C07D  F003         	movff	_temperatura+2,___flge@ff1+2
  2513  005ADA  C07E  F004         	movff	_temperatura+3,___flge@ff1+3
  2514  005ADE  0E00               	movlw	0
  2515  005AE0  6E05               	movwf	___flge@ff2^0,c
  2516  005AE2  0E00               	movlw	0
  2517  005AE4  6E06               	movwf	(___flge@ff2+1)^0,c
  2518  005AE6  0E00               	movlw	0
  2519  005AE8  6E07               	movwf	(___flge@ff2+2)^0,c
  2520  005AEA  0E41               	movlw	65
  2521  005AEC  6E08               	movwf	(___flge@ff2+3)^0,c
  2522  005AEE  EC83  F02A         	call	___flge	;wreg free
  2523  005AF2  B0D8               	btfsc	status,0,c
  2524  005AF4  EF7E  F02D         	goto	u4911
  2525  005AF8  EF80  F02D         	goto	u4910
  2526  005AFC                     u4911:
  2527  005AFC  EF37  F02D         	goto	l4608
  2528  005B00                     u4910:
  2529  005B00  C073  F001         	movff	_tempPontos,___flge@ff1
  2530  005B04  C074  F002         	movff	_tempPontos+1,___flge@ff1+1
  2531  005B08  C075  F003         	movff	_tempPontos+2,___flge@ff1+2
  2532  005B0C  C076  F004         	movff	_tempPontos+3,___flge@ff1+3
  2533  005B10  0E00               	movlw	0
  2534  005B12  6E05               	movwf	___flge@ff2^0,c
  2535  005B14  0E00               	movlw	0
  2536  005B16  6E06               	movwf	(___flge@ff2+1)^0,c
  2537  005B18  0E00               	movlw	0
  2538  005B1A  6E07               	movwf	(___flge@ff2+2)^0,c
  2539  005B1C  0E41               	movlw	65
  2540  005B1E  6E08               	movwf	(___flge@ff2+3)^0,c
  2541  005B20  EC83  F02A         	call	___flge	;wreg free
  2542  005B24  B0D8               	btfsc	status,0,c
  2543  005B26  EF97  F02D         	goto	u4921
  2544  005B2A  EF99  F02D         	goto	u4920
  2545  005B2E                     u4921:
  2546  005B2E  EF37  F02D         	goto	l4608
  2547  005B32                     u4920:
  2548  005B32  C077  F001         	movff	_tempLiquido,___flge@ff1
  2549  005B36  C078  F002         	movff	_tempLiquido+1,___flge@ff1+1
  2550  005B3A  C079  F003         	movff	_tempLiquido+2,___flge@ff1+2
  2551  005B3E  C07A  F004         	movff	_tempLiquido+3,___flge@ff1+3
  2552  005B42  0E00               	movlw	0
  2553  005B44  6E05               	movwf	___flge@ff2^0,c
  2554  005B46  0E00               	movlw	0
  2555  005B48  6E06               	movwf	(___flge@ff2+1)^0,c
  2556  005B4A  0E00               	movlw	0
  2557  005B4C  6E07               	movwf	(___flge@ff2+2)^0,c
  2558  005B4E  0E41               	movlw	65
  2559  005B50  6E08               	movwf	(___flge@ff2+3)^0,c
  2560  005B52  EC83  F02A         	call	___flge	;wreg free
  2561  005B56  B0D8               	btfsc	status,0,c
  2562  005B58  EFB0  F02D         	goto	u4931
  2563  005B5C  EFB2  F02D         	goto	u4930
  2564  005B60                     u4931:
  2565  005B60  EF37  F02D         	goto	l4608
  2566  005B64                     u4930:
  2567  005B64                     
  2568                           ;main.c: 430:     if (cont != 0) {
  2569  005B64  5051               	movf	resfria@cont^0,w,c
  2570  005B66  1052               	iorwf	(resfria@cont+1)^0,w,c
  2571  005B68  B4D8               	btfsc	status,2,c
  2572  005B6A  EFB9  F02D         	goto	u4941
  2573  005B6E  EFBB  F02D         	goto	u4940
  2574  005B72                     u4941:
  2575  005B72  EFD0  F02D         	goto	l4636
  2576  005B76                     u4940:
  2577  005B76                     
  2578                           ;main.c: 431:         lcd_cmd(0x01);
  2579  005B76  0E01               	movlw	1
  2580  005B78  EC98  F024         	call	_lcd_cmd
  2581                           
  2582                           ;main.c: 432:         lcd_cmd(0x80);
  2583  005B7C  0E80               	movlw	128
  2584  005B7E  EC98  F024         	call	_lcd_cmd
  2585  005B82                     
  2586                           ;main.c: 433:         lcd_str("ESCOLHA");
  2587  005B82  0EE9               	movlw	low STR_28
  2588  005B84  6E08               	movwf	lcd_str@str^0,c
  2589  005B86  0E7F               	movlw	high STR_28
  2590  005B88  6E09               	movwf	(lcd_str@str+1)^0,c
  2591  005B8A  ECFF  F024         	call	_lcd_str	;wreg free
  2592  005B8E                     
  2593                           ;main.c: 434:         lcd_cmd(0x90);
  2594  005B8E  0E90               	movlw	144
  2595  005B90  EC98  F024         	call	_lcd_cmd
  2596                           
  2597                           ;main.c: 435:         lcd_str("# - Menu");
  2598  005B94  0ED0               	movlw	low STR_29
  2599  005B96  6E08               	movwf	lcd_str@str^0,c
  2600  005B98  0E7F               	movlw	high STR_29
  2601  005B9A  6E09               	movwf	(lcd_str@str+1)^0,c
  2602  005B9C  ECFF  F024         	call	_lcd_str	;wreg free
  2603  005BA0                     l4636:
  2604                           
  2605                           ;main.c: 437:     pwmSet1(0);
  2606  005BA0  0E00               	movlw	0
  2607  005BA2  ECF9  F026         	call	_pwmSet1
  2608  005BA6  0012               	return		;funcret
  2609  005BA8                     __end_of_resfria:
  2610                           	callstack 0
  2611                           
  2612 ;; *************** function _pwmSet1 *****************
  2613 ;; Defined at:
  2614 ;;		line 23 in file "pwm.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  porcento        1    wreg     unsigned char 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  porcento        1   14[COMRAM] unsigned char 
  2619 ;;  val             2   15[COMRAM] unsigned int 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2629 ;;      Params:         0       0       0       0       0       0       0
  2630 ;;      Locals:         3       0       0       0       0       0       0
  2631 ;;      Temps:          2       0       0       0       0       0       0
  2632 ;;      Totals:         5       0       0       0       0       0       0
  2633 ;;Total ram usage:        5 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 1
  2636 ;; This function calls:
  2637 ;;		___lwdiv
  2638 ;;		___wmul
  2639 ;; This function is called by:
  2640 ;;		_resfria
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text6
  2645  004DF2                     __ptext6:
  2646                           	callstack 0
  2647  004DF2                     _pwmSet1:
  2648                           	callstack 28
  2649                           
  2650                           ;incstack = 0
  2651                           ;pwmSet1@porcento stored from wreg
  2652  004DF2  6E0F               	movwf	pwmSet1@porcento^0,c
  2653  004DF4                     
  2654                           ;pwm.c: 23: void pwmSet1(unsigned char porcento);pwm.c: 24: {;pwm.c: 30:  unsigned int v
      +                          al = ((unsigned int)porcento) *((*(volatile __near unsigned char*)0xFCB)+1);
  2655  004DF4  0E01               	movlw	1
  2656  004DF6  24CB               	addwf	203,w,c	;volatile
  2657  004DF8  6E01               	movwf	___wmul@multiplier^0,c
  2658  004DFA  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2659  004DFC  0E00               	movlw	0
  2660  004DFE  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  2661  004E00  C00F  F003         	movff	pwmSet1@porcento,___wmul@multiplicand
  2662  004E04  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  2663  004E06  EC85  F024         	call	___wmul	;wreg free
  2664  004E0A  C001  F010         	movff	?___wmul,pwmSet1@val
  2665  004E0E  C002  F011         	movff	?___wmul+1,pwmSet1@val+1
  2666  004E12                     
  2667                           ;pwm.c: 31:  val = val / 25;
  2668  004E12  C010  F006         	movff	pwmSet1@val,___lwdiv@dividend
  2669  004E16  C011  F007         	movff	pwmSet1@val+1,___lwdiv@dividend+1
  2670  004E1A  0E00               	movlw	0
  2671  004E1C  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2672  004E1E  0E19               	movlw	25
  2673  004E20  6E08               	movwf	___lwdiv@divisor^0,c
  2674  004E22  EC2F  F027         	call	___lwdiv	;wreg free
  2675  004E26  C006  F010         	movff	?___lwdiv,pwmSet1@val
  2676  004E2A  C007  F011         	movff	?___lwdiv+1,pwmSet1@val+1
  2677  004E2E                     
  2678                           ;pwm.c: 33:  val &= 0x03ff;
  2679  004E2E  0EFF               	movlw	255
  2680  004E30  1610               	andwf	pwmSet1@val^0,f,c
  2681  004E32  0E03               	movlw	3
  2682  004E34  1611               	andwf	(pwmSet1@val+1)^0,f,c
  2683  004E36                     
  2684                           ;pwm.c: 35:  (*(volatile __near unsigned char*)0xFBE) = val >> 2;
  2685  004E36  C010  F00D         	movff	pwmSet1@val,??_pwmSet1
  2686  004E3A  C011  F00E         	movff	pwmSet1@val+1,??_pwmSet1+1
  2687  004E3E  90D8               	bcf	status,0,c
  2688  004E40  320E               	rrcf	(??_pwmSet1+1)^0,f,c
  2689  004E42  320D               	rrcf	??_pwmSet1^0,f,c
  2690  004E44  90D8               	bcf	status,0,c
  2691  004E46  320E               	rrcf	(??_pwmSet1+1)^0,f,c
  2692  004E48  320D               	rrcf	??_pwmSet1^0,f,c
  2693  004E4A  500D               	movf	??_pwmSet1^0,w,c
  2694  004E4C  6EBE               	movwf	190,c	;volatile
  2695  004E4E                     
  2696                           ;pwm.c: 37:  (*(volatile __near unsigned char*)0xFBD) |= (val & 0x0003) << 4;
  2697  004E4E  C010  F00D         	movff	pwmSet1@val,??_pwmSet1
  2698  004E52  0E03               	movlw	3
  2699  004E54  160D               	andwf	??_pwmSet1^0,f,c
  2700  004E56  380D               	swapf	??_pwmSet1^0,w,c
  2701  004E58  0BF0               	andlw	240
  2702  004E5A  12BD               	iorwf	189,f,c	;volatile
  2703  004E5C  0012               	return		;funcret
  2704  004E5E                     __end_of_pwmSet1:
  2705                           	callstack 0
  2706                           
  2707 ;; *************** function ___wmul *****************
  2708 ;; Defined at:
  2709 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  multiplier      2    0[COMRAM] unsigned int 
  2712 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  product         2    4[COMRAM] unsigned int 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  2    0[COMRAM] unsigned int 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0, prodl, prodh
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2724 ;;      Params:         4       0       0       0       0       0       0
  2725 ;;      Locals:         2       0       0       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0
  2727 ;;      Totals:         6       0       0       0       0       0       0
  2728 ;;Total ram usage:        6 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; This function calls:
  2731 ;;		Nothing
  2732 ;; This function is called by:
  2733 ;;		_pwmSet1
  2734 ;;		_pwmSet2
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text7
  2739  00490A                     __ptext7:
  2740                           	callstack 0
  2741  00490A                     ___wmul:
  2742                           	callstack 28
  2743  00490A  5001               	movf	___wmul@multiplier^0,w,c
  2744  00490C  0203               	mulwf	___wmul@multiplicand^0,c
  2745  00490E  CFF3 F005          	movff	prodl,___wmul@product
  2746  004912  CFF4 F006          	movff	prodh,___wmul@product+1
  2747  004916  5001               	movf	___wmul@multiplier^0,w,c
  2748  004918  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2749  00491A  50F3               	movf	243,w,c
  2750  00491C  2606               	addwf	(___wmul@product+1)^0,f,c
  2751  00491E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2752  004920  0203               	mulwf	___wmul@multiplicand^0,c
  2753  004922  50F3               	movf	243,w,c
  2754  004924  2606               	addwf	(___wmul@product+1)^0,f,c
  2755  004926  C005  F001         	movff	___wmul@product,?___wmul
  2756  00492A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2757  00492E  0012               	return		;funcret
  2758  004930                     __end_of___wmul:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function ___flsub *****************
  2762 ;; Defined at:
  2763 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  b               4   55[COMRAM] unsigned int 
  2766 ;;  a               4   59[COMRAM] unsigned int 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  4   55[COMRAM] unsigned int 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2778 ;;      Params:         8       0       0       0       0       0       0
  2779 ;;      Locals:         0       0       0       0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0
  2781 ;;      Totals:         8       0       0       0       0       0       0
  2782 ;;Total ram usage:        8 bytes
  2783 ;; Hardware stack levels used: 1
  2784 ;; Hardware stack levels required when called: 1
  2785 ;; This function calls:
  2786 ;;		___fladd
  2787 ;; This function is called by:
  2788 ;;		_resfria
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text8
  2793  0049B8                     __ptext8:
  2794                           	callstack 0
  2795  0049B8                     ___flsub:
  2796                           	callstack 28
  2797  0049B8  0E00               	movlw	0
  2798  0049BA  1A3C               	xorwf	___flsub@a^0,f,c
  2799  0049BC  0E00               	movlw	0
  2800  0049BE  1A3D               	xorwf	(___flsub@a+1)^0,f,c
  2801  0049C0  0E00               	movlw	0
  2802  0049C2  1A3E               	xorwf	(___flsub@a+2)^0,f,c
  2803  0049C4  0E80               	movlw	128
  2804  0049C6  1A3F               	xorwf	(___flsub@a+3)^0,f,c
  2805  0049C8  C038  F028         	movff	___flsub@b,___fladd@b
  2806  0049CC  C039  F029         	movff	___flsub@b+1,___fladd@b+1
  2807  0049D0  C03A  F02A         	movff	___flsub@b+2,___fladd@b+2
  2808  0049D4  C03B  F02B         	movff	___flsub@b+3,___fladd@b+3
  2809  0049D8  C03C  F02C         	movff	___flsub@a,___fladd@a
  2810  0049DC  C03D  F02D         	movff	___flsub@a+1,___fladd@a+1
  2811  0049E0  C03E  F02E         	movff	___flsub@a+2,___fladd@a+2
  2812  0049E4  C03F  F02F         	movff	___flsub@a+3,___fladd@a+3
  2813  0049E8  ECE8  F03C         	call	___fladd	;wreg free
  2814  0049EC  C028  F038         	movff	?___fladd,?___flsub
  2815  0049F0  C029  F039         	movff	?___fladd+1,?___flsub+1
  2816  0049F4  C02A  F03A         	movff	?___fladd+2,?___flsub+2
  2817  0049F8  C02B  F03B         	movff	?___fladd+3,?___flsub+3
  2818  0049FC  0012               	return		;funcret
  2819  0049FE                     __end_of___flsub:
  2820                           	callstack 0
  2821                           
  2822 ;; *************** function _pwmInit *****************
  2823 ;; Defined at:
  2824 ;;		line 59 in file "pwm.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;		None
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;		None
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  1    wreg      void 
  2831 ;; Registers used:
  2832 ;;		wreg, status,2, status,0
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2838 ;;      Params:         0       0       0       0       0       0       0
  2839 ;;      Locals:         0       0       0       0       0       0       0
  2840 ;;      Temps:          0       0       0       0       0       0       0
  2841 ;;      Totals:         0       0       0       0       0       0       0
  2842 ;;Total ram usage:        0 bytes
  2843 ;; Hardware stack levels used: 1
  2844 ;; This function calls:
  2845 ;;		Nothing
  2846 ;; This function is called by:
  2847 ;;		_main
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           	psect	text9
  2852  004872                     __ptext9:
  2853                           	callstack 0
  2854  004872                     _pwmInit:
  2855                           	callstack 30
  2856  004872                     
  2857                           ;pwm.c: 61:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
  2858  004872  9294               	bcf	148,1,c	;volatile
  2859                           
  2860                           ;pwm.c: 62:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<2));
  2861  004874  9494               	bcf	148,2,c	;volatile
  2862  004876                     
  2863                           ;pwm.c: 64:  (*(volatile __near unsigned char*)0xFCA) |= 0b00000011;
  2864  004876  0E03               	movlw	3
  2865  004878  12CA               	iorwf	202,f,c	;volatile
  2866  00487A                     
  2867                           ;pwm.c: 65:  (((*(volatile __near unsigned char*)0xFCA)) |= (1<<2));
  2868  00487A  84CA               	bsf	202,2,c	;volatile
  2869                           
  2870                           ;pwm.c: 68:  (*(volatile __near unsigned char*)0xFBD) |= 0b00001100;
  2871  00487C  0E0C               	movlw	12
  2872  00487E  12BD               	iorwf	189,f,c	;volatile
  2873                           
  2874                           ;pwm.c: 69:  (*(volatile __near unsigned char*)0xFBA) |= 0b00001100;
  2875  004880  0E0C               	movlw	12
  2876  004882  12BA               	iorwf	186,f,c	;volatile
  2877  004884  0012               	return		;funcret
  2878  004886                     __end_of_pwmInit:
  2879                           	callstack 0
  2880                           
  2881 ;; *************** function _perigo *****************
  2882 ;; Defined at:
  2883 ;;		line 524 in file "main.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;		None
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  i               1   17[COMRAM] unsigned char 
  2888 ;;  k               1   16[COMRAM] unsigned char 
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2898 ;;      Params:         0       0       0       0       0       0       0
  2899 ;;      Locals:         2       0       0       0       0       0       0
  2900 ;;      Temps:          0       0       0       0       0       0       0
  2901 ;;      Totals:         2       0       0       0       0       0       0
  2902 ;;Total ram usage:        2 bytes
  2903 ;; Hardware stack levels used: 1
  2904 ;; Hardware stack levels required when called: 2
  2905 ;; This function calls:
  2906 ;;		___flge
  2907 ;;		_atraso_ms
  2908 ;;		_pwmFrequency
  2909 ;; This function is called by:
  2910 ;;		_main
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text10
  2915  00616C                     __ptext10:
  2916                           	callstack 0
  2917  00616C                     _perigo:
  2918                           	callstack 28
  2919  00616C                     
  2920                           ;main.c: 525:     unsigned char k, i;;main.c: 526:     if (temperatura >= limiteSuperior
      +                           + 1 || tempPontos >= limiteSuperior + 1 || tempLiquido >= limiteSuperior + 1 || tempera
      +                          tura <= limiteInferior - 1 || tempPontos <= limiteInferior - 1 || tempLiquido <= limiteI
      +                          nferior - 1) {
  2921  00616C  C07B  F001         	movff	_temperatura,___flge@ff1
  2922  006170  C07C  F002         	movff	_temperatura+1,___flge@ff1+1
  2923  006174  C07D  F003         	movff	_temperatura+2,___flge@ff1+2
  2924  006178  C07E  F004         	movff	_temperatura+3,___flge@ff1+3
  2925  00617C  0E00               	movlw	0
  2926  00617E  6E05               	movwf	___flge@ff2^0,c
  2927  006180  0E00               	movlw	0
  2928  006182  6E06               	movwf	(___flge@ff2+1)^0,c
  2929  006184  0E10               	movlw	16
  2930  006186  6E07               	movwf	(___flge@ff2+2)^0,c
  2931  006188  0E41               	movlw	65
  2932  00618A  6E08               	movwf	(___flge@ff2+3)^0,c
  2933  00618C  EC83  F02A         	call	___flge	;wreg free
  2934  006190  B0D8               	btfsc	status,0,c
  2935  006192  EFCD  F030         	goto	u5061
  2936  006196  EFCF  F030         	goto	u5060
  2937  00619A                     u5061:
  2938  00619A  EF4C  F031         	goto	l4740
  2939  00619E                     u5060:
  2940  00619E  C073  F001         	movff	_tempPontos,___flge@ff1
  2941  0061A2  C074  F002         	movff	_tempPontos+1,___flge@ff1+1
  2942  0061A6  C075  F003         	movff	_tempPontos+2,___flge@ff1+2
  2943  0061AA  C076  F004         	movff	_tempPontos+3,___flge@ff1+3
  2944  0061AE  0E00               	movlw	0
  2945  0061B0  6E05               	movwf	___flge@ff2^0,c
  2946  0061B2  0E00               	movlw	0
  2947  0061B4  6E06               	movwf	(___flge@ff2+1)^0,c
  2948  0061B6  0E10               	movlw	16
  2949  0061B8  6E07               	movwf	(___flge@ff2+2)^0,c
  2950  0061BA  0E41               	movlw	65
  2951  0061BC  6E08               	movwf	(___flge@ff2+3)^0,c
  2952  0061BE  EC83  F02A         	call	___flge	;wreg free
  2953  0061C2  B0D8               	btfsc	status,0,c
  2954  0061C4  EFE6  F030         	goto	u5071
  2955  0061C8  EFE8  F030         	goto	u5070
  2956  0061CC                     u5071:
  2957  0061CC  EF4C  F031         	goto	l4740
  2958  0061D0                     u5070:
  2959  0061D0  C077  F001         	movff	_tempLiquido,___flge@ff1
  2960  0061D4  C078  F002         	movff	_tempLiquido+1,___flge@ff1+1
  2961  0061D8  C079  F003         	movff	_tempLiquido+2,___flge@ff1+2
  2962  0061DC  C07A  F004         	movff	_tempLiquido+3,___flge@ff1+3
  2963  0061E0  0E00               	movlw	0
  2964  0061E2  6E05               	movwf	___flge@ff2^0,c
  2965  0061E4  0E00               	movlw	0
  2966  0061E6  6E06               	movwf	(___flge@ff2+1)^0,c
  2967  0061E8  0E10               	movlw	16
  2968  0061EA  6E07               	movwf	(___flge@ff2+2)^0,c
  2969  0061EC  0E41               	movlw	65
  2970  0061EE  6E08               	movwf	(___flge@ff2+3)^0,c
  2971  0061F0  EC83  F02A         	call	___flge	;wreg free
  2972  0061F4  B0D8               	btfsc	status,0,c
  2973  0061F6  EFFF  F030         	goto	u5081
  2974  0061FA  EF01  F031         	goto	u5080
  2975  0061FE                     u5081:
  2976  0061FE  EF4C  F031         	goto	l4740
  2977  006202                     u5080:
  2978  006202  0E00               	movlw	0
  2979  006204  6E01               	movwf	___flge@ff1^0,c
  2980  006206  0E00               	movlw	0
  2981  006208  6E02               	movwf	(___flge@ff1+1)^0,c
  2982  00620A  0E80               	movlw	128
  2983  00620C  6E03               	movwf	(___flge@ff1+2)^0,c
  2984  00620E  0E3F               	movlw	63
  2985  006210  6E04               	movwf	(___flge@ff1+3)^0,c
  2986  006212  C07B  F005         	movff	_temperatura,___flge@ff2
  2987  006216  C07C  F006         	movff	_temperatura+1,___flge@ff2+1
  2988  00621A  C07D  F007         	movff	_temperatura+2,___flge@ff2+2
  2989  00621E  C07E  F008         	movff	_temperatura+3,___flge@ff2+3
  2990  006222  EC83  F02A         	call	___flge	;wreg free
  2991  006226  B0D8               	btfsc	status,0,c
  2992  006228  EF18  F031         	goto	u5091
  2993  00622C  EF1A  F031         	goto	u5090
  2994  006230                     u5091:
  2995  006230  EF4C  F031         	goto	l4740
  2996  006234                     u5090:
  2997  006234  0E00               	movlw	0
  2998  006236  6E01               	movwf	___flge@ff1^0,c
  2999  006238  0E00               	movlw	0
  3000  00623A  6E02               	movwf	(___flge@ff1+1)^0,c
  3001  00623C  0E80               	movlw	128
  3002  00623E  6E03               	movwf	(___flge@ff1+2)^0,c
  3003  006240  0E3F               	movlw	63
  3004  006242  6E04               	movwf	(___flge@ff1+3)^0,c
  3005  006244  C073  F005         	movff	_tempPontos,___flge@ff2
  3006  006248  C074  F006         	movff	_tempPontos+1,___flge@ff2+1
  3007  00624C  C075  F007         	movff	_tempPontos+2,___flge@ff2+2
  3008  006250  C076  F008         	movff	_tempPontos+3,___flge@ff2+3
  3009  006254  EC83  F02A         	call	___flge	;wreg free
  3010  006258  B0D8               	btfsc	status,0,c
  3011  00625A  EF31  F031         	goto	u5101
  3012  00625E  EF33  F031         	goto	u5100
  3013  006262                     u5101:
  3014  006262  EF4C  F031         	goto	l4740
  3015  006266                     u5100:
  3016  006266  0E00               	movlw	0
  3017  006268  6E01               	movwf	___flge@ff1^0,c
  3018  00626A  0E00               	movlw	0
  3019  00626C  6E02               	movwf	(___flge@ff1+1)^0,c
  3020  00626E  0E80               	movlw	128
  3021  006270  6E03               	movwf	(___flge@ff1+2)^0,c
  3022  006272  0E3F               	movlw	63
  3023  006274  6E04               	movwf	(___flge@ff1+3)^0,c
  3024  006276  C077  F005         	movff	_tempLiquido,___flge@ff2
  3025  00627A  C078  F006         	movff	_tempLiquido+1,___flge@ff2+1
  3026  00627E  C079  F007         	movff	_tempLiquido+2,___flge@ff2+2
  3027  006282  C07A  F008         	movff	_tempLiquido+3,___flge@ff2+3
  3028  006286  EC83  F02A         	call	___flge	;wreg free
  3029  00628A  A0D8               	btfss	status,0,c
  3030  00628C  EF4A  F031         	goto	u5111
  3031  006290  EF4C  F031         	goto	u5110
  3032  006294                     u5111:
  3033  006294  EF7B  F031         	goto	l494
  3034  006298                     u5110:
  3035  006298                     l4740:
  3036                           
  3037                           ;main.c: 527:         pwmFrequency(10000);
  3038  006298  0E27               	movlw	39
  3039  00629A  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  3040  00629C  0E10               	movlw	16
  3041  00629E  6E0F               	movwf	pwmFrequency@freq^0,c
  3042  0062A0  EC72  F024         	call	_pwmFrequency	;wreg free
  3043  0062A4                     
  3044                           ;main.c: 529:         for (k = 0; k < 3; k++) {
  3045  0062A4  0E00               	movlw	0
  3046  0062A6  6E11               	movwf	perigo@k^0,c
  3047  0062A8                     l4748:
  3048                           
  3049                           ;main.c: 530:             for (i = 1; i > 0; i = i * 2) {
  3050  0062A8  0E01               	movlw	1
  3051  0062AA  6E12               	movwf	perigo@i^0,c
  3052  0062AC                     l4752:
  3053                           
  3054                           ;main.c: 531:                 ((TRISC) |= (1<<(1)));
  3055  0062AC  8294               	bsf	148,1,c	;volatile
  3056  0062AE                     
  3057                           ;main.c: 532:                 PORTB = i;
  3058  0062AE  C012  FF81         	movff	perigo@i,3969	;volatile
  3059  0062B2                     
  3060                           ;main.c: 533:                 PORTD = i;
  3061  0062B2  C012  FF83         	movff	perigo@i,3971	;volatile
  3062  0062B6                     
  3063                           ;main.c: 534:                 atraso_ms(100);
  3064  0062B6  0E00               	movlw	0
  3065  0062B8  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3066  0062BA  0E64               	movlw	100
  3067  0062BC  6E01               	movwf	atraso_ms@valor^0,c
  3068  0062BE  EC29  F026         	call	_atraso_ms	;wreg free
  3069  0062C2                     
  3070                           ;main.c: 535:             }
  3071  0062C2  5012               	movf	perigo@i^0,w,c
  3072  0062C4  0D02               	mullw	2
  3073  0062C6  CFF3 F012          	movff	prodl,perigo@i
  3074  0062CA  5012               	movf	perigo@i^0,w,c
  3075  0062CC  A4D8               	btfss	status,2,c
  3076  0062CE  EF6B  F031         	goto	u5121
  3077  0062D2  EF6D  F031         	goto	u5120
  3078  0062D6                     u5121:
  3079  0062D6  EF56  F031         	goto	l4752
  3080  0062DA                     u5120:
  3081  0062DA                     
  3082                           ;main.c: 536:             ((TRISC) &= ~(1<<(1)));
  3083  0062DA  9294               	bcf	148,1,c	;volatile
  3084                           
  3085                           ;main.c: 537:         }
  3086  0062DC  2A11               	incf	perigo@k^0,f,c
  3087  0062DE  0E02               	movlw	2
  3088  0062E0  6411               	cpfsgt	perigo@k^0,c
  3089  0062E2  EF75  F031         	goto	u5131
  3090  0062E6  EF77  F031         	goto	u5130
  3091  0062EA                     u5131:
  3092  0062EA  EF54  F031         	goto	l4748
  3093  0062EE                     u5130:
  3094  0062EE                     
  3095                           ;main.c: 539:         PORTB = 0;
  3096  0062EE  0E00               	movlw	0
  3097  0062F0  6E81               	movwf	129,c	;volatile
  3098                           
  3099                           ;main.c: 540:         PORTD = 0;
  3100  0062F2  0E00               	movlw	0
  3101  0062F4  6E83               	movwf	131,c	;volatile
  3102  0062F6                     l494:
  3103  0062F6  0012               	return		;funcret
  3104  0062F8                     __end_of_perigo:
  3105                           	callstack 0
  3106                           
  3107 ;; *************** function _pwmFrequency *****************
  3108 ;; Defined at:
  3109 ;;		line 52 in file "pwm.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  freq            2   14[COMRAM] unsigned int 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3123 ;;      Params:         2       0       0       0       0       0       0
  3124 ;;      Locals:         0       0       0       0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0
  3126 ;;      Totals:         2       0       0       0       0       0       0
  3127 ;;Total ram usage:        2 bytes
  3128 ;; Hardware stack levels used: 1
  3129 ;; Hardware stack levels required when called: 1
  3130 ;; This function calls:
  3131 ;;		___aldiv
  3132 ;; This function is called by:
  3133 ;;		_perigo
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text11
  3138  0048E4                     __ptext11:
  3139                           	callstack 0
  3140  0048E4                     _pwmFrequency:
  3141                           	callstack 28
  3142  0048E4                     
  3143                           ;pwm.c: 52: void pwmFrequency(unsigned int freq);pwm.c: 53: {;pwm.c: 56:  (*(volatile __
      +                          near unsigned char*)0xFCB) = (125000/(freq)) - 1;
  3144  0048E4  0E48               	movlw	72
  3145  0048E6  6E01               	movwf	___aldiv@dividend^0,c
  3146  0048E8  0EE8               	movlw	232
  3147  0048EA  6E02               	movwf	(___aldiv@dividend+1)^0,c
  3148  0048EC  0E01               	movlw	1
  3149  0048EE  6E03               	movwf	(___aldiv@dividend+2)^0,c
  3150  0048F0  0E00               	movlw	0
  3151  0048F2  6E04               	movwf	(___aldiv@dividend+3)^0,c
  3152  0048F4  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  3153  0048F8  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  3154  0048FC  6A07               	clrf	(___aldiv@divisor+2)^0,c
  3155  0048FE  6A08               	clrf	(___aldiv@divisor+3)^0,c
  3156  004900  EC0C  F02C         	call	___aldiv	;wreg free
  3157  004904  0401               	decf	?___aldiv^0,w,c
  3158  004906  6ECB               	movwf	203,c	;volatile
  3159  004908  0012               	return		;funcret
  3160  00490A                     __end_of_pwmFrequency:
  3161                           	callstack 0
  3162                           
  3163 ;; *************** function ___aldiv *****************
  3164 ;; Defined at:
  3165 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  dividend        4    0[COMRAM] long 
  3168 ;;  divisor         4    4[COMRAM] long 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  quotient        4   10[COMRAM] long 
  3171 ;;  sign            1    9[COMRAM] unsigned char 
  3172 ;;  counter         1    8[COMRAM] unsigned char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  4    0[COMRAM] long 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3182 ;;      Params:         8       0       0       0       0       0       0
  3183 ;;      Locals:         6       0       0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0
  3185 ;;      Totals:        14       0       0       0       0       0       0
  3186 ;;Total ram usage:       14 bytes
  3187 ;; Hardware stack levels used: 1
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_pwmFrequency
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           	psect	text12
  3196  005818                     __ptext12:
  3197                           	callstack 0
  3198  005818                     ___aldiv:
  3199                           	callstack 28
  3200  005818  0E00               	movlw	0
  3201  00581A  6E0A               	movwf	___aldiv@sign^0,c
  3202  00581C  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  3203  00581E  EF15  F02C         	goto	u3100
  3204  005822  EF13  F02C         	goto	u3101
  3205  005826                     u3101:
  3206  005826  EF1F  F02C         	goto	l3306
  3207  00582A                     u3100:
  3208  00582A  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  3209  00582C  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  3210  00582E  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  3211  005830  6C05               	negf	___aldiv@divisor^0,c
  3212  005832  0E00               	movlw	0
  3213  005834  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  3214  005836  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  3215  005838  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  3216  00583A  0E01               	movlw	1
  3217  00583C  6E0A               	movwf	___aldiv@sign^0,c
  3218  00583E                     l3306:
  3219  00583E  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  3220  005840  EF26  F02C         	goto	u3110
  3221  005844  EF24  F02C         	goto	u3111
  3222  005848                     u3111:
  3223  005848  EF30  F02C         	goto	l3312
  3224  00584C                     u3110:
  3225  00584C  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  3226  00584E  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  3227  005850  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  3228  005852  6C01               	negf	___aldiv@dividend^0,c
  3229  005854  0E00               	movlw	0
  3230  005856  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  3231  005858  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  3232  00585A  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  3233  00585C  0E01               	movlw	1
  3234  00585E  1A0A               	xorwf	___aldiv@sign^0,f,c
  3235  005860                     l3312:
  3236  005860  0E00               	movlw	0
  3237  005862  6E0B               	movwf	___aldiv@quotient^0,c
  3238  005864  0E00               	movlw	0
  3239  005866  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  3240  005868  0E00               	movlw	0
  3241  00586A  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  3242  00586C  0E00               	movlw	0
  3243  00586E  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  3244  005870  5005               	movf	___aldiv@divisor^0,w,c
  3245  005872  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  3246  005874  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  3247  005876  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  3248  005878  B4D8               	btfsc	status,2,c
  3249  00587A  EF41  F02C         	goto	u3121
  3250  00587E  EF43  F02C         	goto	u3120
  3251  005882                     u3121:
  3252  005882  EF79  F02C         	goto	l3334
  3253  005886                     u3120:
  3254  005886  0E01               	movlw	1
  3255  005888  6E09               	movwf	___aldiv@counter^0,c
  3256  00588A  EF4D  F02C         	goto	l3320
  3257  00588E                     l3318:
  3258  00588E  90D8               	bcf	status,0,c
  3259  005890  3605               	rlcf	___aldiv@divisor^0,f,c
  3260  005892  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  3261  005894  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  3262  005896  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  3263  005898  2A09               	incf	___aldiv@counter^0,f,c
  3264  00589A                     l3320:
  3265  00589A  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  3266  00589C  EF52  F02C         	goto	u3131
  3267  0058A0  EF54  F02C         	goto	u3130
  3268  0058A4                     u3131:
  3269  0058A4  EF47  F02C         	goto	l3318
  3270  0058A8                     u3130:
  3271  0058A8                     l3322:
  3272  0058A8  90D8               	bcf	status,0,c
  3273  0058AA  360B               	rlcf	___aldiv@quotient^0,f,c
  3274  0058AC  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  3275  0058AE  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  3276  0058B0  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  3277  0058B2  5005               	movf	___aldiv@divisor^0,w,c
  3278  0058B4  5C01               	subwf	___aldiv@dividend^0,w,c
  3279  0058B6  5006               	movf	(___aldiv@divisor+1)^0,w,c
  3280  0058B8  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  3281  0058BA  5007               	movf	(___aldiv@divisor+2)^0,w,c
  3282  0058BC  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  3283  0058BE  5008               	movf	(___aldiv@divisor+3)^0,w,c
  3284  0058C0  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  3285  0058C2  A0D8               	btfss	status,0,c
  3286  0058C4  EF66  F02C         	goto	u3141
  3287  0058C8  EF68  F02C         	goto	u3140
  3288  0058CC                     u3141:
  3289  0058CC  EF71  F02C         	goto	l3330
  3290  0058D0                     u3140:
  3291  0058D0  5005               	movf	___aldiv@divisor^0,w,c
  3292  0058D2  5E01               	subwf	___aldiv@dividend^0,f,c
  3293  0058D4  5006               	movf	(___aldiv@divisor+1)^0,w,c
  3294  0058D6  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  3295  0058D8  5007               	movf	(___aldiv@divisor+2)^0,w,c
  3296  0058DA  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  3297  0058DC  5008               	movf	(___aldiv@divisor+3)^0,w,c
  3298  0058DE  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  3299  0058E0  800B               	bsf	___aldiv@quotient^0,0,c
  3300  0058E2                     l3330:
  3301  0058E2  90D8               	bcf	status,0,c
  3302  0058E4  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  3303  0058E6  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  3304  0058E8  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  3305  0058EA  3205               	rrcf	___aldiv@divisor^0,f,c
  3306  0058EC  2E09               	decfsz	___aldiv@counter^0,f,c
  3307  0058EE  EF54  F02C         	goto	l3322
  3308  0058F2                     l3334:
  3309  0058F2  500A               	movf	___aldiv@sign^0,w,c
  3310  0058F4  B4D8               	btfsc	status,2,c
  3311  0058F6  EF7F  F02C         	goto	u3151
  3312  0058FA  EF81  F02C         	goto	u3150
  3313  0058FE                     u3151:
  3314  0058FE  EF89  F02C         	goto	l3338
  3315  005902                     u3150:
  3316  005902  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  3317  005904  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  3318  005906  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  3319  005908  6C0B               	negf	___aldiv@quotient^0,c
  3320  00590A  0E00               	movlw	0
  3321  00590C  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  3322  00590E  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  3323  005910  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  3324  005912                     l3338:
  3325  005912  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  3326  005916  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  3327  00591A  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  3328  00591E  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  3329  005922  0012               	return		;funcret
  3330  005924                     __end_of___aldiv:
  3331                           	callstack 0
  3332                           
  3333 ;; *************** function _maxEmin *****************
  3334 ;; Defined at:
  3335 ;;		line 464 in file "main.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;		None
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;		None
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3349 ;;      Params:         0       0       0       0       0       0       0
  3350 ;;      Locals:         0       0       0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0       0       0
  3352 ;;      Totals:         0       0       0       0       0       0       0
  3353 ;;Total ram usage:        0 bytes
  3354 ;; Hardware stack levels used: 1
  3355 ;; Hardware stack levels required when called: 3
  3356 ;; This function calls:
  3357 ;;		___flmul
  3358 ;;		___fltol
  3359 ;;		_itoa
  3360 ;;		_lcd_cmd
  3361 ;;		_lcd_dat
  3362 ;;		_lcd_str
  3363 ;; This function is called by:
  3364 ;;		_main
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           	psect	text13
  3369  005FEC                     __ptext13:
  3370                           	callstack 0
  3371  005FEC                     _maxEmin:
  3372                           	callstack 27
  3373  005FEC                     
  3374                           ;main.c: 465:     lcd_cmd(0x01);
  3375  005FEC  0E01               	movlw	1
  3376  005FEE  EC98  F024         	call	_lcd_cmd
  3377                           
  3378                           ;main.c: 466:     lcd_cmd(0x80);
  3379  005FF2  0E80               	movlw	128
  3380  005FF4  EC98  F024         	call	_lcd_cmd
  3381  005FF8                     
  3382                           ;main.c: 467:     lcd_str("#####MAXIMA#####");
  3383  005FF8  0EA1               	movlw	low STR_30
  3384  005FFA  6E08               	movwf	lcd_str@str^0,c
  3385  005FFC  0E7E               	movlw	high STR_30
  3386  005FFE  6E09               	movwf	(lcd_str@str+1)^0,c
  3387  006000  ECFF  F024         	call	_lcd_str	;wreg free
  3388  006004                     
  3389                           ;main.c: 470:     lcd_cmd(0xC0);
  3390  006004  0EC0               	movlw	192
  3391  006006  EC98  F024         	call	_lcd_cmd
  3392  00600A                     
  3393                           ;main.c: 471:     itoa(maximo * 10, str);
  3394  00600A  0E00               	movlw	0
  3395  00600C  6E13               	movwf	___flmul@a^0,c
  3396  00600E  0E00               	movlw	0
  3397  006010  6E14               	movwf	(___flmul@a+1)^0,c
  3398  006012  0E20               	movlw	32
  3399  006014  6E15               	movwf	(___flmul@a+2)^0,c
  3400  006016  0E41               	movlw	65
  3401  006018  6E16               	movwf	(___flmul@a+3)^0,c
  3402  00601A  C0A4  F00F         	movff	_maximo,___flmul@b
  3403  00601E  C0A5  F010         	movff	_maximo+1,___flmul@b+1
  3404  006022  C0A6  F011         	movff	_maximo+2,___flmul@b+2
  3405  006026  C0A7  F012         	movff	_maximo+3,___flmul@b+3
  3406  00602A  ECD3  F03A         	call	___flmul	;wreg free
  3407  00602E  C00F  F028         	movff	?___flmul,___fltol@f1
  3408  006032  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3409  006036  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3410  00603A  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3411  00603E  EC05  F02B         	call	___fltol	;wreg free
  3412  006042  C028  F032         	movff	?___fltol,itoa@val
  3413  006046  C029  F033         	movff	?___fltol+1,itoa@val+1
  3414  00604A  0E6D               	movlw	low _str
  3415  00604C  6E34               	movwf	itoa@str^0,c
  3416  00604E  0E00               	movlw	high _str
  3417  006050  6E35               	movwf	(itoa@str+1)^0,c
  3418  006052  EC88  F02B         	call	_itoa	;wreg free
  3419  006056                     
  3420                           ;main.c: 472:     lcd_dat('M');
  3421  006056  0E4D               	movlw	77
  3422  006058  ECAD  F024         	call	_lcd_dat
  3423  00605C                     
  3424                           ;main.c: 473:     if (maximo < 0) {
  3425  00605C  0100               	movlb	0	; () banked
  3426  00605E  BFA7               	btfsc	(_maximo+3)& (0+255),7,b
  3427  006060  EF36  F030         	goto	u4980
  3428  006064  EF34  F030         	goto	u4981
  3429  006068                     u4981:
  3430  006068  EF3F  F030         	goto	l4670
  3431  00606C                     u4980:
  3432  00606C                     
  3433                           ; BSR set to: 0
  3434                           ;main.c: 474:         lcd_cmd(0xC0 + 1);
  3435  00606C  0EC1               	movlw	193
  3436  00606E  EC98  F024         	call	_lcd_cmd
  3437  006072                     
  3438                           ;main.c: 475:         lcd_str("-");
  3439  006072  0EF4               	movlw	low (STR_11+15)
  3440  006074  6E08               	movwf	lcd_str@str^0,c
  3441  006076  0E7E               	movlw	high (STR_11+15)
  3442  006078  6E09               	movwf	(lcd_str@str+1)^0,c
  3443  00607A  ECFF  F024         	call	_lcd_str	;wreg free
  3444  00607E                     l4670:
  3445                           
  3446                           ;main.c: 477:     lcd_cmd(0xC0 + 2);
  3447  00607E  0EC2               	movlw	194
  3448  006080  EC98  F024         	call	_lcd_cmd
  3449  006084                     
  3450                           ;main.c: 478:     lcd_dat(str[2]);
  3451  006084  506F               	movf	(_str+2)^0,w,c
  3452  006086  ECAD  F024         	call	_lcd_dat
  3453  00608A                     
  3454                           ;main.c: 479:     lcd_dat(str[3]);
  3455  00608A  5070               	movf	(_str+3)^0,w,c
  3456  00608C  ECAD  F024         	call	_lcd_dat
  3457  006090                     
  3458                           ;main.c: 480:     lcd_dat(',');
  3459  006090  0E2C               	movlw	44
  3460  006092  ECAD  F024         	call	_lcd_dat
  3461  006096                     
  3462                           ;main.c: 481:     lcd_dat(str[4]);
  3463  006096  5071               	movf	(_str+4)^0,w,c
  3464  006098  ECAD  F024         	call	_lcd_dat
  3465  00609C                     
  3466                           ;main.c: 482:     lcd_cmd(0xC0 + 6);
  3467  00609C  0EC6               	movlw	198
  3468  00609E  EC98  F024         	call	_lcd_cmd
  3469  0060A2                     
  3470                           ;main.c: 483:     lcd_str("C");
  3471  0060A2  0EFC               	movlw	low STR_17
  3472  0060A4  6E08               	movwf	lcd_str@str^0,c
  3473  0060A6  0E7F               	movlw	high STR_17
  3474  0060A8  6E09               	movwf	(lcd_str@str+1)^0,c
  3475  0060AA  ECFF  F024         	call	_lcd_str	;wreg free
  3476                           
  3477                           ;main.c: 485:     lcd_cmd(0x90);
  3478  0060AE  0E90               	movlw	144
  3479  0060B0  EC98  F024         	call	_lcd_cmd
  3480  0060B4                     
  3481                           ;main.c: 486:     lcd_str("#####MINIMO#####");
  3482  0060B4  0EB2               	movlw	low STR_33
  3483  0060B6  6E08               	movwf	lcd_str@str^0,c
  3484  0060B8  0E7E               	movlw	high STR_33
  3485  0060BA  6E09               	movwf	(lcd_str@str+1)^0,c
  3486  0060BC  ECFF  F024         	call	_lcd_str	;wreg free
  3487  0060C0                     
  3488                           ;main.c: 489:     lcd_cmd(0xD0);
  3489  0060C0  0ED0               	movlw	208
  3490  0060C2  EC98  F024         	call	_lcd_cmd
  3491  0060C6                     
  3492                           ;main.c: 490:     itoa(minimo * 10, str);
  3493  0060C6  0E00               	movlw	0
  3494  0060C8  6E13               	movwf	___flmul@a^0,c
  3495  0060CA  0E00               	movlw	0
  3496  0060CC  6E14               	movwf	(___flmul@a+1)^0,c
  3497  0060CE  0E20               	movlw	32
  3498  0060D0  6E15               	movwf	(___flmul@a+2)^0,c
  3499  0060D2  0E41               	movlw	65
  3500  0060D4  6E16               	movwf	(___flmul@a+3)^0,c
  3501  0060D6  C0A0  F00F         	movff	_minimo,___flmul@b
  3502  0060DA  C0A1  F010         	movff	_minimo+1,___flmul@b+1
  3503  0060DE  C0A2  F011         	movff	_minimo+2,___flmul@b+2
  3504  0060E2  C0A3  F012         	movff	_minimo+3,___flmul@b+3
  3505  0060E6  ECD3  F03A         	call	___flmul	;wreg free
  3506  0060EA  C00F  F028         	movff	?___flmul,___fltol@f1
  3507  0060EE  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3508  0060F2  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3509  0060F6  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3510  0060FA  EC05  F02B         	call	___fltol	;wreg free
  3511  0060FE  C028  F032         	movff	?___fltol,itoa@val
  3512  006102  C029  F033         	movff	?___fltol+1,itoa@val+1
  3513  006106  0E6D               	movlw	low _str
  3514  006108  6E34               	movwf	itoa@str^0,c
  3515  00610A  0E00               	movlw	high _str
  3516  00610C  6E35               	movwf	(itoa@str+1)^0,c
  3517  00610E  EC88  F02B         	call	_itoa	;wreg free
  3518  006112                     
  3519                           ;main.c: 491:     lcd_dat('m');
  3520  006112  0E6D               	movlw	109
  3521  006114  ECAD  F024         	call	_lcd_dat
  3522  006118                     
  3523                           ;main.c: 492:     if (minimo < 0) {
  3524  006118  0100               	movlb	0	; () banked
  3525  00611A  BFA3               	btfsc	(_minimo+3)& (0+255),7,b
  3526  00611C  EF94  F030         	goto	u4990
  3527  006120  EF92  F030         	goto	u4991
  3528  006124                     u4991:
  3529  006124  EF9D  F030         	goto	l4698
  3530  006128                     u4990:
  3531  006128                     
  3532                           ; BSR set to: 0
  3533                           ;main.c: 493:         lcd_cmd(0xD0 + 1);
  3534  006128  0ED1               	movlw	209
  3535  00612A  EC98  F024         	call	_lcd_cmd
  3536  00612E                     
  3537                           ;main.c: 494:         lcd_str("-");
  3538  00612E  0EF4               	movlw	low (STR_11+15)
  3539  006130  6E08               	movwf	lcd_str@str^0,c
  3540  006132  0E7E               	movlw	high (STR_11+15)
  3541  006134  6E09               	movwf	(lcd_str@str+1)^0,c
  3542  006136  ECFF  F024         	call	_lcd_str	;wreg free
  3543  00613A                     l4698:
  3544                           
  3545                           ;main.c: 496:     lcd_cmd(0xD0 + 2);
  3546  00613A  0ED2               	movlw	210
  3547  00613C  EC98  F024         	call	_lcd_cmd
  3548  006140                     
  3549                           ;main.c: 497:     lcd_dat(str[2]);
  3550  006140  506F               	movf	(_str+2)^0,w,c
  3551  006142  ECAD  F024         	call	_lcd_dat
  3552  006146                     
  3553                           ;main.c: 498:     lcd_dat(str[3]);
  3554  006146  5070               	movf	(_str+3)^0,w,c
  3555  006148  ECAD  F024         	call	_lcd_dat
  3556  00614C                     
  3557                           ;main.c: 499:     lcd_dat(',');
  3558  00614C  0E2C               	movlw	44
  3559  00614E  ECAD  F024         	call	_lcd_dat
  3560  006152                     
  3561                           ;main.c: 500:     lcd_dat(str[4]);
  3562  006152  5071               	movf	(_str+4)^0,w,c
  3563  006154  ECAD  F024         	call	_lcd_dat
  3564  006158                     
  3565                           ;main.c: 501:     lcd_cmd(0xD0 + 6);
  3566  006158  0ED6               	movlw	214
  3567  00615A  EC98  F024         	call	_lcd_cmd
  3568  00615E                     
  3569                           ;main.c: 502:     lcd_str("C");
  3570  00615E  0EFC               	movlw	low STR_17
  3571  006160  6E08               	movwf	lcd_str@str^0,c
  3572  006162  0E7F               	movlw	high STR_17
  3573  006164  6E09               	movwf	(lcd_str@str+1)^0,c
  3574  006166  ECFF  F024         	call	_lcd_str	;wreg free
  3575  00616A  0012               	return		;funcret
  3576  00616C                     __end_of_maxEmin:
  3577                           	callstack 0
  3578                           
  3579 ;; *************** function _ligar *****************
  3580 ;; Defined at:
  3581 ;;		line 305 in file "main.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;		None
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  logo           16   12[COMRAM] unsigned char [16]
  3586 ;;  i               1   28[COMRAM] unsigned char 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      void 
  3589 ;; Registers used:
  3590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3596 ;;      Params:         0       0       0       0       0       0       0
  3597 ;;      Locals:        17       0       0       0       0       0       0
  3598 ;;      Temps:          0       0       0       0       0       0       0
  3599 ;;      Totals:        17       0       0       0       0       0       0
  3600 ;;Total ram usage:       17 bytes
  3601 ;; Hardware stack levels used: 1
  3602 ;; Hardware stack levels required when called: 3
  3603 ;; This function calls:
  3604 ;;		_atraso_ms
  3605 ;;		_lcdCommand
  3606 ;;		_lcdData
  3607 ;;		_lcd_cmd
  3608 ;;		_lcd_str
  3609 ;; This function is called by:
  3610 ;;		_main
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text14
  3615  005176                     __ptext14:
  3616                           	callstack 0
  3617  005176                     _ligar:
  3618                           	callstack 27
  3619  005176                     
  3620                           ;main.c: 306:     char i, logo[16] = {
  3621  005176  EE20  F080         	lfsr	2,ligar@F2436
  3622  00517A  EE10  F00D         	lfsr	1,ligar@logo
  3623  00517E  0E0F               	movlw	15
  3624  005180                     u4891:
  3625  005180  CFDB FFE3          	movff	plusw2,plusw1
  3626  005184  06E8               	decf	wreg,f,c
  3627  005186  E2FC               	bc	u4891
  3628  005188                     
  3629                           ;main.c: 310:     lcd_cmd(0x01);
  3630  005188  0E01               	movlw	1
  3631  00518A  EC98  F024         	call	_lcd_cmd
  3632  00518E                     
  3633                           ;main.c: 311:     lcdCommand(0x40);
  3634  00518E  0E40               	movlw	64
  3635  005190  EC69  F027         	call	_lcdCommand
  3636  005194                     
  3637                           ;main.c: 313:     for (i = 0; i < 16; i++) {
  3638  005194  0E00               	movlw	0
  3639  005196  6E1D               	movwf	ligar@i^0,c
  3640  005198                     l4518:
  3641                           
  3642                           ;main.c: 314:         lcdData(logo[i]);
  3643  005198  0E0D               	movlw	low ligar@logo
  3644  00519A  241D               	addwf	ligar@i^0,w,c
  3645  00519C  6ED9               	movwf	fsr2l,c
  3646  00519E  6ADA               	clrf	fsr2h,c
  3647  0051A0  0E00               	movlw	high ligar@logo
  3648  0051A2  22DA               	addwfc	fsr2h,f,c
  3649  0051A4  50DF               	movf	indf2,w,c
  3650  0051A6  EC4F  F025         	call	_lcdData
  3651  0051AA                     
  3652                           ;main.c: 315:     }
  3653  0051AA  2A1D               	incf	ligar@i^0,f,c
  3654  0051AC  0E0F               	movlw	15
  3655  0051AE  641D               	cpfsgt	ligar@i^0,c
  3656  0051B0  EFDC  F028         	goto	u4901
  3657  0051B4  EFDE  F028         	goto	u4900
  3658  0051B8                     u4901:
  3659  0051B8  EFCC  F028         	goto	l4518
  3660  0051BC                     u4900:
  3661  0051BC                     
  3662                           ;main.c: 317:     lcdCommand(0xC0);
  3663  0051BC  0EC0               	movlw	192
  3664  0051BE  EC69  F027         	call	_lcdCommand
  3665                           
  3666                           ;main.c: 318:     lcdData(0);
  3667  0051C2  0E00               	movlw	0
  3668  0051C4  EC4F  F025         	call	_lcdData
  3669                           
  3670                           ;main.c: 319:     lcdCommand(0x90);
  3671  0051C8  0E90               	movlw	144
  3672  0051CA  EC69  F027         	call	_lcdCommand
  3673                           
  3674                           ;main.c: 320:     lcdData(1);
  3675  0051CE  0E01               	movlw	1
  3676  0051D0  EC4F  F025         	call	_lcdData
  3677                           
  3678                           ;main.c: 321:     lcdCommand(0xC0 + 15);
  3679  0051D4  0ECF               	movlw	207
  3680  0051D6  EC69  F027         	call	_lcdCommand
  3681                           
  3682                           ;main.c: 322:     lcdData(0);
  3683  0051DA  0E00               	movlw	0
  3684  0051DC  EC4F  F025         	call	_lcdData
  3685                           
  3686                           ;main.c: 323:     lcdCommand(0x90 + 15);
  3687  0051E0  0E9F               	movlw	159
  3688  0051E2  EC69  F027         	call	_lcdCommand
  3689                           
  3690                           ;main.c: 324:     lcdData(1);
  3691  0051E6  0E01               	movlw	1
  3692  0051E8  EC4F  F025         	call	_lcdData
  3693                           
  3694                           ;main.c: 326:     lcd_cmd(0x90 + 5);
  3695  0051EC  0E95               	movlw	149
  3696  0051EE  EC98  F024         	call	_lcd_cmd
  3697  0051F2                     
  3698                           ;main.c: 327:     lcd_str("Vac-14");
  3699  0051F2  0EF1               	movlw	low STR_15
  3700  0051F4  6E08               	movwf	lcd_str@str^0,c
  3701  0051F6  0E7F               	movlw	high STR_15
  3702  0051F8  6E09               	movwf	(lcd_str@str+1)^0,c
  3703  0051FA  ECFF  F024         	call	_lcd_str	;wreg free
  3704  0051FE                     
  3705                           ;main.c: 329:     atraso_ms(15000);
  3706  0051FE  0E3A               	movlw	58
  3707  005200  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3708  005202  0E98               	movlw	152
  3709  005204  6E01               	movwf	atraso_ms@valor^0,c
  3710  005206  EC29  F026         	call	_atraso_ms	;wreg free
  3711  00520A  0012               	return		;funcret
  3712  00520C                     __end_of_ligar:
  3713                           	callstack 0
  3714                           
  3715 ;; *************** function _lcd_init *****************
  3716 ;; Defined at:
  3717 ;;		line 55 in file "lcd.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;		None
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;		None
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  1    wreg      void 
  3724 ;; Registers used:
  3725 ;;		wreg, status,2, status,0, cstack
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3731 ;;      Params:         0       0       0       0       0       0       0
  3732 ;;      Locals:         0       0       0       0       0       0       0
  3733 ;;      Temps:          0       0       0       0       0       0       0
  3734 ;;      Totals:         0       0       0       0       0       0       0
  3735 ;;Total ram usage:        0 bytes
  3736 ;; Hardware stack levels used: 1
  3737 ;; Hardware stack levels required when called: 2
  3738 ;; This function calls:
  3739 ;;		_atraso_ms
  3740 ;;		_lcd_cmd
  3741 ;; This function is called by:
  3742 ;;		_main
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text15
  3747  004BF6                     __ptext15:
  3748                           	callstack 0
  3749  004BF6                     _lcd_init:
  3750                           	callstack 28
  3751  004BF6                     
  3752                           ;lcd.c: 56:     PORTEbits.RE1 = 0;
  3753  004BF6  9284               	bcf	132,1,c	;volatile
  3754                           
  3755                           ;lcd.c: 57:     PORTEbits.RE2 = 0;
  3756  004BF8  9484               	bcf	132,2,c	;volatile
  3757  004BFA                     
  3758                           ;lcd.c: 58:     atraso_ms(20);
  3759  004BFA  0E00               	movlw	0
  3760  004BFC  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3761  004BFE  0E14               	movlw	20
  3762  004C00  6E01               	movwf	atraso_ms@valor^0,c
  3763  004C02  EC29  F026         	call	_atraso_ms	;wreg free
  3764  004C06                     
  3765                           ;lcd.c: 59:     PORTEbits.RE1 = 1;
  3766  004C06  8284               	bsf	132,1,c	;volatile
  3767                           
  3768                           ;lcd.c: 61:     lcd_cmd(0x38);
  3769  004C08  0E38               	movlw	56
  3770  004C0A  EC98  F024         	call	_lcd_cmd
  3771                           
  3772                           ;lcd.c: 62:     atraso_ms(5);
  3773  004C0E  0E00               	movlw	0
  3774  004C10  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3775  004C12  0E05               	movlw	5
  3776  004C14  6E01               	movwf	atraso_ms@valor^0,c
  3777  004C16  EC29  F026         	call	_atraso_ms	;wreg free
  3778                           
  3779                           ;lcd.c: 63:     lcd_cmd(0x38);
  3780  004C1A  0E38               	movlw	56
  3781  004C1C  EC98  F024         	call	_lcd_cmd
  3782                           
  3783                           ;lcd.c: 64:     atraso_ms(1);
  3784  004C20  0E00               	movlw	0
  3785  004C22  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3786  004C24  0E01               	movlw	1
  3787  004C26  6E01               	movwf	atraso_ms@valor^0,c
  3788  004C28  EC29  F026         	call	_atraso_ms	;wreg free
  3789                           
  3790                           ;lcd.c: 65:     lcd_cmd(0x38);
  3791  004C2C  0E38               	movlw	56
  3792  004C2E  EC98  F024         	call	_lcd_cmd
  3793                           
  3794                           ;lcd.c: 66:     lcd_cmd(0x08);
  3795  004C32  0E08               	movlw	8
  3796  004C34  EC98  F024         	call	_lcd_cmd
  3797                           
  3798                           ;lcd.c: 67:     lcd_cmd(0x0F);
  3799  004C38  0E0F               	movlw	15
  3800  004C3A  EC98  F024         	call	_lcd_cmd
  3801                           
  3802                           ;lcd.c: 68:     lcd_cmd(0x01);
  3803  004C3E  0E01               	movlw	1
  3804  004C40  EC98  F024         	call	_lcd_cmd
  3805                           
  3806                           ;lcd.c: 69:     lcd_cmd(0x38);
  3807  004C44  0E38               	movlw	56
  3808  004C46  EC98  F024         	call	_lcd_cmd
  3809                           
  3810                           ;lcd.c: 70:     lcd_cmd(0x80);
  3811  004C4A  0E80               	movlw	128
  3812  004C4C  EC98  F024         	call	_lcd_cmd
  3813  004C50  0012               	return		;funcret
  3814  004C52                     __end_of_lcd_init:
  3815                           	callstack 0
  3816                           
  3817 ;; *************** function _instrucoes *****************
  3818 ;; Defined at:
  3819 ;;		line 383 in file "main.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;		None
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;		None
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3833 ;;      Params:         0       0       0       0       0       0       0
  3834 ;;      Locals:         0       0       0       0       0       0       0
  3835 ;;      Temps:          0       0       0       0       0       0       0
  3836 ;;      Totals:         0       0       0       0       0       0       0
  3837 ;;Total ram usage:        0 bytes
  3838 ;; Hardware stack levels used: 1
  3839 ;; Hardware stack levels required when called: 3
  3840 ;; This function calls:
  3841 ;;		_atraso_ms
  3842 ;;		_lcd_cmd
  3843 ;;		_lcd_str
  3844 ;; This function is called by:
  3845 ;;		_main
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text16
  3850  0050E4                     __ptext16:
  3851                           	callstack 0
  3852  0050E4                     _instrucoes:
  3853                           	callstack 27
  3854  0050E4                     
  3855                           ;main.c: 384:     lcd_cmd(0x80);
  3856  0050E4  0E80               	movlw	128
  3857  0050E6  EC98  F024         	call	_lcd_cmd
  3858  0050EA                     
  3859                           ;main.c: 385:     lcd_str("OPCOES:");
  3860  0050EA  0ED9               	movlw	low STR_21
  3861  0050EC  6E08               	movwf	lcd_str@str^0,c
  3862  0050EE  0E7F               	movlw	high STR_21
  3863  0050F0  6E09               	movwf	(lcd_str@str+1)^0,c
  3864  0050F2  ECFF  F024         	call	_lcd_str	;wreg free
  3865  0050F6                     
  3866                           ;main.c: 387:     lcd_cmd(0x90);
  3867  0050F6  0E90               	movlw	144
  3868  0050F8  EC98  F024         	call	_lcd_cmd
  3869                           
  3870                           ;main.c: 388:     lcd_str("1 - Medidas");
  3871  0050FC  0EA5               	movlw	low STR_22
  3872  0050FE  6E08               	movwf	lcd_str@str^0,c
  3873  005100  0E7F               	movlw	high STR_22
  3874  005102  6E09               	movwf	(lcd_str@str+1)^0,c
  3875  005104  ECFF  F024         	call	_lcd_str	;wreg free
  3876  005108                     
  3877                           ;main.c: 389:     lcd_cmd(0xD0);
  3878  005108  0ED0               	movlw	208
  3879  00510A  EC98  F024         	call	_lcd_cmd
  3880  00510E                     
  3881                           ;main.c: 390:     lcd_str("2 - Abrir Porta");
  3882  00510E  0E38               	movlw	low STR_23
  3883  005110  6E08               	movwf	lcd_str@str^0,c
  3884  005112  0E7F               	movlw	high STR_23
  3885  005114  6E09               	movwf	(lcd_str@str+1)^0,c
  3886  005116  ECFF  F024         	call	_lcd_str	;wreg free
  3887                           
  3888                           ;main.c: 391:     atraso_ms(3000);
  3889  00511A  0E0B               	movlw	11
  3890  00511C  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3891  00511E  0EB8               	movlw	184
  3892  005120  6E01               	movwf	atraso_ms@valor^0,c
  3893  005122  EC29  F026         	call	_atraso_ms	;wreg free
  3894                           
  3895                           ;main.c: 392:     lcd_cmd(0x01);
  3896  005126  0E01               	movlw	1
  3897  005128  EC98  F024         	call	_lcd_cmd
  3898                           
  3899                           ;main.c: 393:     lcd_cmd(0x80);
  3900  00512C  0E80               	movlw	128
  3901  00512E  EC98  F024         	call	_lcd_cmd
  3902  005132                     
  3903                           ;main.c: 394:     lcd_str("3 - Fechar Porta");
  3904  005132  0E07               	movlw	low STR_24
  3905  005134  6E08               	movwf	lcd_str@str^0,c
  3906  005136  0E7F               	movlw	high STR_24
  3907  005138  6E09               	movwf	(lcd_str@str+1)^0,c
  3908  00513A  ECFF  F024         	call	_lcd_str	;wreg free
  3909  00513E                     
  3910                           ;main.c: 395:     lcd_cmd(0xC0);
  3911  00513E  0EC0               	movlw	192
  3912  005140  EC98  F024         	call	_lcd_cmd
  3913                           
  3914                           ;main.c: 396:     lcd_str("4 - Max/Min");
  3915  005144  0E8D               	movlw	low STR_25
  3916  005146  6E08               	movwf	lcd_str@str^0,c
  3917  005148  0E7F               	movlw	high STR_25
  3918  00514A  6E09               	movwf	(lcd_str@str+1)^0,c
  3919  00514C  ECFF  F024         	call	_lcd_str	;wreg free
  3920  005150                     
  3921                           ;main.c: 397:     lcd_cmd(0x90);
  3922  005150  0E90               	movlw	144
  3923  005152  EC98  F024         	call	_lcd_cmd
  3924  005156                     
  3925                           ;main.c: 398:     lcd_str("# - Voltar");
  3926  005156  0EBC               	movlw	low STR_26
  3927  005158  6E08               	movwf	lcd_str@str^0,c
  3928  00515A  0E7F               	movlw	high STR_26
  3929  00515C  6E09               	movwf	(lcd_str@str+1)^0,c
  3930  00515E  ECFF  F024         	call	_lcd_str	;wreg free
  3931                           
  3932                           ;main.c: 399:     atraso_ms(3000);
  3933  005162  0E0B               	movlw	11
  3934  005164  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3935  005166  0EB8               	movlw	184
  3936  005168  6E01               	movwf	atraso_ms@valor^0,c
  3937  00516A  EC29  F026         	call	_atraso_ms	;wreg free
  3938                           
  3939                           ;main.c: 400:     lcd_cmd(0x01);
  3940  00516E  0E01               	movlw	1
  3941  005170  EC98  F024         	call	_lcd_cmd
  3942  005174  0012               	return		;funcret
  3943  005176                     __end_of_instrucoes:
  3944                           	callstack 0
  3945                           
  3946 ;; *************** function _inicia *****************
  3947 ;; Defined at:
  3948 ;;		line 200 in file "main.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;		None
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  desenho        16   10[COMRAM] unsigned char [16]
  3953 ;;  i               1   26[COMRAM] unsigned char 
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3963 ;;      Params:         0       0       0       0       0       0       0
  3964 ;;      Locals:        17       0       0       0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0       0       0
  3966 ;;      Totals:        17       0       0       0       0       0       0
  3967 ;;Total ram usage:       17 bytes
  3968 ;; Hardware stack levels used: 1
  3969 ;; Hardware stack levels required when called: 3
  3970 ;; This function calls:
  3971 ;;		_desce
  3972 ;;		_lcdCommand
  3973 ;;		_lcdData
  3974 ;;		_shift_texto
  3975 ;;		_sobe
  3976 ;; This function is called by:
  3977 ;;		_main
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text17
  3982  006652                     __ptext17:
  3983                           	callstack 0
  3984  006652                     _inicia:
  3985                           	callstack 27
  3986  006652                     
  3987                           ;main.c: 201:     char i;;main.c: 202:     char desenho[16] = {
  3988  006652  EE20  F090         	lfsr	2,inicia@F2432
  3989  006656  EE10  F00B         	lfsr	1,inicia@desenho
  3990  00665A  0E0F               	movlw	15
  3991  00665C                     u4871:
  3992  00665C  CFDB FFE3          	movff	plusw2,plusw1
  3993  006660  06E8               	decf	wreg,f,c
  3994  006662  E2FC               	bc	u4871
  3995  006664                     
  3996                           ;main.c: 206:     lcdCommand(0x01);
  3997  006664  0E01               	movlw	1
  3998  006666  EC69  F027         	call	_lcdCommand
  3999  00666A                     
  4000                           ;main.c: 207:     lcdCommand(0x40);
  4001  00666A  0E40               	movlw	64
  4002  00666C  EC69  F027         	call	_lcdCommand
  4003  006670                     
  4004                           ;main.c: 209:     for (i = 0; i < 16; i++) {
  4005  006670  0E00               	movlw	0
  4006  006672  6E1B               	movwf	inicia@i^0,c
  4007  006674                     l4498:
  4008                           
  4009                           ;main.c: 210:         lcdData(desenho[i]);
  4010  006674  0E0B               	movlw	low inicia@desenho
  4011  006676  241B               	addwf	inicia@i^0,w,c
  4012  006678  6ED9               	movwf	fsr2l,c
  4013  00667A  6ADA               	clrf	fsr2h,c
  4014  00667C  0E00               	movlw	high inicia@desenho
  4015  00667E  22DA               	addwfc	fsr2h,f,c
  4016  006680  50DF               	movf	indf2,w,c
  4017  006682  EC4F  F025         	call	_lcdData
  4018  006686                     
  4019                           ;main.c: 211:     }
  4020  006686  2A1B               	incf	inicia@i^0,f,c
  4021  006688  0E0F               	movlw	15
  4022  00668A  641B               	cpfsgt	inicia@i^0,c
  4023  00668C  EF4A  F033         	goto	u4881
  4024  006690  EF4C  F033         	goto	u4880
  4025  006694                     u4881:
  4026  006694  EF3A  F033         	goto	l4498
  4027  006698                     u4880:
  4028  006698                     
  4029                           ;main.c: 215:     lcdCommand(0x80);
  4030  006698  0E80               	movlw	128
  4031  00669A  EC69  F027         	call	_lcdCommand
  4032                           
  4033                           ;main.c: 216:     lcdData(0);
  4034  00669E  0E00               	movlw	0
  4035  0066A0  EC4F  F025         	call	_lcdData
  4036                           
  4037                           ;main.c: 217:     lcdCommand(0x80 + 1);
  4038  0066A4  0E81               	movlw	129
  4039  0066A6  EC69  F027         	call	_lcdCommand
  4040                           
  4041                           ;main.c: 218:     lcdData(1);
  4042  0066AA  0E01               	movlw	1
  4043  0066AC  EC4F  F025         	call	_lcdData
  4044                           
  4045                           ;main.c: 220:     lcdCommand(0x80 + 2);
  4046  0066B0  0E82               	movlw	130
  4047  0066B2  EC69  F027         	call	_lcdCommand
  4048                           
  4049                           ;main.c: 221:     lcdData(0);
  4050  0066B6  0E00               	movlw	0
  4051  0066B8  EC4F  F025         	call	_lcdData
  4052                           
  4053                           ;main.c: 222:     lcdCommand(0x80 + 3);
  4054  0066BC  0E83               	movlw	131
  4055  0066BE  EC69  F027         	call	_lcdCommand
  4056                           
  4057                           ;main.c: 223:     lcdData(1);
  4058  0066C2  0E01               	movlw	1
  4059  0066C4  EC4F  F025         	call	_lcdData
  4060                           
  4061                           ;main.c: 225:     lcdCommand(0x80 + 4);
  4062  0066C8  0E84               	movlw	132
  4063  0066CA  EC69  F027         	call	_lcdCommand
  4064                           
  4065                           ;main.c: 226:     lcdData(0);
  4066  0066CE  0E00               	movlw	0
  4067  0066D0  EC4F  F025         	call	_lcdData
  4068                           
  4069                           ;main.c: 227:     lcdCommand(0x80 + 5);
  4070  0066D4  0E85               	movlw	133
  4071  0066D6  EC69  F027         	call	_lcdCommand
  4072                           
  4073                           ;main.c: 228:     lcdData(1);
  4074  0066DA  0E01               	movlw	1
  4075  0066DC  EC4F  F025         	call	_lcdData
  4076                           
  4077                           ;main.c: 230:     lcdCommand(0x80 + 6);
  4078  0066E0  0E86               	movlw	134
  4079  0066E2  EC69  F027         	call	_lcdCommand
  4080                           
  4081                           ;main.c: 231:     lcdData(0);
  4082  0066E6  0E00               	movlw	0
  4083  0066E8  EC4F  F025         	call	_lcdData
  4084                           
  4085                           ;main.c: 232:     lcdCommand(0x80 + 7);
  4086  0066EC  0E87               	movlw	135
  4087  0066EE  EC69  F027         	call	_lcdCommand
  4088                           
  4089                           ;main.c: 233:     lcdData(1);
  4090  0066F2  0E01               	movlw	1
  4091  0066F4  EC4F  F025         	call	_lcdData
  4092                           
  4093                           ;main.c: 235:     lcdCommand(0x80 + 8);
  4094  0066F8  0E88               	movlw	136
  4095  0066FA  EC69  F027         	call	_lcdCommand
  4096                           
  4097                           ;main.c: 236:     lcdData(0);
  4098  0066FE  0E00               	movlw	0
  4099  006700  EC4F  F025         	call	_lcdData
  4100                           
  4101                           ;main.c: 237:     lcdCommand(0x80 + 9);
  4102  006704  0E89               	movlw	137
  4103  006706  EC69  F027         	call	_lcdCommand
  4104                           
  4105                           ;main.c: 238:     lcdData(1);
  4106  00670A  0E01               	movlw	1
  4107  00670C  EC4F  F025         	call	_lcdData
  4108                           
  4109                           ;main.c: 240:     lcdCommand(0x80 + 10);
  4110  006710  0E8A               	movlw	138
  4111  006712  EC69  F027         	call	_lcdCommand
  4112                           
  4113                           ;main.c: 241:     lcdData(0);
  4114  006716  0E00               	movlw	0
  4115  006718  EC4F  F025         	call	_lcdData
  4116                           
  4117                           ;main.c: 242:     lcdCommand(0x80 + 11);
  4118  00671C  0E8B               	movlw	139
  4119  00671E  EC69  F027         	call	_lcdCommand
  4120                           
  4121                           ;main.c: 243:     lcdData(1);
  4122  006722  0E01               	movlw	1
  4123  006724  EC4F  F025         	call	_lcdData
  4124                           
  4125                           ;main.c: 245:     lcdCommand(0x80 + 12);
  4126  006728  0E8C               	movlw	140
  4127  00672A  EC69  F027         	call	_lcdCommand
  4128                           
  4129                           ;main.c: 246:     lcdData(0);
  4130  00672E  0E00               	movlw	0
  4131  006730  EC4F  F025         	call	_lcdData
  4132                           
  4133                           ;main.c: 247:     lcdCommand(0x80 + 13);
  4134  006734  0E8D               	movlw	141
  4135  006736  EC69  F027         	call	_lcdCommand
  4136                           
  4137                           ;main.c: 248:     lcdData(1);
  4138  00673A  0E01               	movlw	1
  4139  00673C  EC4F  F025         	call	_lcdData
  4140                           
  4141                           ;main.c: 250:     lcdCommand(0x80 + 14);
  4142  006740  0E8E               	movlw	142
  4143  006742  EC69  F027         	call	_lcdCommand
  4144                           
  4145                           ;main.c: 251:     lcdData(0);
  4146  006746  0E00               	movlw	0
  4147  006748  EC4F  F025         	call	_lcdData
  4148                           
  4149                           ;main.c: 252:     lcdCommand(0x80 + 15);
  4150  00674C  0E8F               	movlw	143
  4151  00674E  EC69  F027         	call	_lcdCommand
  4152                           
  4153                           ;main.c: 253:     lcdData(1);
  4154  006752  0E01               	movlw	1
  4155  006754  EC4F  F025         	call	_lcdData
  4156                           
  4157                           ;main.c: 258:     lcdCommand(0xD0);
  4158  006758  0ED0               	movlw	208
  4159  00675A  EC69  F027         	call	_lcdCommand
  4160                           
  4161                           ;main.c: 259:     lcdData(0);
  4162  00675E  0E00               	movlw	0
  4163  006760  EC4F  F025         	call	_lcdData
  4164                           
  4165                           ;main.c: 260:     lcdCommand(0xD0 + 1);
  4166  006764  0ED1               	movlw	209
  4167  006766  EC69  F027         	call	_lcdCommand
  4168                           
  4169                           ;main.c: 261:     lcdData(1);
  4170  00676A  0E01               	movlw	1
  4171  00676C  EC4F  F025         	call	_lcdData
  4172                           
  4173                           ;main.c: 263:     lcdCommand(0xD0 + 2);
  4174  006770  0ED2               	movlw	210
  4175  006772  EC69  F027         	call	_lcdCommand
  4176                           
  4177                           ;main.c: 264:     lcdData(0);
  4178  006776  0E00               	movlw	0
  4179  006778  EC4F  F025         	call	_lcdData
  4180                           
  4181                           ;main.c: 265:     lcdCommand(0xD0 + 3);
  4182  00677C  0ED3               	movlw	211
  4183  00677E  EC69  F027         	call	_lcdCommand
  4184                           
  4185                           ;main.c: 266:     lcdData(1);
  4186  006782  0E01               	movlw	1
  4187  006784  EC4F  F025         	call	_lcdData
  4188                           
  4189                           ;main.c: 268:     lcdCommand(0xD0 + 4);
  4190  006788  0ED4               	movlw	212
  4191  00678A  EC69  F027         	call	_lcdCommand
  4192                           
  4193                           ;main.c: 269:     lcdData(0);
  4194  00678E  0E00               	movlw	0
  4195  006790  EC4F  F025         	call	_lcdData
  4196                           
  4197                           ;main.c: 270:     lcdCommand(0xD0 + 5);
  4198  006794  0ED5               	movlw	213
  4199  006796  EC69  F027         	call	_lcdCommand
  4200                           
  4201                           ;main.c: 271:     lcdData(1);
  4202  00679A  0E01               	movlw	1
  4203  00679C  EC4F  F025         	call	_lcdData
  4204                           
  4205                           ;main.c: 273:     lcdCommand(0xD0 + 6);
  4206  0067A0  0ED6               	movlw	214
  4207  0067A2  EC69  F027         	call	_lcdCommand
  4208                           
  4209                           ;main.c: 274:     lcdData(0);
  4210  0067A6  0E00               	movlw	0
  4211  0067A8  EC4F  F025         	call	_lcdData
  4212                           
  4213                           ;main.c: 275:     lcdCommand(0xD0 + 7);
  4214  0067AC  0ED7               	movlw	215
  4215  0067AE  EC69  F027         	call	_lcdCommand
  4216                           
  4217                           ;main.c: 276:     lcdData(1);
  4218  0067B2  0E01               	movlw	1
  4219  0067B4  EC4F  F025         	call	_lcdData
  4220                           
  4221                           ;main.c: 278:     lcdCommand(0xD0 + 8);
  4222  0067B8  0ED8               	movlw	216
  4223  0067BA  EC69  F027         	call	_lcdCommand
  4224                           
  4225                           ;main.c: 279:     lcdData(0);
  4226  0067BE  0E00               	movlw	0
  4227  0067C0  EC4F  F025         	call	_lcdData
  4228                           
  4229                           ;main.c: 280:     lcdCommand(0xD0 + 9);
  4230  0067C4  0ED9               	movlw	217
  4231  0067C6  EC69  F027         	call	_lcdCommand
  4232                           
  4233                           ;main.c: 281:     lcdData(1);
  4234  0067CA  0E01               	movlw	1
  4235  0067CC  EC4F  F025         	call	_lcdData
  4236                           
  4237                           ;main.c: 283:     lcdCommand(0xD0 + 10);
  4238  0067D0  0EDA               	movlw	218
  4239  0067D2  EC69  F027         	call	_lcdCommand
  4240                           
  4241                           ;main.c: 284:     lcdData(0);
  4242  0067D6  0E00               	movlw	0
  4243  0067D8  EC4F  F025         	call	_lcdData
  4244                           
  4245                           ;main.c: 285:     lcdCommand(0xD0 + 11);
  4246  0067DC  0EDB               	movlw	219
  4247  0067DE  EC69  F027         	call	_lcdCommand
  4248                           
  4249                           ;main.c: 286:     lcdData(1);
  4250  0067E2  0E01               	movlw	1
  4251  0067E4  EC4F  F025         	call	_lcdData
  4252                           
  4253                           ;main.c: 288:     lcdCommand(0xD0 + 12);
  4254  0067E8  0EDC               	movlw	220
  4255  0067EA  EC69  F027         	call	_lcdCommand
  4256                           
  4257                           ;main.c: 289:     lcdData(0);
  4258  0067EE  0E00               	movlw	0
  4259  0067F0  EC4F  F025         	call	_lcdData
  4260                           
  4261                           ;main.c: 290:     lcdCommand(0xD0 + 13);
  4262  0067F4  0EDD               	movlw	221
  4263  0067F6  EC69  F027         	call	_lcdCommand
  4264                           
  4265                           ;main.c: 291:     lcdData(1);
  4266  0067FA  0E01               	movlw	1
  4267  0067FC  EC4F  F025         	call	_lcdData
  4268                           
  4269                           ;main.c: 293:     lcdCommand(0xD0 + 14);
  4270  006800  0EDE               	movlw	222
  4271  006802  EC69  F027         	call	_lcdCommand
  4272                           
  4273                           ;main.c: 294:     lcdData(0);
  4274  006806  0E00               	movlw	0
  4275  006808  EC4F  F025         	call	_lcdData
  4276                           
  4277                           ;main.c: 295:     lcdCommand(0xD0 + 15);
  4278  00680C  0EDF               	movlw	223
  4279  00680E  EC69  F027         	call	_lcdCommand
  4280                           
  4281                           ;main.c: 296:     lcdData(1);
  4282  006812  0E01               	movlw	1
  4283  006814  EC4F  F025         	call	_lcdData
  4284                           
  4285                           ;main.c: 298:     sobe();
  4286  006818  ECC3  F026         	call	_sobe	;wreg free
  4287                           
  4288                           ;main.c: 299:     shift_texto(300);
  4289  00681C  0E01               	movlw	1
  4290  00681E  6E09               	movwf	(shift_texto@tempo+1)^0,c
  4291  006820  0E2C               	movlw	44
  4292  006822  6E08               	movwf	shift_texto@tempo^0,c
  4293  006824  EC5B  F029         	call	_shift_texto	;wreg free
  4294                           
  4295                           ;main.c: 300:     desce();
  4296  006828  EC8D  F026         	call	_desce	;wreg free
  4297  00682C  0012               	return		;funcret
  4298  00682E                     __end_of_inicia:
  4299                           	callstack 0
  4300                           
  4301 ;; *************** function _sobe *****************
  4302 ;; Defined at:
  4303 ;;		line 166 in file "main.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;		None
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  j               1    3[COMRAM] unsigned char 
  4308 ;;  before          1    2[COMRAM] unsigned char 
  4309 ;;  k               1    1[COMRAM] unsigned char 
  4310 ;;  i               1    0[COMRAM] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2, status,0
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4320 ;;      Params:         0       0       0       0       0       0       0
  4321 ;;      Locals:         4       0       0       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0
  4323 ;;      Totals:         4       0       0       0       0       0       0
  4324 ;;Total ram usage:        4 bytes
  4325 ;; Hardware stack levels used: 1
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_inicia
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text18
  4334  004D86                     __ptext18:
  4335                           	callstack 0
  4336  004D86                     _sobe:
  4337                           	callstack 29
  4338  004D86                     
  4339                           ;main.c: 167:     unsigned char i, j, k;;main.c: 168:     unsigned char before;;main.c: 
      +                          169:     TRISB = 0b00000000;
  4340  004D86  0E00               	movlw	0
  4341  004D88  6E93               	movwf	147,c	;volatile
  4342                           
  4343                           ;main.c: 170:     before = 0b10000000;
  4344  004D8A  0E80               	movlw	128
  4345  004D8C  6E03               	movwf	sobe@before^0,c
  4346                           
  4347                           ;main.c: 171:     for (k = 0; k < 8; k++) {
  4348  004D8E  0E00               	movlw	0
  4349  004D90  6E02               	movwf	sobe@k^0,c
  4350  004D92                     l412:
  4351                           
  4352                           ;main.c: 172:         PORTB = before;
  4353  004D92  C003  FF81         	movff	sobe@before,3969	;volatile
  4354  004D96                     
  4355                           ;main.c: 173:         for (i = 0; i < 255; i++) {
  4356  004D96  0E00               	movlw	0
  4357  004D98  6E01               	movwf	sobe@i^0,c
  4358  004D9A                     l4008:
  4359                           
  4360                           ;main.c: 174:             for (j = 0; j < 255; j++);
  4361  004D9A  0E00               	movlw	0
  4362  004D9C  6E04               	movwf	sobe@j^0,c
  4363  004D9E                     l4014:
  4364  004D9E  2A04               	incf	sobe@j^0,f,c
  4365  004DA0  2804               	incf	sobe@j^0,w,c
  4366  004DA2  A4D8               	btfss	status,2,c
  4367  004DA4  EFD6  F026         	goto	u4301
  4368  004DA8  EFD8  F026         	goto	u4300
  4369  004DAC                     u4301:
  4370  004DAC  EFCF  F026         	goto	l4014
  4371  004DB0                     u4300:
  4372  004DB0                     
  4373                           ;main.c: 175:             for (j = 0; j < 255; j++);
  4374  004DB0  0E00               	movlw	0
  4375  004DB2  6E04               	movwf	sobe@j^0,c
  4376  004DB4                     l4024:
  4377  004DB4  2A04               	incf	sobe@j^0,f,c
  4378  004DB6  2804               	incf	sobe@j^0,w,c
  4379  004DB8  A4D8               	btfss	status,2,c
  4380  004DBA  EFE1  F026         	goto	u4311
  4381  004DBE  EFE3  F026         	goto	u4310
  4382  004DC2                     u4311:
  4383  004DC2  EFDA  F026         	goto	l4024
  4384  004DC6                     u4310:
  4385  004DC6                     
  4386                           ;main.c: 176:         }
  4387  004DC6  2A01               	incf	sobe@i^0,f,c
  4388  004DC8  2801               	incf	sobe@i^0,w,c
  4389  004DCA  A4D8               	btfss	status,2,c
  4390  004DCC  EFEA  F026         	goto	u4321
  4391  004DD0  EFEC  F026         	goto	u4320
  4392  004DD4                     u4321:
  4393  004DD4  EFCD  F026         	goto	l4008
  4394  004DD8                     u4320:
  4395  004DD8                     
  4396                           ;main.c: 177:         before = before >> 1;
  4397  004DD8  90D8               	bcf	status,0,c
  4398  004DDA  3003               	rrcf	sobe@before^0,w,c
  4399  004DDC  6E03               	movwf	sobe@before^0,c
  4400  004DDE                     
  4401                           ;main.c: 178:     }
  4402  004DDE  2A02               	incf	sobe@k^0,f,c
  4403  004DE0  0E07               	movlw	7
  4404  004DE2  6402               	cpfsgt	sobe@k^0,c
  4405  004DE4  EFF6  F026         	goto	u4331
  4406  004DE8  EFF8  F026         	goto	u4330
  4407  004DEC                     u4331:
  4408  004DEC  EFC9  F026         	goto	l412
  4409  004DF0                     u4330:
  4410  004DF0  0012               	return		;funcret
  4411  004DF2                     __end_of_sobe:
  4412                           	callstack 0
  4413                           
  4414 ;; *************** function _shift_texto *****************
  4415 ;; Defined at:
  4416 ;;		line 143 in file "main.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  tempo           2    7[COMRAM] int 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  i               1    9[COMRAM] unsigned char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  1    wreg      void 
  4423 ;; Registers used:
  4424 ;;		wreg, status,2, status,0, cstack
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4430 ;;      Params:         2       0       0       0       0       0       0
  4431 ;;      Locals:         1       0       0       0       0       0       0
  4432 ;;      Temps:          0       0       0       0       0       0       0
  4433 ;;      Totals:         3       0       0       0       0       0       0
  4434 ;;Total ram usage:        3 bytes
  4435 ;; Hardware stack levels used: 1
  4436 ;; Hardware stack levels required when called: 2
  4437 ;; This function calls:
  4438 ;;		_atraso_ms
  4439 ;;		_lcd_cmd
  4440 ;; This function is called by:
  4441 ;;		_inicia
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           	psect	text19
  4446  0052B6                     __ptext19:
  4447                           	callstack 0
  4448  0052B6                     _shift_texto:
  4449                           	callstack 27
  4450  0052B6                     
  4451                           ;main.c: 144:     char i;;main.c: 145:     for (i = 0; i < 4; i++) {
  4452  0052B6  0E00               	movlw	0
  4453  0052B8  6E0A               	movwf	shift_texto@i^0,c
  4454  0052BA                     l3952:
  4455                           
  4456                           ;main.c: 146:         atraso_ms(tempo);
  4457  0052BA  C008  F001         	movff	shift_texto@tempo,atraso_ms@valor
  4458  0052BE  C009  F002         	movff	shift_texto@tempo+1,atraso_ms@valor+1
  4459  0052C2  EC29  F026         	call	_atraso_ms	;wreg free
  4460                           
  4461                           ;main.c: 147:         lcd_cmd(0x1C);
  4462  0052C6  0E1C               	movlw	28
  4463  0052C8  EC98  F024         	call	_lcd_cmd
  4464  0052CC                     
  4465                           ;main.c: 148:     }
  4466  0052CC  2A0A               	incf	shift_texto@i^0,f,c
  4467  0052CE  0E03               	movlw	3
  4468  0052D0  640A               	cpfsgt	shift_texto@i^0,c
  4469  0052D2  EF6D  F029         	goto	u4261
  4470  0052D6  EF6F  F029         	goto	u4260
  4471  0052DA                     u4261:
  4472  0052DA  EF5D  F029         	goto	l3952
  4473  0052DE                     u4260:
  4474  0052DE                     
  4475                           ;main.c: 149:     for (i = 0; i < 4; i++) {
  4476  0052DE  0E00               	movlw	0
  4477  0052E0  6E0A               	movwf	shift_texto@i^0,c
  4478  0052E2                     l3964:
  4479                           
  4480                           ;main.c: 150:         atraso_ms(tempo);
  4481  0052E2  C008  F001         	movff	shift_texto@tempo,atraso_ms@valor
  4482  0052E6  C009  F002         	movff	shift_texto@tempo+1,atraso_ms@valor+1
  4483  0052EA  EC29  F026         	call	_atraso_ms	;wreg free
  4484                           
  4485                           ;main.c: 151:         lcd_cmd(0x18);
  4486  0052EE  0E18               	movlw	24
  4487  0052F0  EC98  F024         	call	_lcd_cmd
  4488  0052F4                     
  4489                           ;main.c: 152:     }
  4490  0052F4  2A0A               	incf	shift_texto@i^0,f,c
  4491  0052F6  0E03               	movlw	3
  4492  0052F8  640A               	cpfsgt	shift_texto@i^0,c
  4493  0052FA  EF81  F029         	goto	u4271
  4494  0052FE  EF83  F029         	goto	u4270
  4495  005302                     u4271:
  4496  005302  EF71  F029         	goto	l3964
  4497  005306                     u4270:
  4498  005306                     
  4499                           ;main.c: 153:     for (i = 0; i < 4; i++) {
  4500  005306  0E00               	movlw	0
  4501  005308  6E0A               	movwf	shift_texto@i^0,c
  4502  00530A                     l3976:
  4503                           
  4504                           ;main.c: 154:         atraso_ms(tempo);
  4505  00530A  C008  F001         	movff	shift_texto@tempo,atraso_ms@valor
  4506  00530E  C009  F002         	movff	shift_texto@tempo+1,atraso_ms@valor+1
  4507  005312  EC29  F026         	call	_atraso_ms	;wreg free
  4508                           
  4509                           ;main.c: 155:         lcd_cmd(0x1C);
  4510  005316  0E1C               	movlw	28
  4511  005318  EC98  F024         	call	_lcd_cmd
  4512  00531C                     
  4513                           ;main.c: 156:     }
  4514  00531C  2A0A               	incf	shift_texto@i^0,f,c
  4515  00531E  0E03               	movlw	3
  4516  005320  640A               	cpfsgt	shift_texto@i^0,c
  4517  005322  EF95  F029         	goto	u4281
  4518  005326  EF97  F029         	goto	u4280
  4519  00532A                     u4281:
  4520  00532A  EF85  F029         	goto	l3976
  4521  00532E                     u4280:
  4522  00532E                     
  4523                           ;main.c: 157:     for (i = 0; i < 4; i++) {
  4524  00532E  0E00               	movlw	0
  4525  005330  6E0A               	movwf	shift_texto@i^0,c
  4526  005332                     l3988:
  4527                           
  4528                           ;main.c: 158:         atraso_ms(tempo);
  4529  005332  C008  F001         	movff	shift_texto@tempo,atraso_ms@valor
  4530  005336  C009  F002         	movff	shift_texto@tempo+1,atraso_ms@valor+1
  4531  00533A  EC29  F026         	call	_atraso_ms	;wreg free
  4532                           
  4533                           ;main.c: 159:         lcd_cmd(0x18);
  4534  00533E  0E18               	movlw	24
  4535  005340  EC98  F024         	call	_lcd_cmd
  4536  005344                     
  4537                           ;main.c: 160:     }
  4538  005344  2A0A               	incf	shift_texto@i^0,f,c
  4539  005346  0E03               	movlw	3
  4540  005348  640A               	cpfsgt	shift_texto@i^0,c
  4541  00534A  EFA9  F029         	goto	u4291
  4542  00534E  EFAB  F029         	goto	u4290
  4543  005352                     u4291:
  4544  005352  EF99  F029         	goto	l3988
  4545  005356                     u4290:
  4546  005356                     
  4547                           ;main.c: 161:     atraso_ms(1000);
  4548  005356  0E03               	movlw	3
  4549  005358  6E02               	movwf	(atraso_ms@valor+1)^0,c
  4550  00535A  0EE8               	movlw	232
  4551  00535C  6E01               	movwf	atraso_ms@valor^0,c
  4552  00535E  EC29  F026         	call	_atraso_ms	;wreg free
  4553  005362  0012               	return		;funcret
  4554  005364                     __end_of_shift_texto:
  4555                           	callstack 0
  4556                           
  4557 ;; *************** function _lcdData *****************
  4558 ;; Defined at:
  4559 ;;		line 119 in file "lcd.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  valor           1    wreg     unsigned char 
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;  valor           1    6[COMRAM] unsigned char 
  4564 ;;  old_D           1    7[COMRAM] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4574 ;;      Params:         0       0       0       0       0       0       0
  4575 ;;      Locals:         2       0       0       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0       0       0
  4577 ;;      Totals:         2       0       0       0       0       0       0
  4578 ;;Total ram usage:        2 bytes
  4579 ;; Hardware stack levels used: 1
  4580 ;; Hardware stack levels required when called: 1
  4581 ;; This function calls:
  4582 ;;		_Delay40us
  4583 ;;		_digitalWrite
  4584 ;; This function is called by:
  4585 ;;		_inicia
  4586 ;;		_ligar
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           	psect	text20
  4591  004A9E                     __ptext20:
  4592                           	callstack 0
  4593  004A9E                     _lcdData:
  4594                           	callstack 28
  4595                           
  4596                           ;incstack = 0
  4597                           ;lcdData@valor stored from wreg
  4598  004A9E  6E07               	movwf	lcdData@valor^0,c
  4599  004AA0                     
  4600                           ;lcd.c: 121:     unsigned char old_D;;lcd.c: 122:     old_D = PORTD;
  4601  004AA0  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  4602  004AA4                     
  4603                           ;lcd.c: 124:     TRISD = 0x00;
  4604  004AA4  0E00               	movlw	0
  4605  004AA6  6E95               	movwf	149,c	;volatile
  4606  004AA8                     
  4607                           ;lcd.c: 125:     digitalWrite(PIN_E2, 1);
  4608  004AA8  0E00               	movlw	0
  4609  004AAA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4610  004AAC  0E22               	movlw	34
  4611  004AAE  6E01               	movwf	digitalWrite@pin^0,c
  4612  004AB0  0E00               	movlw	0
  4613  004AB2  6E04               	movwf	(digitalWrite@value+1)^0,c
  4614  004AB4  0E01               	movlw	1
  4615  004AB6  6E03               	movwf	digitalWrite@value^0,c
  4616  004AB8  EC39  F035         	call	_digitalWrite	;wreg free
  4617  004ABC                     
  4618                           ;lcd.c: 127:     PORTD = valor;
  4619  004ABC  C007  FF83         	movff	lcdData@valor,3971	;volatile
  4620  004AC0                     
  4621                           ;lcd.c: 129:     digitalWrite(PIN_E1, 1);
  4622  004AC0  0E00               	movlw	0
  4623  004AC2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4624  004AC4  0E21               	movlw	33
  4625  004AC6  6E01               	movwf	digitalWrite@pin^0,c
  4626  004AC8  0E00               	movlw	0
  4627  004ACA  6E04               	movwf	(digitalWrite@value+1)^0,c
  4628  004ACC  0E01               	movlw	1
  4629  004ACE  6E03               	movwf	digitalWrite@value^0,c
  4630  004AD0  EC39  F035         	call	_digitalWrite	;wreg free
  4631  004AD4                     
  4632                           ;lcd.c: 130:     digitalWrite(PIN_E1, 0);
  4633  004AD4  0E00               	movlw	0
  4634  004AD6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4635  004AD8  0E21               	movlw	33
  4636  004ADA  6E01               	movwf	digitalWrite@pin^0,c
  4637  004ADC  0E00               	movlw	0
  4638  004ADE  6E04               	movwf	(digitalWrite@value+1)^0,c
  4639  004AE0  0E00               	movlw	0
  4640  004AE2  6E03               	movwf	digitalWrite@value^0,c
  4641  004AE4  EC39  F035         	call	_digitalWrite	;wreg free
  4642  004AE8                     
  4643                           ;lcd.c: 132:     PORTD = old_D;
  4644  004AE8  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  4645  004AEC                     
  4646                           ;lcd.c: 134:     Delay40us();
  4647  004AEC  EC58  F024         	call	_Delay40us	;wreg free
  4648  004AF0  0012               	return		;funcret
  4649  004AF2                     __end_of_lcdData:
  4650                           	callstack 0
  4651                           
  4652 ;; *************** function _lcdCommand *****************
  4653 ;; Defined at:
  4654 ;;		line 94 in file "lcd.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  cmd             1    wreg     unsigned char 
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;  cmd             1    7[COMRAM] unsigned char 
  4659 ;;  old_D           1    6[COMRAM] unsigned char 
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  1    wreg      void 
  4662 ;; Registers used:
  4663 ;;		wreg, status,2, status,0, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4669 ;;      Params:         0       0       0       0       0       0       0
  4670 ;;      Locals:         2       0       0       0       0       0       0
  4671 ;;      Temps:          0       0       0       0       0       0       0
  4672 ;;      Totals:         2       0       0       0       0       0       0
  4673 ;;Total ram usage:        2 bytes
  4674 ;; Hardware stack levels used: 1
  4675 ;; Hardware stack levels required when called: 2
  4676 ;; This function calls:
  4677 ;;		_Delay2ms
  4678 ;;		_Delay40us
  4679 ;;		_digitalWrite
  4680 ;; This function is called by:
  4681 ;;		_inicia
  4682 ;;		_ligar
  4683 ;;		_main
  4684 ;;		_lcdInit
  4685 ;;		_lcdPosition
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text21
  4690  004ED2                     __ptext21:
  4691                           	callstack 0
  4692  004ED2                     _lcdCommand:
  4693                           	callstack 27
  4694                           
  4695                           ;incstack = 0
  4696                           ;lcdCommand@cmd stored from wreg
  4697  004ED2  6E08               	movwf	lcdCommand@cmd^0,c
  4698  004ED4                     
  4699                           ;lcd.c: 95:     unsigned char old_D;;lcd.c: 96:     old_D = PORTD;
  4700  004ED4  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  4701  004ED8                     
  4702                           ;lcd.c: 99:     TRISD = 0x00;
  4703  004ED8  0E00               	movlw	0
  4704  004EDA  6E95               	movwf	149,c	;volatile
  4705  004EDC                     
  4706                           ;lcd.c: 101:     digitalWrite(PIN_E2, 0);
  4707  004EDC  0E00               	movlw	0
  4708  004EDE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4709  004EE0  0E22               	movlw	34
  4710  004EE2  6E01               	movwf	digitalWrite@pin^0,c
  4711  004EE4  0E00               	movlw	0
  4712  004EE6  6E04               	movwf	(digitalWrite@value+1)^0,c
  4713  004EE8  0E00               	movlw	0
  4714  004EEA  6E03               	movwf	digitalWrite@value^0,c
  4715  004EEC  EC39  F035         	call	_digitalWrite	;wreg free
  4716  004EF0                     
  4717                           ;lcd.c: 102:     PORTD = cmd;
  4718  004EF0  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  4719  004EF4                     
  4720                           ;lcd.c: 104:     digitalWrite(PIN_E1, 1);
  4721  004EF4  0E00               	movlw	0
  4722  004EF6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4723  004EF8  0E21               	movlw	33
  4724  004EFA  6E01               	movwf	digitalWrite@pin^0,c
  4725  004EFC  0E00               	movlw	0
  4726  004EFE  6E04               	movwf	(digitalWrite@value+1)^0,c
  4727  004F00  0E01               	movlw	1
  4728  004F02  6E03               	movwf	digitalWrite@value^0,c
  4729  004F04  EC39  F035         	call	_digitalWrite	;wreg free
  4730  004F08                     
  4731                           ;lcd.c: 105:     digitalWrite(PIN_E1, 0);
  4732  004F08  0E00               	movlw	0
  4733  004F0A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4734  004F0C  0E21               	movlw	33
  4735  004F0E  6E01               	movwf	digitalWrite@pin^0,c
  4736  004F10  0E00               	movlw	0
  4737  004F12  6E04               	movwf	(digitalWrite@value+1)^0,c
  4738  004F14  0E00               	movlw	0
  4739  004F16  6E03               	movwf	digitalWrite@value^0,c
  4740  004F18  EC39  F035         	call	_digitalWrite	;wreg free
  4741  004F1C                     
  4742                           ;lcd.c: 108:     PORTD = old_D;
  4743  004F1C  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  4744  004F20                     
  4745                           ;lcd.c: 110:     if ((cmd == 0x02) || (cmd == 0x01)) {
  4746  004F20  0E02               	movlw	2
  4747  004F22  1808               	xorwf	lcdCommand@cmd^0,w,c
  4748  004F24  B4D8               	btfsc	status,2,c
  4749  004F26  EF97  F027         	goto	u3891
  4750  004F2A  EF99  F027         	goto	u3890
  4751  004F2E                     u3891:
  4752  004F2E  EFA1  F027         	goto	l3760
  4753  004F32                     u3890:
  4754  004F32  0408               	decf	lcdCommand@cmd^0,w,c
  4755  004F34  A4D8               	btfss	status,2,c
  4756  004F36  EF9F  F027         	goto	u3901
  4757  004F3A  EFA1  F027         	goto	u3900
  4758  004F3E                     u3901:
  4759  004F3E  EFA5  F027         	goto	l3762
  4760  004F42                     u3900:
  4761  004F42                     l3760:
  4762                           
  4763                           ;lcd.c: 111:         Delay2ms();
  4764  004F42  EC64  F024         	call	_Delay2ms	;wreg free
  4765                           
  4766                           ;lcd.c: 112:     } else {
  4767  004F46  EFA7  F027         	goto	l47
  4768  004F4A                     l3762:
  4769                           
  4770                           ;lcd.c: 113:         Delay40us();
  4771  004F4A  EC58  F024         	call	_Delay40us	;wreg free
  4772  004F4E                     l47:
  4773  004F4E  0012               	return		;funcret
  4774  004F50                     __end_of_lcdCommand:
  4775                           	callstack 0
  4776                           
  4777 ;; *************** function _digitalWrite *****************
  4778 ;; Defined at:
  4779 ;;		line 14 in file "io.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  pin             2    0[COMRAM] int 
  4782 ;;  value           2    2[COMRAM] int 
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;		None
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		wreg, status,2, status,0
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4794 ;;      Params:         4       0       0       0       0       0       0
  4795 ;;      Locals:         0       0       0       0       0       0       0
  4796 ;;      Temps:          2       0       0       0       0       0       0
  4797 ;;      Totals:         6       0       0       0       0       0       0
  4798 ;;Total ram usage:        6 bytes
  4799 ;; Hardware stack levels used: 1
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_lcdCommand
  4804 ;;		_lcdData
  4805 ;;		_ssdUpdate
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text22
  4810  006A72                     __ptext22:
  4811                           	callstack 0
  4812  006A72                     _digitalWrite:
  4813                           	callstack 29
  4814  006A72                     
  4815                           ;io.c: 16:     if(pin <8){
  4816  006A72  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4817  006A74  EF47  F035         	goto	u2790
  4818  006A78  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4819  006A7A  E107               	bnz	u2791
  4820  006A7C  0E08               	movlw	8
  4821  006A7E  5C01               	subwf	digitalWrite@pin^0,w,c
  4822  006A80  B0D8               	btfsc	status,0,c
  4823  006A82  EF45  F035         	goto	u2791
  4824  006A86  EF47  F035         	goto	u2790
  4825  006A8A                     u2791:
  4826  006A8A  EF71  F035         	goto	l3212
  4827  006A8E                     u2790:
  4828  006A8E                     
  4829                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  4830  006A8E  5003               	movf	digitalWrite@value^0,w,c
  4831  006A90  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4832  006A92  B4D8               	btfsc	status,2,c
  4833  006A94  EF4E  F035         	goto	u2801
  4834  006A98  EF50  F035         	goto	u2800
  4835  006A9C                     u2801:
  4836  006A9C  EF60  F035         	goto	l3210
  4837  006AA0                     u2800:
  4838  006AA0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4839  006AA4  0E01               	movlw	1
  4840  006AA6  6E06               	movwf	(??_digitalWrite+1)^0,c
  4841  006AA8  2A05               	incf	??_digitalWrite^0,f,c
  4842  006AAA  EF59  F035         	goto	u2814
  4843  006AAE                     u2815:
  4844  006AAE  90D8               	bcf	status,0,c
  4845  006AB0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4846  006AB2                     u2814:
  4847  006AB2  2E05               	decfsz	??_digitalWrite^0,f,c
  4848  006AB4  EF57  F035         	goto	u2815
  4849  006AB8  5006               	movf	(??_digitalWrite+1)^0,w,c
  4850  006ABA  1280               	iorwf	128,f,c	;volatile
  4851  006ABC  EF5F  F036         	goto	l110
  4852  006AC0                     l3210:
  4853  006AC0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4854  006AC4  0E01               	movlw	1
  4855  006AC6  6E06               	movwf	(??_digitalWrite+1)^0,c
  4856  006AC8  2A05               	incf	??_digitalWrite^0,f,c
  4857  006ACA  EF69  F035         	goto	u2824
  4858  006ACE                     u2825:
  4859  006ACE  90D8               	bcf	status,0,c
  4860  006AD0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4861  006AD2                     u2824:
  4862  006AD2  2E05               	decfsz	??_digitalWrite^0,f,c
  4863  006AD4  EF67  F035         	goto	u2825
  4864  006AD8  5006               	movf	(??_digitalWrite+1)^0,w,c
  4865  006ADA  0AFF               	xorlw	255
  4866  006ADC  1680               	andwf	128,f,c	;volatile
  4867  006ADE  EF5F  F036         	goto	l110
  4868  006AE2                     l3212:
  4869  006AE2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4870  006AE4  EF7F  F035         	goto	u2830
  4871  006AE8  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4872  006AEA  E107               	bnz	u2831
  4873  006AEC  0E10               	movlw	16
  4874  006AEE  5C01               	subwf	digitalWrite@pin^0,w,c
  4875  006AF0  B0D8               	btfsc	status,0,c
  4876  006AF2  EF7D  F035         	goto	u2831
  4877  006AF6  EF7F  F035         	goto	u2830
  4878  006AFA                     u2831:
  4879  006AFA  EFAD  F035         	goto	l3220
  4880  006AFE                     u2830:
  4881  006AFE                     
  4882                           ;io.c: 20:         pin -=8;
  4883  006AFE  0EF8               	movlw	248
  4884  006B00  2601               	addwf	digitalWrite@pin^0,f,c
  4885  006B02  0EFF               	movlw	255
  4886  006B04  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4887                           
  4888                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  4889  006B06  5003               	movf	digitalWrite@value^0,w,c
  4890  006B08  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4891  006B0A  B4D8               	btfsc	status,2,c
  4892  006B0C  EF8A  F035         	goto	u2841
  4893  006B10  EF8C  F035         	goto	u2840
  4894  006B14                     u2841:
  4895  006B14  EF9C  F035         	goto	l3218
  4896  006B18                     u2840:
  4897  006B18  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4898  006B1C  0E01               	movlw	1
  4899  006B1E  6E06               	movwf	(??_digitalWrite+1)^0,c
  4900  006B20  2A05               	incf	??_digitalWrite^0,f,c
  4901  006B22  EF95  F035         	goto	u2854
  4902  006B26                     u2855:
  4903  006B26  90D8               	bcf	status,0,c
  4904  006B28  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4905  006B2A                     u2854:
  4906  006B2A  2E05               	decfsz	??_digitalWrite^0,f,c
  4907  006B2C  EF93  F035         	goto	u2855
  4908  006B30  5006               	movf	(??_digitalWrite+1)^0,w,c
  4909  006B32  1281               	iorwf	129,f,c	;volatile
  4910  006B34  EF5F  F036         	goto	l110
  4911  006B38                     l3218:
  4912  006B38  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4913  006B3C  0E01               	movlw	1
  4914  006B3E  6E06               	movwf	(??_digitalWrite+1)^0,c
  4915  006B40  2A05               	incf	??_digitalWrite^0,f,c
  4916  006B42  EFA5  F035         	goto	u2864
  4917  006B46                     u2865:
  4918  006B46  90D8               	bcf	status,0,c
  4919  006B48  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4920  006B4A                     u2864:
  4921  006B4A  2E05               	decfsz	??_digitalWrite^0,f,c
  4922  006B4C  EFA3  F035         	goto	u2865
  4923  006B50  5006               	movf	(??_digitalWrite+1)^0,w,c
  4924  006B52  0AFF               	xorlw	255
  4925  006B54  1681               	andwf	129,f,c	;volatile
  4926  006B56  EF5F  F036         	goto	l110
  4927  006B5A                     l3220:
  4928  006B5A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4929  006B5C  EFBB  F035         	goto	u2870
  4930  006B60  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4931  006B62  E107               	bnz	u2871
  4932  006B64  0E18               	movlw	24
  4933  006B66  5C01               	subwf	digitalWrite@pin^0,w,c
  4934  006B68  B0D8               	btfsc	status,0,c
  4935  006B6A  EFB9  F035         	goto	u2871
  4936  006B6E  EFBB  F035         	goto	u2870
  4937  006B72                     u2871:
  4938  006B72  EFE9  F035         	goto	l3228
  4939  006B76                     u2870:
  4940  006B76                     
  4941                           ;io.c: 24:         pin -=16;
  4942  006B76  0EF0               	movlw	240
  4943  006B78  2601               	addwf	digitalWrite@pin^0,f,c
  4944  006B7A  0EFF               	movlw	255
  4945  006B7C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4946                           
  4947                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  4948  006B7E  5003               	movf	digitalWrite@value^0,w,c
  4949  006B80  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4950  006B82  B4D8               	btfsc	status,2,c
  4951  006B84  EFC6  F035         	goto	u2881
  4952  006B88  EFC8  F035         	goto	u2880
  4953  006B8C                     u2881:
  4954  006B8C  EFD8  F035         	goto	l3226
  4955  006B90                     u2880:
  4956  006B90  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4957  006B94  0E01               	movlw	1
  4958  006B96  6E06               	movwf	(??_digitalWrite+1)^0,c
  4959  006B98  2A05               	incf	??_digitalWrite^0,f,c
  4960  006B9A  EFD1  F035         	goto	u2894
  4961  006B9E                     u2895:
  4962  006B9E  90D8               	bcf	status,0,c
  4963  006BA0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4964  006BA2                     u2894:
  4965  006BA2  2E05               	decfsz	??_digitalWrite^0,f,c
  4966  006BA4  EFCF  F035         	goto	u2895
  4967  006BA8  5006               	movf	(??_digitalWrite+1)^0,w,c
  4968  006BAA  1282               	iorwf	130,f,c	;volatile
  4969  006BAC  EF5F  F036         	goto	l110
  4970  006BB0                     l3226:
  4971  006BB0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4972  006BB4  0E01               	movlw	1
  4973  006BB6  6E06               	movwf	(??_digitalWrite+1)^0,c
  4974  006BB8  2A05               	incf	??_digitalWrite^0,f,c
  4975  006BBA  EFE1  F035         	goto	u2904
  4976  006BBE                     u2905:
  4977  006BBE  90D8               	bcf	status,0,c
  4978  006BC0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4979  006BC2                     u2904:
  4980  006BC2  2E05               	decfsz	??_digitalWrite^0,f,c
  4981  006BC4  EFDF  F035         	goto	u2905
  4982  006BC8  5006               	movf	(??_digitalWrite+1)^0,w,c
  4983  006BCA  0AFF               	xorlw	255
  4984  006BCC  1682               	andwf	130,f,c	;volatile
  4985  006BCE  EF5F  F036         	goto	l110
  4986  006BD2                     l3228:
  4987  006BD2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4988  006BD4  EFF7  F035         	goto	u2910
  4989  006BD8  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4990  006BDA  E107               	bnz	u2911
  4991  006BDC  0E20               	movlw	32
  4992  006BDE  5C01               	subwf	digitalWrite@pin^0,w,c
  4993  006BE0  B0D8               	btfsc	status,0,c
  4994  006BE2  EFF5  F035         	goto	u2911
  4995  006BE6  EFF7  F035         	goto	u2910
  4996  006BEA                     u2911:
  4997  006BEA  EF25  F036         	goto	l3236
  4998  006BEE                     u2910:
  4999  006BEE                     
  5000                           ;io.c: 28:         pin -=24;
  5001  006BEE  0EE8               	movlw	232
  5002  006BF0  2601               	addwf	digitalWrite@pin^0,f,c
  5003  006BF2  0EFF               	movlw	255
  5004  006BF4  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5005                           
  5006                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  5007  006BF6  5003               	movf	digitalWrite@value^0,w,c
  5008  006BF8  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5009  006BFA  B4D8               	btfsc	status,2,c
  5010  006BFC  EF02  F036         	goto	u2921
  5011  006C00  EF04  F036         	goto	u2920
  5012  006C04                     u2921:
  5013  006C04  EF14  F036         	goto	l3234
  5014  006C08                     u2920:
  5015  006C08  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5016  006C0C  0E01               	movlw	1
  5017  006C0E  6E06               	movwf	(??_digitalWrite+1)^0,c
  5018  006C10  2A05               	incf	??_digitalWrite^0,f,c
  5019  006C12  EF0D  F036         	goto	u2934
  5020  006C16                     u2935:
  5021  006C16  90D8               	bcf	status,0,c
  5022  006C18  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5023  006C1A                     u2934:
  5024  006C1A  2E05               	decfsz	??_digitalWrite^0,f,c
  5025  006C1C  EF0B  F036         	goto	u2935
  5026  006C20  5006               	movf	(??_digitalWrite+1)^0,w,c
  5027  006C22  1283               	iorwf	131,f,c	;volatile
  5028  006C24  EF5F  F036         	goto	l110
  5029  006C28                     l3234:
  5030  006C28  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5031  006C2C  0E01               	movlw	1
  5032  006C2E  6E06               	movwf	(??_digitalWrite+1)^0,c
  5033  006C30  2A05               	incf	??_digitalWrite^0,f,c
  5034  006C32  EF1D  F036         	goto	u2944
  5035  006C36                     u2945:
  5036  006C36  90D8               	bcf	status,0,c
  5037  006C38  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5038  006C3A                     u2944:
  5039  006C3A  2E05               	decfsz	??_digitalWrite^0,f,c
  5040  006C3C  EF1B  F036         	goto	u2945
  5041  006C40  5006               	movf	(??_digitalWrite+1)^0,w,c
  5042  006C42  0AFF               	xorlw	255
  5043  006C44  1683               	andwf	131,f,c	;volatile
  5044  006C46  EF5F  F036         	goto	l110
  5045  006C4A                     l3236:
  5046  006C4A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5047  006C4C  EF33  F036         	goto	u2950
  5048  006C50  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5049  006C52  E107               	bnz	u2951
  5050  006C54  0E28               	movlw	40
  5051  006C56  5C01               	subwf	digitalWrite@pin^0,w,c
  5052  006C58  B0D8               	btfsc	status,0,c
  5053  006C5A  EF31  F036         	goto	u2951
  5054  006C5E  EF33  F036         	goto	u2950
  5055  006C62                     u2951:
  5056  006C62  EF5F  F036         	goto	l110
  5057  006C66                     u2950:
  5058  006C66                     
  5059                           ;io.c: 32:         pin -=32;
  5060  006C66  0EE0               	movlw	224
  5061  006C68  2601               	addwf	digitalWrite@pin^0,f,c
  5062  006C6A  0EFF               	movlw	255
  5063  006C6C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5064                           
  5065                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  5066  006C6E  5003               	movf	digitalWrite@value^0,w,c
  5067  006C70  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5068  006C72  B4D8               	btfsc	status,2,c
  5069  006C74  EF3E  F036         	goto	u2961
  5070  006C78  EF40  F036         	goto	u2960
  5071  006C7C                     u2961:
  5072  006C7C  EF50  F036         	goto	l3242
  5073  006C80                     u2960:
  5074  006C80  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5075  006C84  0E01               	movlw	1
  5076  006C86  6E06               	movwf	(??_digitalWrite+1)^0,c
  5077  006C88  2A05               	incf	??_digitalWrite^0,f,c
  5078  006C8A  EF49  F036         	goto	u2974
  5079  006C8E                     u2975:
  5080  006C8E  90D8               	bcf	status,0,c
  5081  006C90  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5082  006C92                     u2974:
  5083  006C92  2E05               	decfsz	??_digitalWrite^0,f,c
  5084  006C94  EF47  F036         	goto	u2975
  5085  006C98  5006               	movf	(??_digitalWrite+1)^0,w,c
  5086  006C9A  1284               	iorwf	132,f,c	;volatile
  5087  006C9C  EF5F  F036         	goto	l110
  5088  006CA0                     l3242:
  5089  006CA0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5090  006CA4  0E01               	movlw	1
  5091  006CA6  6E06               	movwf	(??_digitalWrite+1)^0,c
  5092  006CA8  2A05               	incf	??_digitalWrite^0,f,c
  5093  006CAA  EF59  F036         	goto	u2984
  5094  006CAE                     u2985:
  5095  006CAE  90D8               	bcf	status,0,c
  5096  006CB0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5097  006CB2                     u2984:
  5098  006CB2  2E05               	decfsz	??_digitalWrite^0,f,c
  5099  006CB4  EF57  F036         	goto	u2985
  5100  006CB8  5006               	movf	(??_digitalWrite+1)^0,w,c
  5101  006CBA  0AFF               	xorlw	255
  5102  006CBC  1684               	andwf	132,f,c	;volatile
  5103  006CBE                     l110:
  5104  006CBE  0012               	return		;funcret
  5105  006CC0                     __end_of_digitalWrite:
  5106                           	callstack 0
  5107                           
  5108 ;; *************** function _Delay2ms *****************
  5109 ;; Defined at:
  5110 ;;		line 87 in file "lcd.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;		None
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;  i               1    1[COMRAM] unsigned char 
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    wreg      void 
  5117 ;; Registers used:
  5118 ;;		wreg, status,2, status,0, cstack
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5124 ;;      Params:         0       0       0       0       0       0       0
  5125 ;;      Locals:         1       0       0       0       0       0       0
  5126 ;;      Temps:          0       0       0       0       0       0       0
  5127 ;;      Totals:         1       0       0       0       0       0       0
  5128 ;;Total ram usage:        1 bytes
  5129 ;; Hardware stack levels used: 1
  5130 ;; Hardware stack levels required when called: 1
  5131 ;; This function calls:
  5132 ;;		_Delay40us
  5133 ;; This function is called by:
  5134 ;;		_lcdCommand
  5135 ;;		_lcdInit
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text23
  5140  0048C8                     __ptext23:
  5141                           	callstack 0
  5142  0048C8                     _Delay2ms:
  5143                           	callstack 27
  5144  0048C8                     
  5145                           ;lcd.c: 88:     unsigned char i;;lcd.c: 89:     for (i = 0; i < 50; i++) {
  5146  0048C8  0E00               	movlw	0
  5147  0048CA  6E02               	movwf	Delay2ms@i^0,c
  5148  0048CC                     l3198:
  5149                           
  5150                           ;lcd.c: 90:         Delay40us();
  5151  0048CC  EC58  F024         	call	_Delay40us	;wreg free
  5152  0048D0                     
  5153                           ;lcd.c: 91:     }
  5154  0048D0  2A02               	incf	Delay2ms@i^0,f,c
  5155  0048D2  0E31               	movlw	49
  5156  0048D4  6402               	cpfsgt	Delay2ms@i^0,c
  5157  0048D6  EF6F  F024         	goto	u2781
  5158  0048DA  EF71  F024         	goto	u2780
  5159  0048DE                     u2781:
  5160  0048DE  EF66  F024         	goto	l3198
  5161  0048E2                     u2780:
  5162  0048E2  0012               	return		;funcret
  5163  0048E4                     __end_of_Delay2ms:
  5164                           	callstack 0
  5165                           
  5166 ;; *************** function _Delay40us *****************
  5167 ;; Defined at:
  5168 ;;		line 82 in file "lcd.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;		None
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;  i               1    0[COMRAM] unsigned char 
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      void 
  5175 ;; Registers used:
  5176 ;;		wreg, status,2, status,0
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5182 ;;      Params:         0       0       0       0       0       0       0
  5183 ;;      Locals:         1       0       0       0       0       0       0
  5184 ;;      Temps:          0       0       0       0       0       0       0
  5185 ;;      Totals:         1       0       0       0       0       0       0
  5186 ;;Total ram usage:        1 bytes
  5187 ;; Hardware stack levels used: 1
  5188 ;; This function calls:
  5189 ;;		Nothing
  5190 ;; This function is called by:
  5191 ;;		_Delay2ms
  5192 ;;		_lcdCommand
  5193 ;;		_lcdData
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text24
  5198  0048B0                     __ptext24:
  5199                           	callstack 0
  5200  0048B0                     _Delay40us:
  5201                           	callstack 28
  5202  0048B0                     
  5203                           ;lcd.c: 83:     unsigned char i;;lcd.c: 84:     for (i = 0; i < 25; i++);
  5204  0048B0  0E00               	movlw	0
  5205  0048B2  6E01               	movwf	Delay40us@i^0,c
  5206  0048B4                     l3164:
  5207  0048B4  2A01               	incf	Delay40us@i^0,f,c
  5208  0048B6  0E18               	movlw	24
  5209  0048B8  6401               	cpfsgt	Delay40us@i^0,c
  5210  0048BA  EF61  F024         	goto	u2751
  5211  0048BE  EF63  F024         	goto	u2750
  5212  0048C2                     u2751:
  5213  0048C2  EF5A  F024         	goto	l3164
  5214  0048C6                     u2750:
  5215  0048C6  0012               	return		;funcret
  5216  0048C8                     __end_of_Delay40us:
  5217                           	callstack 0
  5218                           
  5219 ;; *************** function _desce *****************
  5220 ;; Defined at:
  5221 ;;		line 183 in file "main.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;		None
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  j               1    3[COMRAM] unsigned char 
  5226 ;;  before          1    2[COMRAM] unsigned char 
  5227 ;;  k               1    1[COMRAM] unsigned char 
  5228 ;;  i               1    0[COMRAM] unsigned char 
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  1    wreg      void 
  5231 ;; Registers used:
  5232 ;;		wreg, status,2, status,0
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5238 ;;      Params:         0       0       0       0       0       0       0
  5239 ;;      Locals:         4       0       0       0       0       0       0
  5240 ;;      Temps:          0       0       0       0       0       0       0
  5241 ;;      Totals:         4       0       0       0       0       0       0
  5242 ;;Total ram usage:        4 bytes
  5243 ;; Hardware stack levels used: 1
  5244 ;; This function calls:
  5245 ;;		Nothing
  5246 ;; This function is called by:
  5247 ;;		_inicia
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           	psect	text25
  5252  004D1A                     __ptext25:
  5253                           	callstack 0
  5254  004D1A                     _desce:
  5255                           	callstack 29
  5256  004D1A                     
  5257                           ;main.c: 184:     unsigned char i, j, k;;main.c: 185:     unsigned char before;;main.c: 
      +                          186:     TRISB = 0b00000000;
  5258  004D1A  0E00               	movlw	0
  5259  004D1C  6E93               	movwf	147,c	;volatile
  5260                           
  5261                           ;main.c: 187:     before = 0b00000001;
  5262  004D1E  0E01               	movlw	1
  5263  004D20  6E03               	movwf	desce@before^0,c
  5264                           
  5265                           ;main.c: 188:     for (k = 0; k < 8; k++) {
  5266  004D22  0E00               	movlw	0
  5267  004D24  6E02               	movwf	desce@k^0,c
  5268  004D26                     l423:
  5269                           
  5270                           ;main.c: 189:         PORTB = before;
  5271  004D26  C003  FF81         	movff	desce@before,3969	;volatile
  5272  004D2A                     
  5273                           ;main.c: 190:         for (i = 0; i < 255; i++) {
  5274  004D2A  0E00               	movlw	0
  5275  004D2C  6E01               	movwf	desce@i^0,c
  5276  004D2E                     l4050:
  5277                           
  5278                           ;main.c: 191:             for (j = 0; j < 255; j++);
  5279  004D2E  0E00               	movlw	0
  5280  004D30  6E04               	movwf	desce@j^0,c
  5281  004D32                     l4056:
  5282  004D32  2A04               	incf	desce@j^0,f,c
  5283  004D34  2804               	incf	desce@j^0,w,c
  5284  004D36  A4D8               	btfss	status,2,c
  5285  004D38  EFA0  F026         	goto	u4341
  5286  004D3C  EFA2  F026         	goto	u4340
  5287  004D40                     u4341:
  5288  004D40  EF99  F026         	goto	l4056
  5289  004D44                     u4340:
  5290  004D44                     
  5291                           ;main.c: 192:             for (j = 0; j < 255; j++);
  5292  004D44  0E00               	movlw	0
  5293  004D46  6E04               	movwf	desce@j^0,c
  5294  004D48                     l4066:
  5295  004D48  2A04               	incf	desce@j^0,f,c
  5296  004D4A  2804               	incf	desce@j^0,w,c
  5297  004D4C  A4D8               	btfss	status,2,c
  5298  004D4E  EFAB  F026         	goto	u4351
  5299  004D52  EFAD  F026         	goto	u4350
  5300  004D56                     u4351:
  5301  004D56  EFA4  F026         	goto	l4066
  5302  004D5A                     u4350:
  5303  004D5A                     
  5304                           ;main.c: 193:         }
  5305  004D5A  2A01               	incf	desce@i^0,f,c
  5306  004D5C  2801               	incf	desce@i^0,w,c
  5307  004D5E  A4D8               	btfss	status,2,c
  5308  004D60  EFB4  F026         	goto	u4361
  5309  004D64  EFB6  F026         	goto	u4360
  5310  004D68                     u4361:
  5311  004D68  EF97  F026         	goto	l4050
  5312  004D6C                     u4360:
  5313  004D6C                     
  5314                           ;main.c: 194:         before = before << 1;
  5315  004D6C  5003               	movf	desce@before^0,w,c
  5316  004D6E  2403               	addwf	desce@before^0,w,c
  5317  004D70  6E03               	movwf	desce@before^0,c
  5318  004D72                     
  5319                           ;main.c: 195:     }
  5320  004D72  2A02               	incf	desce@k^0,f,c
  5321  004D74  0E07               	movlw	7
  5322  004D76  6402               	cpfsgt	desce@k^0,c
  5323  004D78  EFC0  F026         	goto	u4371
  5324  004D7C  EFC2  F026         	goto	u4370
  5325  004D80                     u4371:
  5326  004D80  EF93  F026         	goto	l423
  5327  004D84                     u4370:
  5328  004D84  0012               	return		;funcret
  5329  004D86                     __end_of_desce:
  5330                           	callstack 0
  5331                           
  5332 ;; *************** function _imprime *****************
  5333 ;; Defined at:
  5334 ;;		line 334 in file "main.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;		None
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;		None
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  1    wreg      void 
  5341 ;; Registers used:
  5342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5348 ;;      Params:         0       0       0       0       0       0       0
  5349 ;;      Locals:         0       0       0       0       0       0       0
  5350 ;;      Temps:          0       0       0       0       0       0       0
  5351 ;;      Totals:         0       0       0       0       0       0       0
  5352 ;;Total ram usage:        0 bytes
  5353 ;; Hardware stack levels used: 1
  5354 ;; Hardware stack levels required when called: 3
  5355 ;; This function calls:
  5356 ;;		___flmul
  5357 ;;		___fltol
  5358 ;;		_itoa
  5359 ;;		_lcd_cmd
  5360 ;;		_lcd_dat
  5361 ;;		_lcd_str
  5362 ;; This function is called by:
  5363 ;;		_main
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text26
  5368  0062F8                     __ptext26:
  5369                           	callstack 0
  5370  0062F8                     _imprime:
  5371                           	callstack 27
  5372  0062F8                     
  5373                           ;main.c: 335:     lcd_cmd(0x01);
  5374  0062F8  0E01               	movlw	1
  5375  0062FA  EC98  F024         	call	_lcd_cmd
  5376                           
  5377                           ;main.c: 336:     lcd_cmd(0x80);
  5378  0062FE  0E80               	movlw	128
  5379  006300  EC98  F024         	call	_lcd_cmd
  5380  006304                     
  5381                           ;main.c: 337:     lcd_str("####MEDIDAS#####");
  5382  006304  0EC3               	movlw	low STR_16
  5383  006306  6E08               	movwf	lcd_str@str^0,c
  5384  006308  0E7E               	movlw	high STR_16
  5385  00630A  6E09               	movwf	(lcd_str@str+1)^0,c
  5386  00630C  ECFF  F024         	call	_lcd_str	;wreg free
  5387  006310                     
  5388                           ;main.c: 340:     lcd_cmd(0xC0);
  5389  006310  0EC0               	movlw	192
  5390  006312  EC98  F024         	call	_lcd_cmd
  5391  006316                     
  5392                           ;main.c: 341:     itoa(temperatura * 10, str);
  5393  006316  0E00               	movlw	0
  5394  006318  6E13               	movwf	___flmul@a^0,c
  5395  00631A  0E00               	movlw	0
  5396  00631C  6E14               	movwf	(___flmul@a+1)^0,c
  5397  00631E  0E20               	movlw	32
  5398  006320  6E15               	movwf	(___flmul@a+2)^0,c
  5399  006322  0E41               	movlw	65
  5400  006324  6E16               	movwf	(___flmul@a+3)^0,c
  5401  006326  C07B  F00F         	movff	_temperatura,___flmul@b
  5402  00632A  C07C  F010         	movff	_temperatura+1,___flmul@b+1
  5403  00632E  C07D  F011         	movff	_temperatura+2,___flmul@b+2
  5404  006332  C07E  F012         	movff	_temperatura+3,___flmul@b+3
  5405  006336  ECD3  F03A         	call	___flmul	;wreg free
  5406  00633A  C00F  F028         	movff	?___flmul,___fltol@f1
  5407  00633E  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  5408  006342  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  5409  006346  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  5410  00634A  EC05  F02B         	call	___fltol	;wreg free
  5411  00634E  C028  F032         	movff	?___fltol,itoa@val
  5412  006352  C029  F033         	movff	?___fltol+1,itoa@val+1
  5413  006356  0E6D               	movlw	low _str
  5414  006358  6E34               	movwf	itoa@str^0,c
  5415  00635A  0E00               	movlw	high _str
  5416  00635C  6E35               	movwf	(itoa@str+1)^0,c
  5417  00635E  EC88  F02B         	call	_itoa	;wreg free
  5418  006362                     
  5419                           ;main.c: 342:     lcd_dat('T');
  5420  006362  0E54               	movlw	84
  5421  006364  ECAD  F024         	call	_lcd_dat
  5422  006368                     
  5423                           ;main.c: 343:     lcd_dat(str[2]);
  5424  006368  506F               	movf	(_str+2)^0,w,c
  5425  00636A  ECAD  F024         	call	_lcd_dat
  5426  00636E                     
  5427                           ;main.c: 344:     lcd_dat(str[3]);
  5428  00636E  5070               	movf	(_str+3)^0,w,c
  5429  006370  ECAD  F024         	call	_lcd_dat
  5430  006374                     
  5431                           ;main.c: 345:     lcd_dat(',');
  5432  006374  0E2C               	movlw	44
  5433  006376  ECAD  F024         	call	_lcd_dat
  5434  00637A                     
  5435                           ;main.c: 346:     lcd_dat(str[4]);
  5436  00637A  5071               	movf	(_str+4)^0,w,c
  5437  00637C  ECAD  F024         	call	_lcd_dat
  5438  006380                     
  5439                           ;main.c: 347:     lcd_cmd(0xC0 + 5);
  5440  006380  0EC5               	movlw	197
  5441  006382  EC98  F024         	call	_lcd_cmd
  5442  006386                     
  5443                           ;main.c: 348:     lcd_str("C");
  5444  006386  0EFC               	movlw	low STR_17
  5445  006388  6E08               	movwf	lcd_str@str^0,c
  5446  00638A  0E7F               	movlw	high STR_17
  5447  00638C  6E09               	movwf	(lcd_str@str+1)^0,c
  5448  00638E  ECFF  F024         	call	_lcd_str	;wreg free
  5449  006392                     
  5450                           ;main.c: 351:     lcd_cmd(0x90);
  5451  006392  0E90               	movlw	144
  5452  006394  EC98  F024         	call	_lcd_cmd
  5453  006398                     
  5454                           ;main.c: 352:     itoa(tempLiquido * 10, str);
  5455  006398  0E00               	movlw	0
  5456  00639A  6E13               	movwf	___flmul@a^0,c
  5457  00639C  0E00               	movlw	0
  5458  00639E  6E14               	movwf	(___flmul@a+1)^0,c
  5459  0063A0  0E20               	movlw	32
  5460  0063A2  6E15               	movwf	(___flmul@a+2)^0,c
  5461  0063A4  0E41               	movlw	65
  5462  0063A6  6E16               	movwf	(___flmul@a+3)^0,c
  5463  0063A8  C077  F00F         	movff	_tempLiquido,___flmul@b
  5464  0063AC  C078  F010         	movff	_tempLiquido+1,___flmul@b+1
  5465  0063B0  C079  F011         	movff	_tempLiquido+2,___flmul@b+2
  5466  0063B4  C07A  F012         	movff	_tempLiquido+3,___flmul@b+3
  5467  0063B8  ECD3  F03A         	call	___flmul	;wreg free
  5468  0063BC  C00F  F028         	movff	?___flmul,___fltol@f1
  5469  0063C0  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  5470  0063C4  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  5471  0063C8  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  5472  0063CC  EC05  F02B         	call	___fltol	;wreg free
  5473  0063D0  C028  F032         	movff	?___fltol,itoa@val
  5474  0063D4  C029  F033         	movff	?___fltol+1,itoa@val+1
  5475  0063D8  0E6D               	movlw	low _str
  5476  0063DA  6E34               	movwf	itoa@str^0,c
  5477  0063DC  0E00               	movlw	high _str
  5478  0063DE  6E35               	movwf	(itoa@str+1)^0,c
  5479  0063E0  EC88  F02B         	call	_itoa	;wreg free
  5480                           
  5481                           ;main.c: 353:     lcd_dat('L');
  5482  0063E4  0E4C               	movlw	76
  5483  0063E6  ECAD  F024         	call	_lcd_dat
  5484                           
  5485                           ;main.c: 354:     lcd_dat(str[2]);
  5486  0063EA  506F               	movf	(_str+2)^0,w,c
  5487  0063EC  ECAD  F024         	call	_lcd_dat
  5488                           
  5489                           ;main.c: 355:     lcd_dat(str[3]);
  5490  0063F0  5070               	movf	(_str+3)^0,w,c
  5491  0063F2  ECAD  F024         	call	_lcd_dat
  5492                           
  5493                           ;main.c: 356:     lcd_dat(',');
  5494  0063F6  0E2C               	movlw	44
  5495  0063F8  ECAD  F024         	call	_lcd_dat
  5496                           
  5497                           ;main.c: 357:     lcd_dat(str[4]);
  5498  0063FC  5071               	movf	(_str+4)^0,w,c
  5499  0063FE  ECAD  F024         	call	_lcd_dat
  5500                           
  5501                           ;main.c: 358:     lcd_cmd(0x90 + 5);
  5502  006402  0E95               	movlw	149
  5503  006404  EC98  F024         	call	_lcd_cmd
  5504  006408                     
  5505                           ;main.c: 359:     lcd_str("C");
  5506  006408  0EFC               	movlw	low STR_17
  5507  00640A  6E08               	movwf	lcd_str@str^0,c
  5508  00640C  0E7F               	movlw	high STR_17
  5509  00640E  6E09               	movwf	(lcd_str@str+1)^0,c
  5510  006410  ECFF  F024         	call	_lcd_str	;wreg free
  5511  006414                     
  5512                           ;main.c: 362:     lcd_cmd(0xD0);
  5513  006414  0ED0               	movlw	208
  5514  006416  EC98  F024         	call	_lcd_cmd
  5515  00641A                     
  5516                           ;main.c: 363:     itoa(limiteInferior, str);
  5517  00641A  0E00               	movlw	0
  5518  00641C  6E33               	movwf	(itoa@val+1)^0,c
  5519  00641E  0E02               	movlw	2
  5520  006420  6E32               	movwf	itoa@val^0,c
  5521  006422  0E6D               	movlw	low _str
  5522  006424  6E34               	movwf	itoa@str^0,c
  5523  006426  0E00               	movlw	high _str
  5524  006428  6E35               	movwf	(itoa@str+1)^0,c
  5525  00642A  EC88  F02B         	call	_itoa	;wreg free
  5526  00642E                     
  5527                           ;main.c: 364:     lcd_dat('I');
  5528  00642E  0E49               	movlw	73
  5529  006430  ECAD  F024         	call	_lcd_dat
  5530  006434                     
  5531                           ;main.c: 365:     lcd_cmd(0xD0 + 2);
  5532  006434  0ED2               	movlw	210
  5533  006436  EC98  F024         	call	_lcd_cmd
  5534  00643A                     
  5535                           ;main.c: 366:     lcd_dat(str[3]);
  5536  00643A  5070               	movf	(_str+3)^0,w,c
  5537  00643C  ECAD  F024         	call	_lcd_dat
  5538  006440                     
  5539                           ;main.c: 367:     lcd_dat(str[4]);
  5540  006440  5071               	movf	(_str+4)^0,w,c
  5541  006442  ECAD  F024         	call	_lcd_dat
  5542  006446                     
  5543                           ;main.c: 368:     lcd_cmd(0xD0 + 4);
  5544  006446  0ED4               	movlw	212
  5545  006448  EC98  F024         	call	_lcd_cmd
  5546  00644C                     
  5547                           ;main.c: 369:     lcd_str("C");
  5548  00644C  0EFC               	movlw	low STR_17
  5549  00644E  6E08               	movwf	lcd_str@str^0,c
  5550  006450  0E7F               	movlw	high STR_17
  5551  006452  6E09               	movwf	(lcd_str@str+1)^0,c
  5552  006454  ECFF  F024         	call	_lcd_str	;wreg free
  5553  006458                     
  5554                           ;main.c: 371:     lcd_cmd(0xD0 + 7);
  5555  006458  0ED7               	movlw	215
  5556  00645A  EC98  F024         	call	_lcd_cmd
  5557                           
  5558                           ;main.c: 372:     itoa(limiteSuperior, str);
  5559  00645E  0E00               	movlw	0
  5560  006460  6E33               	movwf	(itoa@val+1)^0,c
  5561  006462  0E08               	movlw	8
  5562  006464  6E32               	movwf	itoa@val^0,c
  5563  006466  0E6D               	movlw	low _str
  5564  006468  6E34               	movwf	itoa@str^0,c
  5565  00646A  0E00               	movlw	high _str
  5566  00646C  6E35               	movwf	(itoa@str+1)^0,c
  5567  00646E  EC88  F02B         	call	_itoa	;wreg free
  5568  006472                     
  5569                           ;main.c: 373:     lcd_dat('S');
  5570  006472  0E53               	movlw	83
  5571  006474  ECAD  F024         	call	_lcd_dat
  5572  006478                     
  5573                           ;main.c: 374:     lcd_cmd(0xD0 + 9);
  5574  006478  0ED9               	movlw	217
  5575  00647A  EC98  F024         	call	_lcd_cmd
  5576  00647E                     
  5577                           ;main.c: 375:     lcd_dat(str[3]);
  5578  00647E  5070               	movf	(_str+3)^0,w,c
  5579  006480  ECAD  F024         	call	_lcd_dat
  5580  006484                     
  5581                           ;main.c: 376:     lcd_dat(str[4]);
  5582  006484  5071               	movf	(_str+4)^0,w,c
  5583  006486  ECAD  F024         	call	_lcd_dat
  5584  00648A                     
  5585                           ;main.c: 377:     lcd_cmd(0xD0 + 11);
  5586  00648A  0EDB               	movlw	219
  5587  00648C  EC98  F024         	call	_lcd_cmd
  5588  006490                     
  5589                           ;main.c: 378:     lcd_str("C");
  5590  006490  0EFC               	movlw	low STR_17
  5591  006492  6E08               	movwf	lcd_str@str^0,c
  5592  006494  0E7F               	movlw	high STR_17
  5593  006496  6E09               	movwf	(lcd_str@str+1)^0,c
  5594  006498  ECFF  F024         	call	_lcd_str	;wreg free
  5595  00649C  0012               	return		;funcret
  5596  00649E                     __end_of_imprime:
  5597                           	callstack 0
  5598                           
  5599 ;; *************** function _itoa *****************
  5600 ;; Defined at:
  5601 ;;		line 23 in file "main.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  val             2   49[COMRAM] unsigned int 
  5604 ;;  str             2   51[COMRAM] PTR unsigned char 
  5605 ;;		 -> str(6), 
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;		None
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  1    wreg      void 
  5610 ;; Registers used:
  5611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5617 ;;      Params:         4       0       0       0       0       0       0
  5618 ;;      Locals:         0       0       0       0       0       0       0
  5619 ;;      Temps:          0       0       0       0       0       0       0
  5620 ;;      Totals:         4       0       0       0       0       0       0
  5621 ;;Total ram usage:        4 bytes
  5622 ;; Hardware stack levels used: 1
  5623 ;; Hardware stack levels required when called: 1
  5624 ;; This function calls:
  5625 ;;		___lwdiv
  5626 ;;		___lwmod
  5627 ;; This function is called by:
  5628 ;;		_imprime
  5629 ;;		_maxEmin
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text27
  5634  005710                     __ptext27:
  5635                           	callstack 0
  5636  005710                     _itoa:
  5637                           	callstack 28
  5638  005710                     
  5639                           ;main.c: 24:     str[0] = (val / 10000) + 0x30;
  5640  005710  C032  F006         	movff	itoa@val,___lwdiv@dividend
  5641  005714  C033  F007         	movff	itoa@val+1,___lwdiv@dividend+1
  5642  005718  0E27               	movlw	39
  5643  00571A  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  5644  00571C  0E10               	movlw	16
  5645  00571E  6E08               	movwf	___lwdiv@divisor^0,c
  5646  005720  EC2F  F027         	call	___lwdiv	;wreg free
  5647  005724  5006               	movf	?___lwdiv^0,w,c
  5648  005726  0F30               	addlw	48
  5649  005728  C034  FFD9         	movff	itoa@str,fsr2l
  5650  00572C  C035  FFDA         	movff	itoa@str+1,fsr2h
  5651  005730  6EDF               	movwf	indf2,c
  5652                           
  5653                           ;main.c: 25:     str[1] = ((val % 10000) / 1000) + 0x30;
  5654  005732  EE20 F001          	lfsr	2,1
  5655  005736  5034               	movf	itoa@str^0,w,c
  5656  005738  26D9               	addwf	fsr2l,f,c
  5657  00573A  5035               	movf	(itoa@str+1)^0,w,c
  5658  00573C  22DA               	addwfc	fsr2h,f,c
  5659  00573E  0E27               	movlw	39
  5660  005740  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5661  005742  0E10               	movlw	16
  5662  005744  6E03               	movwf	___lwmod@divisor^0,c
  5663  005746  C032  F001         	movff	itoa@val,___lwmod@dividend
  5664  00574A  C033  F002         	movff	itoa@val+1,___lwmod@dividend+1
  5665  00574E  EC5B  F026         	call	___lwmod	;wreg free
  5666  005752  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  5667  005756  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  5668  00575A  0E03               	movlw	3
  5669  00575C  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  5670  00575E  0EE8               	movlw	232
  5671  005760  6E08               	movwf	___lwdiv@divisor^0,c
  5672  005762  EC2F  F027         	call	___lwdiv	;wreg free
  5673  005766  5006               	movf	?___lwdiv^0,w,c
  5674  005768  0F30               	addlw	48
  5675  00576A  6EDF               	movwf	indf2,c
  5676                           
  5677                           ;main.c: 26:     str[2] = ((val % 1000) / 100) + 0x30;
  5678  00576C  EE20 F002          	lfsr	2,2
  5679  005770  5034               	movf	itoa@str^0,w,c
  5680  005772  26D9               	addwf	fsr2l,f,c
  5681  005774  5035               	movf	(itoa@str+1)^0,w,c
  5682  005776  22DA               	addwfc	fsr2h,f,c
  5683  005778  0E03               	movlw	3
  5684  00577A  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5685  00577C  0EE8               	movlw	232
  5686  00577E  6E03               	movwf	___lwmod@divisor^0,c
  5687  005780  C032  F001         	movff	itoa@val,___lwmod@dividend
  5688  005784  C033  F002         	movff	itoa@val+1,___lwmod@dividend+1
  5689  005788  EC5B  F026         	call	___lwmod	;wreg free
  5690  00578C  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  5691  005790  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  5692  005794  0E00               	movlw	0
  5693  005796  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  5694  005798  0E64               	movlw	100
  5695  00579A  6E08               	movwf	___lwdiv@divisor^0,c
  5696  00579C  EC2F  F027         	call	___lwdiv	;wreg free
  5697  0057A0  5006               	movf	?___lwdiv^0,w,c
  5698  0057A2  0F30               	addlw	48
  5699  0057A4  6EDF               	movwf	indf2,c
  5700                           
  5701                           ;main.c: 27:     str[3] = ((val % 100) / 10) + 0x30;
  5702  0057A6  EE20 F003          	lfsr	2,3
  5703  0057AA  5034               	movf	itoa@str^0,w,c
  5704  0057AC  26D9               	addwf	fsr2l,f,c
  5705  0057AE  5035               	movf	(itoa@str+1)^0,w,c
  5706  0057B0  22DA               	addwfc	fsr2h,f,c
  5707  0057B2  0E00               	movlw	0
  5708  0057B4  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5709  0057B6  0E64               	movlw	100
  5710  0057B8  6E03               	movwf	___lwmod@divisor^0,c
  5711  0057BA  C032  F001         	movff	itoa@val,___lwmod@dividend
  5712  0057BE  C033  F002         	movff	itoa@val+1,___lwmod@dividend+1
  5713  0057C2  EC5B  F026         	call	___lwmod	;wreg free
  5714  0057C6  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  5715  0057CA  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  5716  0057CE  0E00               	movlw	0
  5717  0057D0  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  5718  0057D2  0E0A               	movlw	10
  5719  0057D4  6E08               	movwf	___lwdiv@divisor^0,c
  5720  0057D6  EC2F  F027         	call	___lwdiv	;wreg free
  5721  0057DA  5006               	movf	?___lwdiv^0,w,c
  5722  0057DC  0F30               	addlw	48
  5723  0057DE  6EDF               	movwf	indf2,c
  5724                           
  5725                           ;main.c: 28:     str[4] = (val % 10) + 0x30;
  5726  0057E0  EE20 F004          	lfsr	2,4
  5727  0057E4  5034               	movf	itoa@str^0,w,c
  5728  0057E6  26D9               	addwf	fsr2l,f,c
  5729  0057E8  5035               	movf	(itoa@str+1)^0,w,c
  5730  0057EA  22DA               	addwfc	fsr2h,f,c
  5731  0057EC  C032  F001         	movff	itoa@val,___lwmod@dividend
  5732  0057F0  C033  F002         	movff	itoa@val+1,___lwmod@dividend+1
  5733  0057F4  0E00               	movlw	0
  5734  0057F6  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5735  0057F8  0E0A               	movlw	10
  5736  0057FA  6E03               	movwf	___lwmod@divisor^0,c
  5737  0057FC  EC5B  F026         	call	___lwmod	;wreg free
  5738  005800  5001               	movf	?___lwmod^0,w,c
  5739  005802  0F30               	addlw	48
  5740  005804  6EDF               	movwf	indf2,c
  5741  005806                     
  5742                           ;main.c: 29:     str[5] = 0;
  5743  005806  EE20 F005          	lfsr	2,5
  5744  00580A  5034               	movf	itoa@str^0,w,c
  5745  00580C  26D9               	addwf	fsr2l,f,c
  5746  00580E  5035               	movf	(itoa@str+1)^0,w,c
  5747  005810  22DA               	addwfc	fsr2h,f,c
  5748  005812  0E00               	movlw	0
  5749  005814  6EDF               	movwf	indf2,c
  5750  005816  0012               	return		;funcret
  5751  005818                     __end_of_itoa:
  5752                           	callstack 0
  5753                           
  5754 ;; *************** function ___fltol *****************
  5755 ;; Defined at:
  5756 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;  f1              4   39[COMRAM] void 
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;  exp1            1   48[COMRAM] unsigned char 
  5761 ;;  sign1           1   47[COMRAM] unsigned char 
  5762 ;; Return value:  Size  Location     Type
  5763 ;;                  4   39[COMRAM] long 
  5764 ;; Registers used:
  5765 ;;		wreg, status,2, status,0
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/0
  5768 ;;		On exit  : 0/0
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5771 ;;      Params:         4       0       0       0       0       0       0
  5772 ;;      Locals:         2       0       0       0       0       0       0
  5773 ;;      Temps:          4       0       0       0       0       0       0
  5774 ;;      Totals:        10       0       0       0       0       0       0
  5775 ;;Total ram usage:       10 bytes
  5776 ;; Hardware stack levels used: 1
  5777 ;; This function calls:
  5778 ;;		Nothing
  5779 ;; This function is called by:
  5780 ;;		_imprime
  5781 ;;		_maxEmin
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           	psect	text28
  5786  00560A                     __ptext28:
  5787                           	callstack 0
  5788  00560A                     ___fltol:
  5789                           	callstack 29
  5790  00560A  342A               	rlcf	(___fltol@f1+2)^0,w,c
  5791  00560C  342B               	rlcf	(___fltol@f1+3)^0,w,c
  5792  00560E  6E31               	movwf	___fltol@exp1^0,c
  5793  005610  5031               	movf	___fltol@exp1^0,w,c
  5794  005612  A4D8               	btfss	status,2,c
  5795  005614  EF0E  F02B         	goto	u4591
  5796  005618  EF10  F02B         	goto	u4590
  5797  00561C                     u4591:
  5798  00561C  EF1A  F02B         	goto	l4232
  5799  005620                     u4590:
  5800  005620                     l4228:
  5801  005620  0E00               	movlw	0
  5802  005622  6E28               	movwf	?___fltol^0,c
  5803  005624  0E00               	movlw	0
  5804  005626  6E29               	movwf	(?___fltol+1)^0,c
  5805  005628  0E00               	movlw	0
  5806  00562A  6E2A               	movwf	(?___fltol+2)^0,c
  5807  00562C  0E00               	movlw	0
  5808  00562E  6E2B               	movwf	(?___fltol+3)^0,c
  5809  005630  EF87  F02B         	goto	l810
  5810  005634                     l4232:
  5811  005634  C028  F02C         	movff	___fltol@f1,??___fltol
  5812  005638  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  5813  00563C  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  5814  005640  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  5815  005644  0E20               	movlw	32
  5816  005646  EF2A  F02B         	goto	u4600
  5817  00564A                     u4605:
  5818  00564A  90D8               	bcf	status,0,c
  5819  00564C  322F               	rrcf	(??___fltol+3)^0,f,c
  5820  00564E  322E               	rrcf	(??___fltol+2)^0,f,c
  5821  005650  322D               	rrcf	(??___fltol+1)^0,f,c
  5822  005652  322C               	rrcf	??___fltol^0,f,c
  5823  005654                     u4600:
  5824  005654  2EE8               	decfsz	wreg,f,c
  5825  005656  EF25  F02B         	goto	u4605
  5826  00565A  502C               	movf	??___fltol^0,w,c
  5827  00565C  6E30               	movwf	___fltol@sign1^0,c
  5828  00565E  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  5829  005660  0EFF               	movlw	255
  5830  005662  1628               	andwf	___fltol@f1^0,f,c
  5831  005664  0EFF               	movlw	255
  5832  005666  1629               	andwf	(___fltol@f1+1)^0,f,c
  5833  005668  0EFF               	movlw	255
  5834  00566A  162A               	andwf	(___fltol@f1+2)^0,f,c
  5835  00566C  0E00               	movlw	0
  5836  00566E  162B               	andwf	(___fltol@f1+3)^0,f,c
  5837  005670  0E96               	movlw	150
  5838  005672  5E31               	subwf	___fltol@exp1^0,f,c
  5839  005674  BE31               	btfsc	___fltol@exp1^0,7,c
  5840  005676  EF41  F02B         	goto	u4610
  5841  00567A  EF3F  F02B         	goto	u4611
  5842  00567E                     u4611:
  5843  00567E  EF57  F02B         	goto	l4252
  5844  005682                     u4610:
  5845  005682  5031               	movf	___fltol@exp1^0,w,c
  5846  005684  0A80               	xorlw	128
  5847  005686  0F97               	addlw	151
  5848  005688  B0D8               	btfsc	status,0,c
  5849  00568A  EF49  F02B         	goto	u4621
  5850  00568E  EF4B  F02B         	goto	u4620
  5851  005692                     u4621:
  5852  005692  EF4D  F02B         	goto	l4248
  5853  005696                     u4620:
  5854  005696  EF10  F02B         	goto	l4228
  5855  00569A                     l4248:
  5856  00569A  90D8               	bcf	status,0,c
  5857  00569C  322B               	rrcf	(___fltol@f1+3)^0,f,c
  5858  00569E  322A               	rrcf	(___fltol@f1+2)^0,f,c
  5859  0056A0  3229               	rrcf	(___fltol@f1+1)^0,f,c
  5860  0056A2  3228               	rrcf	___fltol@f1^0,f,c
  5861  0056A4  3E31               	incfsz	___fltol@exp1^0,f,c
  5862  0056A6  EF4D  F02B         	goto	l4248
  5863  0056AA  EF6F  F02B         	goto	l4262
  5864  0056AE                     l4252:
  5865  0056AE  0E1F               	movlw	31
  5866  0056B0  6431               	cpfsgt	___fltol@exp1^0,c
  5867  0056B2  EF5D  F02B         	goto	u4631
  5868  0056B6  EF5F  F02B         	goto	u4630
  5869  0056BA                     u4631:
  5870  0056BA  EF67  F02B         	goto	l4260
  5871  0056BE                     u4630:
  5872  0056BE  EF10  F02B         	goto	l4228
  5873  0056C2                     l4258:
  5874  0056C2  90D8               	bcf	status,0,c
  5875  0056C4  3628               	rlcf	___fltol@f1^0,f,c
  5876  0056C6  3629               	rlcf	(___fltol@f1+1)^0,f,c
  5877  0056C8  362A               	rlcf	(___fltol@f1+2)^0,f,c
  5878  0056CA  362B               	rlcf	(___fltol@f1+3)^0,f,c
  5879  0056CC  0631               	decf	___fltol@exp1^0,f,c
  5880  0056CE                     l4260:
  5881  0056CE  5031               	movf	___fltol@exp1^0,w,c
  5882  0056D0  A4D8               	btfss	status,2,c
  5883  0056D2  EF6D  F02B         	goto	u4641
  5884  0056D6  EF6F  F02B         	goto	u4640
  5885  0056DA                     u4641:
  5886  0056DA  EF61  F02B         	goto	l4258
  5887  0056DE                     u4640:
  5888  0056DE                     l4262:
  5889  0056DE  5030               	movf	___fltol@sign1^0,w,c
  5890  0056E0  B4D8               	btfsc	status,2,c
  5891  0056E2  EF75  F02B         	goto	u4651
  5892  0056E6  EF77  F02B         	goto	u4650
  5893  0056EA                     u4651:
  5894  0056EA  EF7F  F02B         	goto	l4266
  5895  0056EE                     u4650:
  5896  0056EE  1E2B               	comf	(___fltol@f1+3)^0,f,c
  5897  0056F0  1E2A               	comf	(___fltol@f1+2)^0,f,c
  5898  0056F2  1E29               	comf	(___fltol@f1+1)^0,f,c
  5899  0056F4  6C28               	negf	___fltol@f1^0,c
  5900  0056F6  0E00               	movlw	0
  5901  0056F8  2229               	addwfc	(___fltol@f1+1)^0,f,c
  5902  0056FA  222A               	addwfc	(___fltol@f1+2)^0,f,c
  5903  0056FC  222B               	addwfc	(___fltol@f1+3)^0,f,c
  5904  0056FE                     l4266:
  5905  0056FE  C028  F028         	movff	___fltol@f1,?___fltol
  5906  005702  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  5907  005706  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  5908  00570A  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  5909  00570E                     l810:
  5910  00570E  0012               	return		;funcret
  5911  005710                     __end_of___fltol:
  5912                           	callstack 0
  5913                           
  5914 ;; *************** function _fecharPorta *****************
  5915 ;; Defined at:
  5916 ;;		line 455 in file "main.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  cont            2   55[COMRAM] int 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;		None
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  1    wreg      void 
  5923 ;; Registers used:
  5924 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5930 ;;      Params:         2       0       0       0       0       0       0
  5931 ;;      Locals:         0       0       0       0       0       0       0
  5932 ;;      Temps:          0       0       0       0       0       0       0
  5933 ;;      Totals:         2       0       0       0       0       0       0
  5934 ;;Total ram usage:        2 bytes
  5935 ;; Hardware stack levels used: 1
  5936 ;; Hardware stack levels required when called: 1
  5937 ;; This function calls:
  5938 ;;		___fladd
  5939 ;;		___flmul
  5940 ;;		___xxtofl
  5941 ;;		_atraso_ms
  5942 ;; This function is called by:
  5943 ;;		_main
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           
  5947                           	psect	text29
  5948  004F50                     __ptext29:
  5949                           	callstack 0
  5950  004F50                     _fecharPorta:
  5951                           	callstack 29
  5952  004F50                     
  5953                           ;main.c: 456:     temperatura += cont * 0.25;
  5954  004F50  C07B  F028         	movff	_temperatura,___fladd@b
  5955  004F54  C07C  F029         	movff	_temperatura+1,___fladd@b+1
  5956  004F58  C07D  F02A         	movff	_temperatura+2,___fladd@b+2
  5957  004F5C  C07E  F02B         	movff	_temperatura+3,___fladd@b+3
  5958  004F60  0E00               	movlw	0
  5959  004F62  6E13               	movwf	___flmul@a^0,c
  5960  004F64  0E00               	movlw	0
  5961  004F66  6E14               	movwf	(___flmul@a+1)^0,c
  5962  004F68  0E80               	movlw	128
  5963  004F6A  6E15               	movwf	(___flmul@a+2)^0,c
  5964  004F6C  0E3E               	movlw	62
  5965  004F6E  6E16               	movwf	(___flmul@a+3)^0,c
  5966  004F70  C038  F001         	movff	fecharPorta@cont,___xxtofl@val
  5967  004F74  C039  F002         	movff	fecharPorta@cont+1,___xxtofl@val+1
  5968  004F78  0E00               	movlw	0
  5969  004F7A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5970  004F7C  0EFF               	movlw	-1
  5971  004F7E  6E03               	movwf	(___xxtofl@val+2)^0,c
  5972  004F80  6E04               	movwf	(___xxtofl@val+3)^0,c
  5973  004F82  0E01               	movlw	1
  5974  004F84  EC4F  F032         	call	___xxtofl
  5975  004F88  C001  F00F         	movff	?___xxtofl,___flmul@b
  5976  004F8C  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  5977  004F90  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  5978  004F94  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  5979  004F98  ECD3  F03A         	call	___flmul	;wreg free
  5980  004F9C  C00F  F02C         	movff	?___flmul,___fladd@a
  5981  004FA0  C010  F02D         	movff	?___flmul+1,___fladd@a+1
  5982  004FA4  C011  F02E         	movff	?___flmul+2,___fladd@a+2
  5983  004FA8  C012  F02F         	movff	?___flmul+3,___fladd@a+3
  5984  004FAC  ECE8  F03C         	call	___fladd	;wreg free
  5985  004FB0  C028  F07B         	movff	?___fladd,_temperatura
  5986  004FB4  C029  F07C         	movff	?___fladd+1,_temperatura+1
  5987  004FB8  C02A  F07D         	movff	?___fladd+2,_temperatura+2
  5988  004FBC  C02B  F07E         	movff	?___fladd+3,_temperatura+3
  5989  004FC0                     
  5990                           ;main.c: 457:     PORTCbits.RC5 = 1;
  5991  004FC0  8A82               	bsf	130,5,c	;volatile
  5992  004FC2                     
  5993                           ;main.c: 458:     atraso_ms(350);
  5994  004FC2  0E01               	movlw	1
  5995  004FC4  6E02               	movwf	(atraso_ms@valor+1)^0,c
  5996  004FC6  0E5E               	movlw	94
  5997  004FC8  6E01               	movwf	atraso_ms@valor^0,c
  5998  004FCA  EC29  F026         	call	_atraso_ms	;wreg free
  5999  004FCE                     
  6000                           ;main.c: 459:     PORTCbits.RC5 = 0;
  6001  004FCE  9A82               	bcf	130,5,c	;volatile
  6002  004FD0  0012               	return		;funcret
  6003  004FD2                     __end_of_fecharPorta:
  6004                           	callstack 0
  6005                           
  6006 ;; *************** function ___xxtofl *****************
  6007 ;; Defined at:
  6008 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  sign            1    wreg     unsigned char 
  6011 ;;  val             4    0[COMRAM] long 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;  sign            1    8[COMRAM] unsigned char 
  6014 ;;  arg             4   10[COMRAM] unsigned long 
  6015 ;;  exp             1    9[COMRAM] unsigned char 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  4    0[COMRAM] unsigned char 
  6018 ;; Registers used:
  6019 ;;		wreg, status,2, status,0
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6025 ;;      Params:         4       0       0       0       0       0       0
  6026 ;;      Locals:         6       0       0       0       0       0       0
  6027 ;;      Temps:          4       0       0       0       0       0       0
  6028 ;;      Totals:        14       0       0       0       0       0       0
  6029 ;;Total ram usage:       14 bytes
  6030 ;; Hardware stack levels used: 1
  6031 ;; This function calls:
  6032 ;;		Nothing
  6033 ;; This function is called by:
  6034 ;;		_resfria
  6035 ;;		_aquece
  6036 ;;		_fecharPorta
  6037 ;;		_alerta
  6038 ;;		_perigo
  6039 ;;		_main
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043                           	psect	text30
  6044  00649E                     __ptext30:
  6045                           	callstack 0
  6046  00649E                     ___xxtofl:
  6047                           	callstack 29
  6048                           
  6049                           ;incstack = 0
  6050                           ;___xxtofl@sign stored from wreg
  6051  00649E  6E09               	movwf	___xxtofl@sign^0,c
  6052  0064A0  5009               	movf	___xxtofl@sign^0,w,c
  6053  0064A2  B4D8               	btfsc	status,2,c
  6054  0064A4  EF56  F032         	goto	u4661
  6055  0064A8  EF58  F032         	goto	u4660
  6056  0064AC                     u4661:
  6057  0064AC  EF7A  F032         	goto	l1168
  6058  0064B0                     u4660:
  6059  0064B0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6060  0064B2  EF5F  F032         	goto	u4670
  6061  0064B6  EF5D  F032         	goto	u4671
  6062  0064BA                     u4671:
  6063  0064BA  EF7A  F032         	goto	l1168
  6064  0064BE                     u4670:
  6065  0064BE  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6066  0064C2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6067  0064C6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6068  0064CA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6069  0064CE  1E05               	comf	??___xxtofl^0,f,c
  6070  0064D0  1E06               	comf	(??___xxtofl+1)^0,f,c
  6071  0064D2  1E07               	comf	(??___xxtofl+2)^0,f,c
  6072  0064D4  1E08               	comf	(??___xxtofl+3)^0,f,c
  6073  0064D6  2A05               	incf	??___xxtofl^0,f,c
  6074  0064D8  0E00               	movlw	0
  6075  0064DA  2206               	addwfc	(??___xxtofl+1)^0,f,c
  6076  0064DC  2207               	addwfc	(??___xxtofl+2)^0,f,c
  6077  0064DE  2208               	addwfc	(??___xxtofl+3)^0,f,c
  6078  0064E0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6079  0064E4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6080  0064E8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6081  0064EC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6082  0064F0  EF82  F032         	goto	l4276
  6083  0064F4                     l1168:
  6084  0064F4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6085  0064F8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6086  0064FC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6087  006500  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6088  006504                     l4276:
  6089  006504  5001               	movf	___xxtofl@val^0,w,c
  6090  006506  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  6091  006508  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  6092  00650A  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  6093  00650C  A4D8               	btfss	status,2,c
  6094  00650E  EF8B  F032         	goto	u4681
  6095  006512  EF8D  F032         	goto	u4680
  6096  006516                     u4681:
  6097  006516  EF97  F032         	goto	l4282
  6098  00651A                     u4680:
  6099  00651A  0E00               	movlw	0
  6100  00651C  6E01               	movwf	?___xxtofl^0,c
  6101  00651E  0E00               	movlw	0
  6102  006520  6E02               	movwf	(?___xxtofl+1)^0,c
  6103  006522  0E00               	movlw	0
  6104  006524  6E03               	movwf	(?___xxtofl+2)^0,c
  6105  006526  0E00               	movlw	0
  6106  006528  6E04               	movwf	(?___xxtofl+3)^0,c
  6107  00652A  EF28  F033         	goto	l1171
  6108  00652E                     l4282:
  6109  00652E  0E96               	movlw	150
  6110  006530  6E0A               	movwf	___xxtofl@exp^0,c
  6111  006532  EFA1  F032         	goto	l4286
  6112  006536                     l4284:
  6113  006536  2A0A               	incf	___xxtofl@exp^0,f,c
  6114  006538  90D8               	bcf	status,0,c
  6115  00653A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6116  00653C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6117  00653E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6118  006540  320B               	rrcf	___xxtofl@arg^0,f,c
  6119  006542                     l4286:
  6120  006542  0E00               	movlw	0
  6121  006544  140B               	andwf	___xxtofl@arg^0,w,c
  6122  006546  6E05               	movwf	??___xxtofl^0,c
  6123  006548  0E00               	movlw	0
  6124  00654A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6125  00654C  6E06               	movwf	(??___xxtofl+1)^0,c
  6126  00654E  0E00               	movlw	0
  6127  006550  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6128  006552  6E07               	movwf	(??___xxtofl+2)^0,c
  6129  006554  0EFE               	movlw	254
  6130  006556  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6131  006558  6E08               	movwf	(??___xxtofl+3)^0,c
  6132  00655A  5005               	movf	??___xxtofl^0,w,c
  6133  00655C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6134  00655E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6135  006560  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6136  006562  A4D8               	btfss	status,2,c
  6137  006564  EFB6  F032         	goto	u4691
  6138  006568  EFB8  F032         	goto	u4690
  6139  00656C                     u4691:
  6140  00656C  EF9B  F032         	goto	l4284
  6141  006570                     u4690:
  6142  006570  EFC6  F032         	goto	l1175
  6143  006574                     l4288:
  6144  006574  2A0A               	incf	___xxtofl@exp^0,f,c
  6145  006576  0E01               	movlw	1
  6146  006578  260B               	addwf	___xxtofl@arg^0,f,c
  6147  00657A  0E00               	movlw	0
  6148  00657C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  6149  00657E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  6150  006580  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  6151  006582  90D8               	bcf	status,0,c
  6152  006584  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6153  006586  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6154  006588  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6155  00658A  320B               	rrcf	___xxtofl@arg^0,f,c
  6156  00658C                     l1175:
  6157  00658C  0E00               	movlw	0
  6158  00658E  140B               	andwf	___xxtofl@arg^0,w,c
  6159  006590  6E05               	movwf	??___xxtofl^0,c
  6160  006592  0E00               	movlw	0
  6161  006594  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6162  006596  6E06               	movwf	(??___xxtofl+1)^0,c
  6163  006598  0E00               	movlw	0
  6164  00659A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6165  00659C  6E07               	movwf	(??___xxtofl+2)^0,c
  6166  00659E  0EFF               	movlw	255
  6167  0065A0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6168  0065A2  6E08               	movwf	(??___xxtofl+3)^0,c
  6169  0065A4  5005               	movf	??___xxtofl^0,w,c
  6170  0065A6  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6171  0065A8  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6172  0065AA  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6173  0065AC  A4D8               	btfss	status,2,c
  6174  0065AE  EFDB  F032         	goto	u4701
  6175  0065B2  EFDD  F032         	goto	u4700
  6176  0065B6                     u4701:
  6177  0065B6  EFBA  F032         	goto	l4288
  6178  0065BA                     u4700:
  6179  0065BA  EFE5  F032         	goto	l4296
  6180  0065BE                     l4294:
  6181  0065BE  060A               	decf	___xxtofl@exp^0,f,c
  6182  0065C0  90D8               	bcf	status,0,c
  6183  0065C2  360B               	rlcf	___xxtofl@arg^0,f,c
  6184  0065C4  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  6185  0065C6  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  6186  0065C8  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  6187  0065CA                     l4296:
  6188  0065CA  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  6189  0065CC  EFEA  F032         	goto	u4711
  6190  0065D0  EFEC  F032         	goto	u4710
  6191  0065D4                     u4711:
  6192  0065D4  EFF4  F032         	goto	l1182
  6193  0065D8                     u4710:
  6194  0065D8  0E02               	movlw	2
  6195  0065DA  600A               	cpfslt	___xxtofl@exp^0,c
  6196  0065DC  EFF2  F032         	goto	u4721
  6197  0065E0  EFF4  F032         	goto	u4720
  6198  0065E4                     u4721:
  6199  0065E4  EFDF  F032         	goto	l4294
  6200  0065E8                     u4720:
  6201  0065E8                     l1182:
  6202  0065E8  B00A               	btfsc	___xxtofl@exp^0,0,c
  6203  0065EA  EFF9  F032         	goto	u4731
  6204  0065EE  EFFB  F032         	goto	u4730
  6205  0065F2                     u4731:
  6206  0065F2  EFFC  F032         	goto	l4302
  6207  0065F6                     u4730:
  6208  0065F6  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  6209  0065F8                     l4302:
  6210  0065F8  90D8               	bcf	status,0,c
  6211  0065FA  320A               	rrcf	___xxtofl@exp^0,f,c
  6212  0065FC  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6213  006600  6A06               	clrf	(??___xxtofl+1)^0,c
  6214  006602  6A07               	clrf	(??___xxtofl+2)^0,c
  6215  006604  6A08               	clrf	(??___xxtofl+3)^0,c
  6216  006606  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6217  00660A  6A07               	clrf	(??___xxtofl+2)^0,c
  6218  00660C  6A06               	clrf	(??___xxtofl+1)^0,c
  6219  00660E  6A05               	clrf	??___xxtofl^0,c
  6220  006610  5005               	movf	??___xxtofl^0,w,c
  6221  006612  120B               	iorwf	___xxtofl@arg^0,f,c
  6222  006614  5006               	movf	(??___xxtofl+1)^0,w,c
  6223  006616  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  6224  006618  5007               	movf	(??___xxtofl+2)^0,w,c
  6225  00661A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  6226  00661C  5008               	movf	(??___xxtofl+3)^0,w,c
  6227  00661E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  6228  006620  5009               	movf	___xxtofl@sign^0,w,c
  6229  006622  B4D8               	btfsc	status,2,c
  6230  006624  EF16  F033         	goto	u4741
  6231  006628  EF18  F033         	goto	u4740
  6232  00662C                     u4741:
  6233  00662C  EF20  F033         	goto	l4312
  6234  006630                     u4740:
  6235  006630  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6236  006632  EF1F  F033         	goto	u4750
  6237  006636  EF1D  F033         	goto	u4751
  6238  00663A                     u4751:
  6239  00663A  EF20  F033         	goto	l4312
  6240  00663E                     u4750:
  6241  00663E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  6242  006640                     l4312:
  6243  006640  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6244  006644  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6245  006648  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6246  00664C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6247  006650                     l1171:
  6248  006650  0012               	return		;funcret
  6249  006652                     __end_of___xxtofl:
  6250                           	callstack 0
  6251                           
  6252 ;; *************** function ___flmul *****************
  6253 ;; Defined at:
  6254 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  b               4   14[COMRAM] unsigned char 
  6257 ;;  a               4   18[COMRAM] unsigned char 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;  prod            4   33[COMRAM] struct .
  6260 ;;  grs             4   27[COMRAM] unsigned long 
  6261 ;;  temp            2   37[COMRAM] struct .
  6262 ;;  bexp            1   32[COMRAM] unsigned char 
  6263 ;;  aexp            1   31[COMRAM] unsigned char 
  6264 ;;  sign            1   26[COMRAM] unsigned char 
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  4   14[COMRAM] unsigned char 
  6267 ;; Registers used:
  6268 ;;		wreg, status,2, status,0, prodl, prodh
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6274 ;;      Params:         8       0       0       0       0       0       0
  6275 ;;      Locals:        13       0       0       0       0       0       0
  6276 ;;      Temps:          4       0       0       0       0       0       0
  6277 ;;      Totals:        25       0       0       0       0       0       0
  6278 ;;Total ram usage:       25 bytes
  6279 ;; Hardware stack levels used: 1
  6280 ;; This function calls:
  6281 ;;		Nothing
  6282 ;; This function is called by:
  6283 ;;		_imprime
  6284 ;;		_fecharPorta
  6285 ;;		_maxEmin
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288                           
  6289                           	psect	text31
  6290  0075A6                     __ptext31:
  6291                           	callstack 0
  6292  0075A6                     ___flmul:
  6293                           	callstack 29
  6294  0075A6  5012               	movf	(___flmul@b+3)^0,w,c
  6295  0075A8  0B80               	andlw	128
  6296  0075AA  6E1B               	movwf	___flmul@sign^0,c
  6297  0075AC  5012               	movf	(___flmul@b+3)^0,w,c
  6298  0075AE  2412               	addwf	(___flmul@b+3)^0,w,c
  6299  0075B0  6E21               	movwf	___flmul@bexp^0,c
  6300  0075B2  AE11               	btfss	(___flmul@b+2)^0,7,c
  6301  0075B4  EFDE  F03A         	goto	u4401
  6302  0075B8  EFE0  F03A         	goto	u4400
  6303  0075BC                     u4401:
  6304  0075BC  EFE1  F03A         	goto	l4096
  6305  0075C0                     u4400:
  6306  0075C0  8021               	bsf	___flmul@bexp^0,0,c
  6307  0075C2                     l4096:
  6308  0075C2  5021               	movf	___flmul@bexp^0,w,c
  6309  0075C4  B4D8               	btfsc	status,2,c
  6310  0075C6  EFE7  F03A         	goto	u4411
  6311  0075CA  EFE9  F03A         	goto	u4410
  6312  0075CE                     u4411:
  6313  0075CE  EFFC  F03A         	goto	l4104
  6314  0075D2                     u4410:
  6315  0075D2  2821               	incf	___flmul@bexp^0,w,c
  6316  0075D4  A4D8               	btfss	status,2,c
  6317  0075D6  EFEF  F03A         	goto	u4421
  6318  0075DA  EFF1  F03A         	goto	u4420
  6319  0075DE                     u4421:
  6320  0075DE  EFF9  F03A         	goto	l4102
  6321  0075E2                     u4420:
  6322  0075E2  0E00               	movlw	0
  6323  0075E4  6E0F               	movwf	___flmul@b^0,c
  6324  0075E6  0E00               	movlw	0
  6325  0075E8  6E10               	movwf	(___flmul@b+1)^0,c
  6326  0075EA  0E00               	movlw	0
  6327  0075EC  6E11               	movwf	(___flmul@b+2)^0,c
  6328  0075EE  0E00               	movlw	0
  6329  0075F0  6E12               	movwf	(___flmul@b+3)^0,c
  6330  0075F2                     l4102:
  6331  0075F2  8E11               	bsf	(___flmul@b+2)^0,7,c
  6332  0075F4  EF04  F03B         	goto	l4106
  6333  0075F8                     l4104:
  6334  0075F8  0E00               	movlw	0
  6335  0075FA  6E0F               	movwf	___flmul@b^0,c
  6336  0075FC  0E00               	movlw	0
  6337  0075FE  6E10               	movwf	(___flmul@b+1)^0,c
  6338  007600  0E00               	movlw	0
  6339  007602  6E11               	movwf	(___flmul@b+2)^0,c
  6340  007604  0E00               	movlw	0
  6341  007606  6E12               	movwf	(___flmul@b+3)^0,c
  6342  007608                     l4106:
  6343  007608  5016               	movf	(___flmul@a+3)^0,w,c
  6344  00760A  0B80               	andlw	128
  6345  00760C  1A1B               	xorwf	___flmul@sign^0,f,c
  6346  00760E  5016               	movf	(___flmul@a+3)^0,w,c
  6347  007610  2416               	addwf	(___flmul@a+3)^0,w,c
  6348  007612  6E20               	movwf	___flmul@aexp^0,c
  6349  007614  AE15               	btfss	(___flmul@a+2)^0,7,c
  6350  007616  EF0F  F03B         	goto	u4431
  6351  00761A  EF11  F03B         	goto	u4430
  6352  00761E                     u4431:
  6353  00761E  EF12  F03B         	goto	l4114
  6354  007622                     u4430:
  6355  007622  8020               	bsf	___flmul@aexp^0,0,c
  6356  007624                     l4114:
  6357  007624  5020               	movf	___flmul@aexp^0,w,c
  6358  007626  B4D8               	btfsc	status,2,c
  6359  007628  EF18  F03B         	goto	u4441
  6360  00762C  EF1A  F03B         	goto	u4440
  6361  007630                     u4441:
  6362  007630  EF2D  F03B         	goto	l4122
  6363  007634                     u4440:
  6364  007634  2820               	incf	___flmul@aexp^0,w,c
  6365  007636  A4D8               	btfss	status,2,c
  6366  007638  EF20  F03B         	goto	u4451
  6367  00763C  EF22  F03B         	goto	u4450
  6368  007640                     u4451:
  6369  007640  EF2A  F03B         	goto	l4120
  6370  007644                     u4450:
  6371  007644  0E00               	movlw	0
  6372  007646  6E13               	movwf	___flmul@a^0,c
  6373  007648  0E00               	movlw	0
  6374  00764A  6E14               	movwf	(___flmul@a+1)^0,c
  6375  00764C  0E00               	movlw	0
  6376  00764E  6E15               	movwf	(___flmul@a+2)^0,c
  6377  007650  0E00               	movlw	0
  6378  007652  6E16               	movwf	(___flmul@a+3)^0,c
  6379  007654                     l4120:
  6380  007654  8E15               	bsf	(___flmul@a+2)^0,7,c
  6381  007656  EF35  F03B         	goto	l1127
  6382  00765A                     l4122:
  6383  00765A  0E00               	movlw	0
  6384  00765C  6E13               	movwf	___flmul@a^0,c
  6385  00765E  0E00               	movlw	0
  6386  007660  6E14               	movwf	(___flmul@a+1)^0,c
  6387  007662  0E00               	movlw	0
  6388  007664  6E15               	movwf	(___flmul@a+2)^0,c
  6389  007666  0E00               	movlw	0
  6390  007668  6E16               	movwf	(___flmul@a+3)^0,c
  6391  00766A                     l1127:
  6392  00766A  5020               	movf	___flmul@aexp^0,w,c
  6393  00766C  B4D8               	btfsc	status,2,c
  6394  00766E  EF3B  F03B         	goto	u4461
  6395  007672  EF3D  F03B         	goto	u4460
  6396  007676                     u4461:
  6397  007676  EF45  F03B         	goto	l4126
  6398  00767A                     u4460:
  6399  00767A  5021               	movf	___flmul@bexp^0,w,c
  6400  00767C  A4D8               	btfss	status,2,c
  6401  00767E  EF43  F03B         	goto	u4471
  6402  007682  EF45  F03B         	goto	u4470
  6403  007686                     u4471:
  6404  007686  EF4F  F03B         	goto	l4130
  6405  00768A                     u4470:
  6406  00768A                     l4126:
  6407  00768A  0E00               	movlw	0
  6408  00768C  6E0F               	movwf	?___flmul^0,c
  6409  00768E  0E00               	movlw	0
  6410  007690  6E10               	movwf	(?___flmul+1)^0,c
  6411  007692  0E00               	movlw	0
  6412  007694  6E11               	movwf	(?___flmul+2)^0,c
  6413  007696  0E00               	movlw	0
  6414  007698  6E12               	movwf	(?___flmul+3)^0,c
  6415  00769A  EFE7  F03C         	goto	l1131
  6416  00769E                     l4130:
  6417  00769E  5015               	movf	(___flmul@a+2)^0,w,c
  6418  0076A0  020F               	mulwf	___flmul@b^0,c
  6419  0076A2  CFF3 F026          	movff	prodl,___flmul@temp
  6420  0076A6  CFF4 F027          	movff	prodh,___flmul@temp+1
  6421  0076AA  5026               	movf	___flmul@temp^0,w,c
  6422  0076AC  6E1C               	movwf	___flmul@grs^0,c
  6423  0076AE  6A1D               	clrf	(___flmul@grs+1)^0,c
  6424  0076B0  6A1E               	clrf	(___flmul@grs+2)^0,c
  6425  0076B2  6A1F               	clrf	(___flmul@grs+3)^0,c
  6426  0076B4  5027               	movf	(___flmul@temp+1)^0,w,c
  6427  0076B6  6E22               	movwf	___flmul@prod^0,c
  6428  0076B8  6A23               	clrf	(___flmul@prod+1)^0,c
  6429  0076BA  6A24               	clrf	(___flmul@prod+2)^0,c
  6430  0076BC  6A25               	clrf	(___flmul@prod+3)^0,c
  6431  0076BE  5014               	movf	(___flmul@a+1)^0,w,c
  6432  0076C0  0210               	mulwf	(___flmul@b+1)^0,c
  6433  0076C2  CFF3 F026          	movff	prodl,___flmul@temp
  6434  0076C6  CFF4 F027          	movff	prodh,___flmul@temp+1
  6435  0076CA  5026               	movf	___flmul@temp^0,w,c
  6436  0076CC  261C               	addwf	___flmul@grs^0,f,c
  6437  0076CE  0E00               	movlw	0
  6438  0076D0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6439  0076D2  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6440  0076D4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6441  0076D6  5027               	movf	(___flmul@temp+1)^0,w,c
  6442  0076D8  2622               	addwf	___flmul@prod^0,f,c
  6443  0076DA  0E00               	movlw	0
  6444  0076DC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6445  0076DE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6446  0076E0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6447  0076E2  5013               	movf	___flmul@a^0,w,c
  6448  0076E4  0211               	mulwf	(___flmul@b+2)^0,c
  6449  0076E6  CFF3 F026          	movff	prodl,___flmul@temp
  6450  0076EA  CFF4 F027          	movff	prodh,___flmul@temp+1
  6451  0076EE  5026               	movf	___flmul@temp^0,w,c
  6452  0076F0  261C               	addwf	___flmul@grs^0,f,c
  6453  0076F2  0E00               	movlw	0
  6454  0076F4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6455  0076F6  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6456  0076F8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6457  0076FA  5027               	movf	(___flmul@temp+1)^0,w,c
  6458  0076FC  2622               	addwf	___flmul@prod^0,f,c
  6459  0076FE  0E00               	movlw	0
  6460  007700  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6461  007702  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6462  007704  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6463  007706  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6464  00770A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6465  00770E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6466  007712  6A1C               	clrf	___flmul@grs^0,c
  6467  007714  5013               	movf	___flmul@a^0,w,c
  6468  007716  0210               	mulwf	(___flmul@b+1)^0,c
  6469  007718  CFF3 F026          	movff	prodl,___flmul@temp
  6470  00771C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6471  007720  5026               	movf	___flmul@temp^0,w,c
  6472  007722  261C               	addwf	___flmul@grs^0,f,c
  6473  007724  5027               	movf	(___flmul@temp+1)^0,w,c
  6474  007726  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6475  007728  0E00               	movlw	0
  6476  00772A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6477  00772C  0E00               	movlw	0
  6478  00772E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6479  007730  5014               	movf	(___flmul@a+1)^0,w,c
  6480  007732  020F               	mulwf	___flmul@b^0,c
  6481  007734  CFF3 F026          	movff	prodl,___flmul@temp
  6482  007738  CFF4 F027          	movff	prodh,___flmul@temp+1
  6483  00773C  5026               	movf	___flmul@temp^0,w,c
  6484  00773E  261C               	addwf	___flmul@grs^0,f,c
  6485  007740  5027               	movf	(___flmul@temp+1)^0,w,c
  6486  007742  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6487  007744  0E00               	movlw	0
  6488  007746  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6489  007748  0E00               	movlw	0
  6490  00774A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6491  00774C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6492  007750  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6493  007754  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6494  007758  6A1C               	clrf	___flmul@grs^0,c
  6495  00775A  5013               	movf	___flmul@a^0,w,c
  6496  00775C  020F               	mulwf	___flmul@b^0,c
  6497  00775E  CFF3 F026          	movff	prodl,___flmul@temp
  6498  007762  CFF4 F027          	movff	prodh,___flmul@temp+1
  6499  007766  5026               	movf	___flmul@temp^0,w,c
  6500  007768  261C               	addwf	___flmul@grs^0,f,c
  6501  00776A  5027               	movf	(___flmul@temp+1)^0,w,c
  6502  00776C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6503  00776E  0E00               	movlw	0
  6504  007770  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6505  007772  0E00               	movlw	0
  6506  007774  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6507  007776  5015               	movf	(___flmul@a+2)^0,w,c
  6508  007778  0210               	mulwf	(___flmul@b+1)^0,c
  6509  00777A  CFF3 F026          	movff	prodl,___flmul@temp
  6510  00777E  CFF4 F027          	movff	prodh,___flmul@temp+1
  6511  007782  5026               	movf	___flmul@temp^0,w,c
  6512  007784  2622               	addwf	___flmul@prod^0,f,c
  6513  007786  5027               	movf	(___flmul@temp+1)^0,w,c
  6514  007788  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6515  00778A  0E00               	movlw	0
  6516  00778C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6517  00778E  0E00               	movlw	0
  6518  007790  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6519  007792  5014               	movf	(___flmul@a+1)^0,w,c
  6520  007794  0211               	mulwf	(___flmul@b+2)^0,c
  6521  007796  CFF3 F026          	movff	prodl,___flmul@temp
  6522  00779A  CFF4 F027          	movff	prodh,___flmul@temp+1
  6523  00779E  5026               	movf	___flmul@temp^0,w,c
  6524  0077A0  2622               	addwf	___flmul@prod^0,f,c
  6525  0077A2  5027               	movf	(___flmul@temp+1)^0,w,c
  6526  0077A4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6527  0077A6  0E00               	movlw	0
  6528  0077A8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6529  0077AA  0E00               	movlw	0
  6530  0077AC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6531  0077AE  5015               	movf	(___flmul@a+2)^0,w,c
  6532  0077B0  0211               	mulwf	(___flmul@b+2)^0,c
  6533  0077B2  CFF3 F026          	movff	prodl,___flmul@temp
  6534  0077B6  CFF4 F027          	movff	prodh,___flmul@temp+1
  6535  0077BA  5026               	movf	___flmul@temp^0,w,c
  6536  0077BC  6E17               	movwf	??___flmul^0,c
  6537  0077BE  5027               	movf	(___flmul@temp+1)^0,w,c
  6538  0077C0  6E18               	movwf	(??___flmul+1)^0,c
  6539  0077C2  6A19               	clrf	(??___flmul+2)^0,c
  6540  0077C4  6A1A               	clrf	(??___flmul+3)^0,c
  6541  0077C6  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6542  0077CA  C018  F019         	movff	??___flmul+1,??___flmul+2
  6543  0077CE  C017  F018         	movff	??___flmul,??___flmul+1
  6544  0077D2  6A17               	clrf	??___flmul^0,c
  6545  0077D4  5017               	movf	??___flmul^0,w,c
  6546  0077D6  2622               	addwf	___flmul@prod^0,f,c
  6547  0077D8  5018               	movf	(??___flmul+1)^0,w,c
  6548  0077DA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6549  0077DC  5019               	movf	(??___flmul+2)^0,w,c
  6550  0077DE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6551  0077E0  501A               	movf	(??___flmul+3)^0,w,c
  6552  0077E2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6553  0077E4  C01C  F017         	movff	___flmul@grs,??___flmul
  6554  0077E8  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6555  0077EC  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6556  0077F0  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6557  0077F4  0E19               	movlw	25
  6558  0077F6  EF02  F03C         	goto	u4480
  6559  0077FA                     u4485:
  6560  0077FA  90D8               	bcf	status,0,c
  6561  0077FC  321A               	rrcf	(??___flmul+3)^0,f,c
  6562  0077FE  3219               	rrcf	(??___flmul+2)^0,f,c
  6563  007800  3218               	rrcf	(??___flmul+1)^0,f,c
  6564  007802  3217               	rrcf	??___flmul^0,f,c
  6565  007804                     u4480:
  6566  007804  2EE8               	decfsz	wreg,f,c
  6567  007806  EFFD  F03B         	goto	u4485
  6568  00780A  5017               	movf	??___flmul^0,w,c
  6569  00780C  2622               	addwf	___flmul@prod^0,f,c
  6570  00780E  5018               	movf	(??___flmul+1)^0,w,c
  6571  007810  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6572  007812  5019               	movf	(??___flmul+2)^0,w,c
  6573  007814  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6574  007816  501A               	movf	(??___flmul+3)^0,w,c
  6575  007818  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6576  00781A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6577  00781E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6578  007822  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6579  007826  6A1C               	clrf	___flmul@grs^0,c
  6580  007828  5020               	movf	___flmul@aexp^0,w,c
  6581  00782A  C021  F017         	movff	___flmul@bexp,??___flmul
  6582  00782E  6A18               	clrf	(??___flmul+1)^0,c
  6583  007830  2617               	addwf	??___flmul^0,f,c
  6584  007832  0E00               	movlw	0
  6585  007834  2218               	addwfc	(??___flmul+1)^0,f,c
  6586  007836  0E82               	movlw	130
  6587  007838  2417               	addwf	??___flmul^0,w,c
  6588  00783A  6E26               	movwf	___flmul@temp^0,c
  6589  00783C  0EFF               	movlw	255
  6590  00783E  2018               	addwfc	(??___flmul+1)^0,w,c
  6591  007840  6E27               	movwf	(___flmul@temp+1)^0,c
  6592  007842  EF38  F03C         	goto	l4178
  6593  007846                     l4172:
  6594  007846  90D8               	bcf	status,0,c
  6595  007848  3622               	rlcf	___flmul@prod^0,f,c
  6596  00784A  3623               	rlcf	(___flmul@prod+1)^0,f,c
  6597  00784C  3624               	rlcf	(___flmul@prod+2)^0,f,c
  6598  00784E  3625               	rlcf	(___flmul@prod+3)^0,f,c
  6599  007850  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6600  007852  EF2D  F03C         	goto	u4491
  6601  007856  EF2F  F03C         	goto	u4490
  6602  00785A                     u4491:
  6603  00785A  EF30  F03C         	goto	l1134
  6604  00785E                     u4490:
  6605  00785E  8022               	bsf	___flmul@prod^0,0,c
  6606  007860                     l1134:
  6607  007860  90D8               	bcf	status,0,c
  6608  007862  361C               	rlcf	___flmul@grs^0,f,c
  6609  007864  361D               	rlcf	(___flmul@grs+1)^0,f,c
  6610  007866  361E               	rlcf	(___flmul@grs+2)^0,f,c
  6611  007868  361F               	rlcf	(___flmul@grs+3)^0,f,c
  6612  00786A  0626               	decf	___flmul@temp^0,f,c
  6613  00786C  A0D8               	btfss	status,0,c
  6614  00786E  0627               	decf	(___flmul@temp+1)^0,f,c
  6615  007870                     l4178:
  6616  007870  AE24               	btfss	(___flmul@prod+2)^0,7,c
  6617  007872  EF3D  F03C         	goto	u4501
  6618  007876  EF3F  F03C         	goto	u4500
  6619  00787A                     u4501:
  6620  00787A  EF23  F03C         	goto	l4172
  6621  00787E                     u4500:
  6622  00787E  0E00               	movlw	0
  6623  007880  6E20               	movwf	___flmul@aexp^0,c
  6624  007882  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6625  007884  EF46  F03C         	goto	u4511
  6626  007888  EF48  F03C         	goto	u4510
  6627  00788C                     u4511:
  6628  00788C  EF6C  F03C         	goto	l1136
  6629  007890                     u4510:
  6630  007890  0EFF               	movlw	255
  6631  007892  141C               	andwf	___flmul@grs^0,w,c
  6632  007894  6E17               	movwf	??___flmul^0,c
  6633  007896  0EFF               	movlw	255
  6634  007898  141D               	andwf	(___flmul@grs+1)^0,w,c
  6635  00789A  6E18               	movwf	(??___flmul+1)^0,c
  6636  00789C  0EFF               	movlw	255
  6637  00789E  141E               	andwf	(___flmul@grs+2)^0,w,c
  6638  0078A0  6E19               	movwf	(??___flmul+2)^0,c
  6639  0078A2  0E7F               	movlw	127
  6640  0078A4  141F               	andwf	(___flmul@grs+3)^0,w,c
  6641  0078A6  6E1A               	movwf	(??___flmul+3)^0,c
  6642  0078A8  5017               	movf	??___flmul^0,w,c
  6643  0078AA  1018               	iorwf	(??___flmul+1)^0,w,c
  6644  0078AC  1019               	iorwf	(??___flmul+2)^0,w,c
  6645  0078AE  101A               	iorwf	(??___flmul+3)^0,w,c
  6646  0078B0  B4D8               	btfsc	status,2,c
  6647  0078B2  EF5D  F03C         	goto	u4521
  6648  0078B6  EF5F  F03C         	goto	u4520
  6649  0078BA                     u4521:
  6650  0078BA  EF63  F03C         	goto	l1137
  6651  0078BE                     u4520:
  6652  0078BE                     l4186:
  6653  0078BE  0E01               	movlw	1
  6654  0078C0  6E20               	movwf	___flmul@aexp^0,c
  6655  0078C2  EF6C  F03C         	goto	l1136
  6656  0078C6                     l1137:
  6657  0078C6  A022               	btfss	___flmul@prod^0,0,c
  6658  0078C8  EF68  F03C         	goto	u4531
  6659  0078CC  EF6A  F03C         	goto	u4530
  6660  0078D0                     u4531:
  6661  0078D0  EF6C  F03C         	goto	l1136
  6662  0078D4                     u4530:
  6663  0078D4  EF5F  F03C         	goto	l4186
  6664  0078D8                     l1136:
  6665  0078D8  5020               	movf	___flmul@aexp^0,w,c
  6666  0078DA  B4D8               	btfsc	status,2,c
  6667  0078DC  EF72  F03C         	goto	u4541
  6668  0078E0  EF74  F03C         	goto	u4540
  6669  0078E4                     u4541:
  6670  0078E4  EF98  F03C         	goto	l4198
  6671  0078E8                     u4540:
  6672  0078E8  0E01               	movlw	1
  6673  0078EA  2622               	addwf	___flmul@prod^0,f,c
  6674  0078EC  0E00               	movlw	0
  6675  0078EE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6676  0078F0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6677  0078F2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6678  0078F4  A025               	btfss	(___flmul@prod+3)^0,0,c
  6679  0078F6  EF7F  F03C         	goto	u4551
  6680  0078FA  EF81  F03C         	goto	u4550
  6681  0078FE                     u4551:
  6682  0078FE  EF98  F03C         	goto	l4198
  6683  007902                     u4550:
  6684  007902  C022  F017         	movff	___flmul@prod,??___flmul
  6685  007906  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6686  00790A  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6687  00790E  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6688  007912  341A               	rlcf	(??___flmul+3)^0,w,c
  6689  007914  321A               	rrcf	(??___flmul+3)^0,f,c
  6690  007916  3219               	rrcf	(??___flmul+2)^0,f,c
  6691  007918  3218               	rrcf	(??___flmul+1)^0,f,c
  6692  00791A  3217               	rrcf	??___flmul^0,f,c
  6693  00791C  C017  F022         	movff	??___flmul,___flmul@prod
  6694  007920  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6695  007924  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6696  007928  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6697  00792C  4A26               	infsnz	___flmul@temp^0,f,c
  6698  00792E  2A27               	incf	(___flmul@temp+1)^0,f,c
  6699  007930                     l4198:
  6700  007930  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6701  007932  EFA3  F03C         	goto	u4561
  6702  007936  5027               	movf	(___flmul@temp+1)^0,w,c
  6703  007938  E108               	bnz	u4560
  6704  00793A  2826               	incf	___flmul@temp^0,w,c
  6705  00793C  A0D8               	btfss	status,0,c
  6706  00793E  EFA3  F03C         	goto	u4561
  6707  007942  EFA5  F03C         	goto	u4560
  6708  007946                     u4561:
  6709  007946  EFAF  F03C         	goto	l4202
  6710  00794A                     u4560:
  6711  00794A  0E00               	movlw	0
  6712  00794C  6E22               	movwf	___flmul@prod^0,c
  6713  00794E  0E00               	movlw	0
  6714  007950  6E23               	movwf	(___flmul@prod+1)^0,c
  6715  007952  0E80               	movlw	128
  6716  007954  6E24               	movwf	(___flmul@prod+2)^0,c
  6717  007956  0E7F               	movlw	127
  6718  007958  6E25               	movwf	(___flmul@prod+3)^0,c
  6719  00795A  EFDD  F03C         	goto	l4214
  6720  00795E                     l4202:
  6721  00795E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6722  007960  EFBC  F03C         	goto	u4570
  6723  007964  5027               	movf	(___flmul@temp+1)^0,w,c
  6724  007966  E106               	bnz	u4571
  6725  007968  0426               	decf	___flmul@temp^0,w,c
  6726  00796A  B0D8               	btfsc	status,0,c
  6727  00796C  EFBA  F03C         	goto	u4571
  6728  007970  EFBC  F03C         	goto	u4570
  6729  007974                     u4571:
  6730  007974  EFC8  F03C         	goto	l1144
  6731  007978                     u4570:
  6732  007978  0E00               	movlw	0
  6733  00797A  6E22               	movwf	___flmul@prod^0,c
  6734  00797C  0E00               	movlw	0
  6735  00797E  6E23               	movwf	(___flmul@prod+1)^0,c
  6736  007980  0E00               	movlw	0
  6737  007982  6E24               	movwf	(___flmul@prod+2)^0,c
  6738  007984  0E00               	movlw	0
  6739  007986  6E25               	movwf	(___flmul@prod+3)^0,c
  6740  007988  0E00               	movlw	0
  6741  00798A  6E1B               	movwf	___flmul@sign^0,c
  6742  00798C  EFDD  F03C         	goto	l4214
  6743  007990                     l1144:
  6744  007990  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6745  007994  0EFF               	movlw	255
  6746  007996  1622               	andwf	___flmul@prod^0,f,c
  6747  007998  0EFF               	movlw	255
  6748  00799A  1623               	andwf	(___flmul@prod+1)^0,f,c
  6749  00799C  0E7F               	movlw	127
  6750  00799E  1624               	andwf	(___flmul@prod+2)^0,f,c
  6751  0079A0  0E00               	movlw	0
  6752  0079A2  1625               	andwf	(___flmul@prod+3)^0,f,c
  6753  0079A4  A021               	btfss	___flmul@bexp^0,0,c
  6754  0079A6  EFD7  F03C         	goto	u4581
  6755  0079AA  EFD9  F03C         	goto	u4580
  6756  0079AE                     u4581:
  6757  0079AE  EFDA  F03C         	goto	l4212
  6758  0079B2                     u4580:
  6759  0079B2  8E24               	bsf	(___flmul@prod+2)^0,7,c
  6760  0079B4                     l4212:
  6761  0079B4  90D8               	bcf	status,0,c
  6762  0079B6  3021               	rrcf	___flmul@bexp^0,w,c
  6763  0079B8  6E25               	movwf	(___flmul@prod+3)^0,c
  6764  0079BA                     l4214:
  6765  0079BA  501B               	movf	___flmul@sign^0,w,c
  6766  0079BC  1225               	iorwf	(___flmul@prod+3)^0,f,c
  6767  0079BE  C022  F00F         	movff	___flmul@prod,?___flmul
  6768  0079C2  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6769  0079C6  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6770  0079CA  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6771  0079CE                     l1131:
  6772  0079CE  0012               	return		;funcret
  6773  0079D0                     __end_of___flmul:
  6774                           	callstack 0
  6775                           
  6776 ;; *************** function _controleEstoque *****************
  6777 ;; Defined at:
  6778 ;;		line 70 in file "main.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;		None
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;  aux             2   21[COMRAM] int 
  6783 ;;  opc             2   19[COMRAM] unsigned int 
  6784 ;;  tecla           2   16[COMRAM] unsigned int 
  6785 ;;  i               1   18[COMRAM] unsigned char 
  6786 ;; Return value:  Size  Location     Type
  6787 ;;                  1    wreg      void 
  6788 ;; Registers used:
  6789 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6790 ;; Tracked objects:
  6791 ;;		On entry : 0/0
  6792 ;;		On exit  : 0/0
  6793 ;;		Unchanged: 0/0
  6794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6795 ;;      Params:         0       0       0       0       0       0       0
  6796 ;;      Locals:         7       0       0       0       0       0       0
  6797 ;;      Temps:          0       0       0       0       0       0       0
  6798 ;;      Totals:         7       0       0       0       0       0       0
  6799 ;;Total ram usage:        7 bytes
  6800 ;; Hardware stack levels used: 1
  6801 ;; Hardware stack levels required when called: 4
  6802 ;; This function calls:
  6803 ;;		_atraso_ms
  6804 ;;		_kpDebounce
  6805 ;;		_kpInit
  6806 ;;		_kpRead
  6807 ;;		_lcd_cmd
  6808 ;;		_lcd_str
  6809 ;;		_serial
  6810 ;;		_ssdEstoque
  6811 ;; This function is called by:
  6812 ;;		_main
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           	psect	text32
  6817  00682E                     __ptext32:
  6818                           	callstack 0
  6819  00682E                     _controleEstoque:
  6820                           	callstack 26
  6821  00682E                     
  6822                           ;main.c: 71:     unsigned int tecla = 16, opc = 0;
  6823  00682E  0E00               	movlw	0
  6824  006830  6E12               	movwf	(controleEstoque@tecla+1)^0,c
  6825  006832  0E10               	movlw	16
  6826  006834  6E11               	movwf	controleEstoque@tecla^0,c
  6827                           
  6828                           ;main.c: 72:     int aux = 0;
  6829  006836  0E00               	movlw	0
  6830  006838  6E17               	movwf	(controleEstoque@aux+1)^0,c
  6831  00683A  0E00               	movlw	0
  6832  00683C  6E16               	movwf	controleEstoque@aux^0,c
  6833  00683E                     
  6834                           ;main.c: 73:     char i;;main.c: 75:     lcd_cmd(0x01);
  6835  00683E  0E01               	movlw	1
  6836  006840  EC98  F024         	call	_lcd_cmd
  6837  006844                     
  6838                           ;main.c: 76:     lcd_cmd(0x80);
  6839  006844  0E80               	movlw	128
  6840  006846  EC98  F024         	call	_lcd_cmd
  6841  00684A                     
  6842                           ;main.c: 77:     lcd_str("ESTOQUE:");
  6843  00684A  0EC7               	movlw	low STR_5
  6844  00684C  6E08               	movwf	lcd_str@str^0,c
  6845  00684E  0E7F               	movlw	high STR_5
  6846  006850  6E09               	movwf	(lcd_str@str+1)^0,c
  6847  006852  ECFF  F024         	call	_lcd_str	;wreg free
  6848  006856                     
  6849                           ;main.c: 78:     lcd_cmd(0xC0);
  6850  006856  0EC0               	movlw	192
  6851  006858  EC98  F024         	call	_lcd_cmd
  6852  00685C                     
  6853                           ;main.c: 79:     lcd_str("6 - Retirar");
  6854  00685C  0E99               	movlw	low STR_6
  6855  00685E  6E08               	movwf	lcd_str@str^0,c
  6856  006860  0E7F               	movlw	high STR_6
  6857  006862  6E09               	movwf	(lcd_str@str+1)^0,c
  6858  006864  ECFF  F024         	call	_lcd_str	;wreg free
  6859  006868                     
  6860                           ;main.c: 80:     lcd_cmd(0x90);
  6861  006868  0E90               	movlw	144
  6862  00686A  EC98  F024         	call	_lcd_cmd
  6863  00686E                     
  6864                           ;main.c: 81:     lcd_str("7 - Adicionar");
  6865  00686E  0E65               	movlw	low STR_7
  6866  006870  6E08               	movwf	lcd_str@str^0,c
  6867  006872  0E7F               	movlw	high STR_7
  6868  006874  6E09               	movwf	(lcd_str@str+1)^0,c
  6869  006876  ECFF  F024         	call	_lcd_str	;wreg free
  6870  00687A                     
  6871                           ;main.c: 82:     lcd_cmd(0xD0);
  6872  00687A  0ED0               	movlw	208
  6873  00687C  EC98  F024         	call	_lcd_cmd
  6874  006880                     
  6875                           ;main.c: 83:     lcd_str("# - Cancelar");
  6876  006880  0E80               	movlw	low STR_8
  6877  006882  6E08               	movwf	lcd_str@str^0,c
  6878  006884  0E7F               	movlw	high STR_8
  6879  006886  6E09               	movwf	(lcd_str@str+1)^0,c
  6880  006888  ECFF  F024         	call	_lcd_str	;wreg free
  6881  00688C                     
  6882                           ;main.c: 84:     kpInit();
  6883  00688C  EC29  F024         	call	_kpInit	;wreg free
  6884  006890                     l4414:
  6885                           
  6886                           ;main.c: 86:         kpDebounce();
  6887  006890  EC39  F02F         	call	_kpDebounce	;wreg free
  6888  006894                     
  6889                           ;main.c: 87:         if (kpRead() != tecla) {
  6890  006894  EC2E  F024         	call	_kpRead	;wreg free
  6891  006898  5011               	movf	controleEstoque@tecla^0,w,c
  6892  00689A  1801               	xorwf	?_kpRead^0,w,c
  6893  00689C  E109               	bnz	u4760
  6894  00689E  5012               	movf	(controleEstoque@tecla+1)^0,w,c
  6895  0068A0  1802               	xorwf	(?_kpRead+1)^0,w,c
  6896  0068A2  B4D8               	btfsc	status,2,c
  6897  0068A4  EF56  F034         	goto	u4761
  6898  0068A8  EF58  F034         	goto	u4760
  6899  0068AC                     u4761:
  6900  0068AC  EF8B  F034         	goto	l4430
  6901  0068B0                     u4760:
  6902  0068B0                     
  6903                           ;main.c: 88:             tecla = kpRead();
  6904  0068B0  EC2E  F024         	call	_kpRead	;wreg free
  6905  0068B4  C001  F011         	movff	?_kpRead,controleEstoque@tecla
  6906  0068B8  C002  F012         	movff	?_kpRead+1,controleEstoque@tecla+1
  6907                           
  6908                           ;main.c: 89:             if (((kpRead()) & (1<<(10)))) {
  6909  0068BC  EC2E  F024         	call	_kpRead	;wreg free
  6910  0068C0  A402               	btfss	(?_kpRead+1)^0,2,c
  6911  0068C2  EF65  F034         	goto	u4771
  6912  0068C6  EF67  F034         	goto	u4770
  6913  0068CA                     u4771:
  6914  0068CA  EF6D  F034         	goto	l4422
  6915  0068CE                     u4770:
  6916  0068CE                     
  6917                           ;main.c: 90:                 opc = 1;
  6918  0068CE  0E00               	movlw	0
  6919  0068D0  6E15               	movwf	(controleEstoque@opc+1)^0,c
  6920  0068D2  0E01               	movlw	1
  6921  0068D4  6E14               	movwf	controleEstoque@opc^0,c
  6922                           
  6923                           ;main.c: 91:                 break;
  6924  0068D6  EF98  F034         	goto	l4440
  6925  0068DA                     l4422:
  6926                           
  6927                           ;main.c: 93:             if (((kpRead()) & (1<<(1)))) {
  6928  0068DA  EC2E  F024         	call	_kpRead	;wreg free
  6929  0068DE  A201               	btfss	?_kpRead^0,1,c
  6930  0068E0  EF74  F034         	goto	u4781
  6931  0068E4  EF76  F034         	goto	u4780
  6932  0068E8                     u4781:
  6933  0068E8  EF7C  F034         	goto	l4426
  6934  0068EC                     u4780:
  6935  0068EC                     
  6936                           ;main.c: 94:                 opc = 2;
  6937  0068EC  0E00               	movlw	0
  6938  0068EE  6E15               	movwf	(controleEstoque@opc+1)^0,c
  6939  0068F0  0E02               	movlw	2
  6940  0068F2  6E14               	movwf	controleEstoque@opc^0,c
  6941                           
  6942                           ;main.c: 95:                 break;
  6943  0068F4  EF98  F034         	goto	l4440
  6944  0068F8                     l4426:
  6945                           
  6946                           ;main.c: 97:             if (((kpRead()) & (1<<(8)))) {
  6947  0068F8  EC2E  F024         	call	_kpRead	;wreg free
  6948  0068FC  A002               	btfss	(?_kpRead+1)^0,0,c
  6949  0068FE  EF83  F034         	goto	u4791
  6950  006902  EF85  F034         	goto	u4790
  6951  006906                     u4791:
  6952  006906  EF8B  F034         	goto	l4430
  6953  00690A                     u4790:
  6954  00690A                     
  6955                           ;main.c: 98:                 opc = 0;
  6956  00690A  0E00               	movlw	0
  6957  00690C  6E15               	movwf	(controleEstoque@opc+1)^0,c
  6958  00690E  0E00               	movlw	0
  6959  006910  6E14               	movwf	controleEstoque@opc^0,c
  6960                           
  6961                           ;main.c: 99:                 break;
  6962  006912  EF98  F034         	goto	l4440
  6963  006916                     l4430:
  6964                           
  6965                           ;main.c: 102:         for (i = 0; i < 250; i++);
  6966  006916  0E00               	movlw	0
  6967  006918  6E13               	movwf	controleEstoque@i^0,c
  6968  00691A                     l4436:
  6969  00691A  2A13               	incf	controleEstoque@i^0,f,c
  6970  00691C  0EF9               	movlw	249
  6971  00691E  6413               	cpfsgt	controleEstoque@i^0,c
  6972  006920  EF94  F034         	goto	u4801
  6973  006924  EF96  F034         	goto	u4800
  6974  006928                     u4801:
  6975  006928  EF8D  F034         	goto	l4436
  6976  00692C                     u4800:
  6977  00692C  EF48  F034         	goto	l4414
  6978  006930                     l4440:
  6979                           
  6980                           ;main.c: 104:     if (opc != 0) {
  6981  006930  5014               	movf	controleEstoque@opc^0,w,c
  6982  006932  1015               	iorwf	(controleEstoque@opc+1)^0,w,c
  6983  006934  B4D8               	btfsc	status,2,c
  6984  006936  EF9F  F034         	goto	u4811
  6985  00693A  EFA1  F034         	goto	u4810
  6986  00693E                     u4811:
  6987  00693E  EF38  F035         	goto	l398
  6988  006942                     u4810:
  6989  006942                     
  6990                           ;main.c: 105:         lcd_cmd(0x01);
  6991  006942  0E01               	movlw	1
  6992  006944  EC98  F024         	call	_lcd_cmd
  6993                           
  6994                           ;main.c: 106:         lcd_cmd(0x80);
  6995  006948  0E80               	movlw	128
  6996  00694A  EC98  F024         	call	_lcd_cmd
  6997  00694E                     
  6998                           ;main.c: 107:         lcd_str("Maximo de 5 und.");
  6999  00694E  0EF6               	movlw	low STR_9
  7000  006950  6E08               	movwf	lcd_str@str^0,c
  7001  006952  0E7E               	movlw	high STR_9
  7002  006954  6E09               	movwf	(lcd_str@str+1)^0,c
  7003  006956  ECFF  F024         	call	_lcd_str	;wreg free
  7004  00695A                     
  7005                           ;main.c: 108:         lcd_cmd(0xC0);
  7006  00695A  0EC0               	movlw	192
  7007  00695C  EC98  F024         	call	_lcd_cmd
  7008                           
  7009                           ;main.c: 109:         lcd_str("por abertura.");
  7010  006960  0E57               	movlw	low STR_10
  7011  006962  6E08               	movwf	lcd_str@str^0,c
  7012  006964  0E7F               	movlw	high STR_10
  7013  006966  6E09               	movwf	(lcd_str@str+1)^0,c
  7014  006968  ECFF  F024         	call	_lcd_str	;wreg free
  7015  00696C                     
  7016                           ;main.c: 110:         lcd_cmd(0x90);
  7017  00696C  0E90               	movlw	144
  7018  00696E  EC98  F024         	call	_lcd_cmd
  7019  006972                     
  7020                           ;main.c: 111:         lcd_str("Digite a quanti-");
  7021  006972  0EE5               	movlw	low STR_11
  7022  006974  6E08               	movwf	lcd_str@str^0,c
  7023  006976  0E7E               	movlw	high STR_11
  7024  006978  6E09               	movwf	(lcd_str@str+1)^0,c
  7025  00697A  ECFF  F024         	call	_lcd_str	;wreg free
  7026                           
  7027                           ;main.c: 112:         lcd_cmd(0xD0);
  7028  00697E  0ED0               	movlw	208
  7029  006980  EC98  F024         	call	_lcd_cmd
  7030  006984                     
  7031                           ;main.c: 113:         lcd_str("dade no serial.");
  7032  006984  0E18               	movlw	low STR_12
  7033  006986  6E08               	movwf	lcd_str@str^0,c
  7034  006988  0E7F               	movlw	high STR_12
  7035  00698A  6E09               	movwf	(lcd_str@str+1)^0,c
  7036  00698C  ECFF  F024         	call	_lcd_str	;wreg free
  7037  006990                     
  7038                           ;main.c: 114:         aux = serial();
  7039  006990  ECB2  F029         	call	_serial	;wreg free
  7040  006994  C00D  F016         	movff	?_serial,controleEstoque@aux
  7041  006998  C00E  F017         	movff	?_serial+1,controleEstoque@aux+1
  7042  00699C                     
  7043                           ;main.c: 115:         if (aux < 0 || aux > 5) {
  7044  00699C  BE17               	btfsc	(controleEstoque@aux+1)^0,7,c
  7045  00699E  EFD3  F034         	goto	u4821
  7046  0069A2  EFD5  F034         	goto	u4820
  7047  0069A6                     u4821:
  7048  0069A6  EFE3  F034         	goto	l4460
  7049  0069AA                     u4820:
  7050  0069AA  BE17               	btfsc	(controleEstoque@aux+1)^0,7,c
  7051  0069AC  EFE1  F034         	goto	u4831
  7052  0069B0  5017               	movf	(controleEstoque@aux+1)^0,w,c
  7053  0069B2  E109               	bnz	u4830
  7054  0069B4  0E06               	movlw	6
  7055  0069B6  5C16               	subwf	controleEstoque@aux^0,w,c
  7056  0069B8  A0D8               	btfss	status,0,c
  7057  0069BA  EFE1  F034         	goto	u4831
  7058  0069BE  EFE3  F034         	goto	u4830
  7059  0069C2                     u4831:
  7060  0069C2  EFF9  F034         	goto	l4468
  7061  0069C6                     u4830:
  7062  0069C6                     l4460:
  7063                           
  7064                           ;main.c: 116:             lcd_cmd(0x01);
  7065  0069C6  0E01               	movlw	1
  7066  0069C8  EC98  F024         	call	_lcd_cmd
  7067                           
  7068                           ;main.c: 117:             lcd_cmd(0x80);
  7069  0069CC  0E80               	movlw	128
  7070  0069CE  EC98  F024         	call	_lcd_cmd
  7071  0069D2                     
  7072                           ;main.c: 118:             lcd_str("Valor invalido.");
  7073  0069D2  0E28               	movlw	low STR_3
  7074  0069D4  6E08               	movwf	lcd_str@str^0,c
  7075  0069D6  0E7F               	movlw	high STR_3
  7076  0069D8  6E09               	movwf	(lcd_str@str+1)^0,c
  7077  0069DA  ECFF  F024         	call	_lcd_str	;wreg free
  7078  0069DE                     
  7079                           ;main.c: 119:             atraso_ms(500);
  7080  0069DE  0E01               	movlw	1
  7081  0069E0  6E02               	movwf	(atraso_ms@valor+1)^0,c
  7082  0069E2  0EF4               	movlw	244
  7083  0069E4  6E01               	movwf	atraso_ms@valor^0,c
  7084  0069E6  EC29  F026         	call	_atraso_ms	;wreg free
  7085  0069EA                     
  7086                           ;main.c: 120:             opc = 0;
  7087  0069EA  0E00               	movlw	0
  7088  0069EC  6E15               	movwf	(controleEstoque@opc+1)^0,c
  7089  0069EE  0E00               	movlw	0
  7090  0069F0  6E14               	movwf	controleEstoque@opc^0,c
  7091  0069F2                     l4468:
  7092                           
  7093                           ;main.c: 122:         lcd_cmd(0x01);
  7094  0069F2  0E01               	movlw	1
  7095  0069F4  EC98  F024         	call	_lcd_cmd
  7096  0069F8                     
  7097                           ;main.c: 123:         if (opc == 1) {
  7098  0069F8  0414               	decf	controleEstoque@opc^0,w,c
  7099  0069FA  1015               	iorwf	(controleEstoque@opc+1)^0,w,c
  7100  0069FC  A4D8               	btfss	status,2,c
  7101  0069FE  EF03  F035         	goto	u4841
  7102  006A02  EF05  F035         	goto	u4840
  7103  006A06                     u4841:
  7104  006A06  EF28  F035         	goto	l394
  7105  006A0A                     u4840:
  7106  006A0A                     
  7107                           ;main.c: 125:             if (estoque < aux) {
  7108  006A0A  5016               	movf	controleEstoque@aux^0,w,c
  7109  006A0C  5C5D               	subwf	_estoque^0,w,c
  7110  006A0E  5017               	movf	(controleEstoque@aux+1)^0,w,c
  7111  006A10  585E               	subwfb	(_estoque+1)^0,w,c
  7112  006A12  B0D8               	btfsc	status,0,c
  7113  006A14  EF0E  F035         	goto	u4851
  7114  006A18  EF10  F035         	goto	u4850
  7115  006A1C                     u4851:
  7116  006A1C  EF24  F035         	goto	l4480
  7117  006A20                     u4850:
  7118  006A20                     
  7119                           ;main.c: 126:                 lcd_cmd(0x01);
  7120  006A20  0E01               	movlw	1
  7121  006A22  EC98  F024         	call	_lcd_cmd
  7122                           
  7123                           ;main.c: 127:                 lcd_cmd(0x80);
  7124  006A26  0E80               	movlw	128
  7125  006A28  EC98  F024         	call	_lcd_cmd
  7126  006A2C                     
  7127                           ;main.c: 128:                 lcd_str("#NAO HA VACINAS#");
  7128  006A2C  0ED4               	movlw	low STR_14
  7129  006A2E  6E08               	movwf	lcd_str@str^0,c
  7130  006A30  0E7E               	movlw	high STR_14
  7131  006A32  6E09               	movwf	(lcd_str@str+1)^0,c
  7132  006A34  ECFF  F024         	call	_lcd_str	;wreg free
  7133  006A38                     
  7134                           ;main.c: 129:                 atraso_ms(2000);
  7135  006A38  0E07               	movlw	7
  7136  006A3A  6E02               	movwf	(atraso_ms@valor+1)^0,c
  7137  006A3C  0ED0               	movlw	208
  7138  006A3E  6E01               	movwf	atraso_ms@valor^0,c
  7139  006A40  EC29  F026         	call	_atraso_ms	;wreg free
  7140                           
  7141                           ;main.c: 130:             } else
  7142  006A44  EF28  F035         	goto	l394
  7143  006A48                     l4480:
  7144                           
  7145                           ;main.c: 131:                 estoque -= aux;
  7146  006A48  5016               	movf	controleEstoque@aux^0,w,c
  7147  006A4A  5E5D               	subwf	_estoque^0,f,c
  7148  006A4C  5017               	movf	(controleEstoque@aux+1)^0,w,c
  7149  006A4E  5A5E               	subwfb	(_estoque+1)^0,f,c
  7150  006A50                     l394:
  7151                           
  7152                           ;main.c: 134:         if (opc == 2)
  7153  006A50  0E02               	movlw	2
  7154  006A52  1814               	xorwf	controleEstoque@opc^0,w,c
  7155  006A54  1015               	iorwf	(controleEstoque@opc+1)^0,w,c
  7156  006A56  A4D8               	btfss	status,2,c
  7157  006A58  EF30  F035         	goto	u4861
  7158  006A5C  EF32  F035         	goto	u4860
  7159  006A60                     u4861:
  7160  006A60  EF36  F035         	goto	l4484
  7161  006A64                     u4860:
  7162  006A64                     
  7163                           ;main.c: 135:             estoque += aux;
  7164  006A64  5016               	movf	controleEstoque@aux^0,w,c
  7165  006A66  265D               	addwf	_estoque^0,f,c
  7166  006A68  5017               	movf	(controleEstoque@aux+1)^0,w,c
  7167  006A6A  225E               	addwfc	(_estoque+1)^0,f,c
  7168  006A6C                     l4484:
  7169                           
  7170                           ;main.c: 137:         ssdEstoque();
  7171  006A6C  ECE9  F027         	call	_ssdEstoque	;wreg free
  7172  006A70                     l398:
  7173  006A70  0012               	return		;funcret
  7174  006A72                     __end_of_controleEstoque:
  7175                           	callstack 0
  7176                           
  7177 ;; *************** function _ssdEstoque *****************
  7178 ;; Defined at:
  7179 ;;		line 61 in file "main.c"
  7180 ;; Parameters:    Size  Location     Type
  7181 ;;		None
  7182 ;; Auto vars:     Size  Location     Type
  7183 ;;		None
  7184 ;; Return value:  Size  Location     Type
  7185 ;;                  1    wreg      void 
  7186 ;; Registers used:
  7187 ;;		wreg, status,2, status,0, cstack
  7188 ;; Tracked objects:
  7189 ;;		On entry : 0/0
  7190 ;;		On exit  : 0/0
  7191 ;;		Unchanged: 0/0
  7192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7193 ;;      Params:         0       0       0       0       0       0       0
  7194 ;;      Locals:         0       0       0       0       0       0       0
  7195 ;;      Temps:          0       0       0       0       0       0       0
  7196 ;;      Totals:         0       0       0       0       0       0       0
  7197 ;;Total ram usage:        0 bytes
  7198 ;; Hardware stack levels used: 1
  7199 ;; Hardware stack levels required when called: 1
  7200 ;; This function calls:
  7201 ;;		___lwdiv
  7202 ;;		___lwmod
  7203 ;;		_ssdDigit
  7204 ;; This function is called by:
  7205 ;;		_controleEstoque
  7206 ;;		_main
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           	psect	text33
  7211  004FD2                     __ptext33:
  7212                           	callstack 0
  7213  004FD2                     _ssdEstoque:
  7214                           	callstack 29
  7215  004FD2                     
  7216                           ;main.c: 62:     for (auxiliar = 0; auxiliar < 50; auxiliar++);
  7217  004FD2  0E00               	movlw	0
  7218  004FD4  6E60               	movwf	(_auxiliar+1)^0,c
  7219  004FD6  0E00               	movlw	0
  7220  004FD8  6E5F               	movwf	_auxiliar^0,c
  7221  004FDA                     l3940:
  7222  004FDA  4A5F               	infsnz	_auxiliar^0,f,c
  7223  004FDC  2A60               	incf	(_auxiliar+1)^0,f,c
  7224  004FDE  BE60               	btfsc	(_auxiliar+1)^0,7,c
  7225  004FE0  EFFB  F027         	goto	u4251
  7226  004FE4  5060               	movf	(_auxiliar+1)^0,w,c
  7227  004FE6  E109               	bnz	u4250
  7228  004FE8  0E32               	movlw	50
  7229  004FEA  5C5F               	subwf	_auxiliar^0,w,c
  7230  004FEC  A0D8               	btfss	status,0,c
  7231  004FEE  EFFB  F027         	goto	u4251
  7232  004FF2  EFFD  F027         	goto	u4250
  7233  004FF6                     u4251:
  7234  004FF6  EFED  F027         	goto	l3940
  7235  004FFA                     u4250:
  7236  004FFA                     
  7237                           ;main.c: 63:     ssdDigit(14, 0);
  7238  004FFA  0E00               	movlw	0
  7239  004FFC  6E0D               	movwf	ssdDigit@pos^0,c
  7240  004FFE  0E0E               	movlw	14
  7241  005000  ECCF  F025         	call	_ssdDigit
  7242                           
  7243                           ;main.c: 64:     ssdDigit(((estoque / 10) % 10), 2);
  7244  005004  0E02               	movlw	2
  7245  005006  6E0D               	movwf	ssdDigit@pos^0,c
  7246  005008  0E00               	movlw	0
  7247  00500A  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  7248  00500C  0E0A               	movlw	10
  7249  00500E  6E08               	movwf	___lwdiv@divisor^0,c
  7250  005010  C05D  F006         	movff	_estoque,___lwdiv@dividend
  7251  005014  C05E  F007         	movff	_estoque+1,___lwdiv@dividend+1
  7252  005018  EC2F  F027         	call	___lwdiv	;wreg free
  7253  00501C  C006  F001         	movff	?___lwdiv,___lwmod@dividend
  7254  005020  C007  F002         	movff	?___lwdiv+1,___lwmod@dividend+1
  7255  005024  0E00               	movlw	0
  7256  005026  6E04               	movwf	(___lwmod@divisor+1)^0,c
  7257  005028  0E0A               	movlw	10
  7258  00502A  6E03               	movwf	___lwmod@divisor^0,c
  7259  00502C  EC5B  F026         	call	___lwmod	;wreg free
  7260  005030  5001               	movf	?___lwmod^0,w,c
  7261  005032  ECCF  F025         	call	_ssdDigit
  7262                           
  7263                           ;main.c: 65:     ssdDigit(((estoque) % 10), 3);
  7264  005036  0E03               	movlw	3
  7265  005038  6E0D               	movwf	ssdDigit@pos^0,c
  7266  00503A  C05D  F001         	movff	_estoque,___lwmod@dividend
  7267  00503E  C05E  F002         	movff	_estoque+1,___lwmod@dividend+1
  7268  005042  0E00               	movlw	0
  7269  005044  6E04               	movwf	(___lwmod@divisor+1)^0,c
  7270  005046  0E0A               	movlw	10
  7271  005048  6E03               	movwf	___lwmod@divisor^0,c
  7272  00504A  EC5B  F026         	call	___lwmod	;wreg free
  7273  00504E  5001               	movf	?___lwmod^0,w,c
  7274  005050  ECCF  F025         	call	_ssdDigit
  7275  005054  0012               	return		;funcret
  7276  005056                     __end_of_ssdEstoque:
  7277                           	callstack 0
  7278                           
  7279 ;; *************** function _ssdDigit *****************
  7280 ;; Defined at:
  7281 ;;		line 38 in file "ssd.c"
  7282 ;; Parameters:    Size  Location     Type
  7283 ;;  val             1    wreg     unsigned char 
  7284 ;;  pos             1   12[COMRAM] unsigned char 
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;  val             1   13[COMRAM] unsigned char 
  7287 ;; Return value:  Size  Location     Type
  7288 ;;                  1    wreg      void 
  7289 ;; Registers used:
  7290 ;;		wreg, status,2, status,0
  7291 ;; Tracked objects:
  7292 ;;		On entry : 0/0
  7293 ;;		On exit  : 0/0
  7294 ;;		Unchanged: 0/0
  7295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7296 ;;      Params:         1       0       0       0       0       0       0
  7297 ;;      Locals:         1       0       0       0       0       0       0
  7298 ;;      Temps:          0       0       0       0       0       0       0
  7299 ;;      Totals:         2       0       0       0       0       0       0
  7300 ;;Total ram usage:        2 bytes
  7301 ;; Hardware stack levels used: 1
  7302 ;; This function calls:
  7303 ;;		Nothing
  7304 ;; This function is called by:
  7305 ;;		_ssdEstoque
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           	psect	text34
  7310  004B9E                     __ptext34:
  7311                           	callstack 0
  7312  004B9E                     _ssdDigit:
  7313                           	callstack 29
  7314                           
  7315                           ;incstack = 0
  7316                           ;ssdDigit@val stored from wreg
  7317  004B9E  6E0E               	movwf	ssdDigit@val^0,c
  7318  004BA0                     
  7319                           ;ssd.c: 39:     if (pos == 0) {
  7320  004BA0  500D               	movf	ssdDigit@pos^0,w,c
  7321  004BA2  A4D8               	btfss	status,2,c
  7322  004BA4  EFD6  F025         	goto	u2991
  7323  004BA8  EFD8  F025         	goto	u2990
  7324  004BAC                     u2991:
  7325  004BAC  EFDA  F025         	goto	l3248
  7326  004BB0                     u2990:
  7327  004BB0                     
  7328                           ;ssd.c: 40:         v0 = val;
  7329  004BB0  C00E  F06A         	movff	ssdDigit@val,_v0
  7330  004BB4                     l3248:
  7331                           
  7332                           ;ssd.c: 42:     if (pos == 1) {
  7333  004BB4  040D               	decf	ssdDigit@pos^0,w,c
  7334  004BB6  A4D8               	btfss	status,2,c
  7335  004BB8  EFE0  F025         	goto	u3001
  7336  004BBC  EFE2  F025         	goto	u3000
  7337  004BC0                     u3001:
  7338  004BC0  EFE4  F025         	goto	l3252
  7339  004BC4                     u3000:
  7340  004BC4                     
  7341                           ;ssd.c: 43:         v1 = val;
  7342  004BC4  C00E  F069         	movff	ssdDigit@val,_v1
  7343  004BC8                     l3252:
  7344                           
  7345                           ;ssd.c: 45:     if (pos == 2) {
  7346  004BC8  0E02               	movlw	2
  7347  004BCA  180D               	xorwf	ssdDigit@pos^0,w,c
  7348  004BCC  A4D8               	btfss	status,2,c
  7349  004BCE  EFEB  F025         	goto	u3011
  7350  004BD2  EFED  F025         	goto	u3010
  7351  004BD6                     u3011:
  7352  004BD6  EFEF  F025         	goto	l3256
  7353  004BDA                     u3010:
  7354  004BDA                     
  7355                           ;ssd.c: 46:         v2 = val;
  7356  004BDA  C00E  F068         	movff	ssdDigit@val,_v2
  7357  004BDE                     l3256:
  7358                           
  7359                           ;ssd.c: 48:     if (pos == 3) {
  7360  004BDE  0E03               	movlw	3
  7361  004BE0  180D               	xorwf	ssdDigit@pos^0,w,c
  7362  004BE2  A4D8               	btfss	status,2,c
  7363  004BE4  EFF6  F025         	goto	u3021
  7364  004BE8  EFF8  F025         	goto	u3020
  7365  004BEC                     u3021:
  7366  004BEC  EFFA  F025         	goto	l219
  7367  004BF0                     u3020:
  7368  004BF0                     
  7369                           ;ssd.c: 49:         v3 = val;
  7370  004BF0  C00E  F067         	movff	ssdDigit@val,_v3
  7371  004BF4                     l219:
  7372  004BF4  0012               	return		;funcret
  7373  004BF6                     __end_of_ssdDigit:
  7374                           	callstack 0
  7375                           
  7376 ;; *************** function ___lwmod *****************
  7377 ;; Defined at:
  7378 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  dividend        2    0[COMRAM] unsigned int 
  7381 ;;  divisor         2    2[COMRAM] unsigned int 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  counter         1    4[COMRAM] unsigned char 
  7384 ;; Return value:  Size  Location     Type
  7385 ;;                  2    0[COMRAM] unsigned int 
  7386 ;; Registers used:
  7387 ;;		wreg, status,2, status,0
  7388 ;; Tracked objects:
  7389 ;;		On entry : 0/0
  7390 ;;		On exit  : 0/0
  7391 ;;		Unchanged: 0/0
  7392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7393 ;;      Params:         4       0       0       0       0       0       0
  7394 ;;      Locals:         1       0       0       0       0       0       0
  7395 ;;      Temps:          0       0       0       0       0       0       0
  7396 ;;      Totals:         5       0       0       0       0       0       0
  7397 ;;Total ram usage:        5 bytes
  7398 ;; Hardware stack levels used: 1
  7399 ;; This function calls:
  7400 ;;		Nothing
  7401 ;; This function is called by:
  7402 ;;		_itoa
  7403 ;;		_ssdEstoque
  7404 ;; This function uses a non-reentrant model
  7405 ;;
  7406                           
  7407                           	psect	text35
  7408  004CB6                     __ptext35:
  7409                           	callstack 0
  7410  004CB6                     ___lwmod:
  7411                           	callstack 29
  7412  004CB6  5003               	movf	___lwmod@divisor^0,w,c
  7413  004CB8  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  7414  004CBA  B4D8               	btfsc	status,2,c
  7415  004CBC  EF62  F026         	goto	u3861
  7416  004CC0  EF64  F026         	goto	u3860
  7417  004CC4                     u3861:
  7418  004CC4  EF88  F026         	goto	l1014
  7419  004CC8                     u3860:
  7420  004CC8  0E01               	movlw	1
  7421  004CCA  6E05               	movwf	___lwmod@counter^0,c
  7422  004CCC  EF6C  F026         	goto	l3732
  7423  004CD0                     l3730:
  7424  004CD0  90D8               	bcf	status,0,c
  7425  004CD2  3603               	rlcf	___lwmod@divisor^0,f,c
  7426  004CD4  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  7427  004CD6  2A05               	incf	___lwmod@counter^0,f,c
  7428  004CD8                     l3732:
  7429  004CD8  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  7430  004CDA  EF71  F026         	goto	u3871
  7431  004CDE  EF73  F026         	goto	u3870
  7432  004CE2                     u3871:
  7433  004CE2  EF68  F026         	goto	l3730
  7434  004CE6                     u3870:
  7435  004CE6                     l3734:
  7436  004CE6  5003               	movf	___lwmod@divisor^0,w,c
  7437  004CE8  5C01               	subwf	___lwmod@dividend^0,w,c
  7438  004CEA  5004               	movf	(___lwmod@divisor+1)^0,w,c
  7439  004CEC  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  7440  004CEE  A0D8               	btfss	status,0,c
  7441  004CF0  EF7C  F026         	goto	u3881
  7442  004CF4  EF7E  F026         	goto	u3880
  7443  004CF8                     u3881:
  7444  004CF8  EF82  F026         	goto	l3738
  7445  004CFC                     u3880:
  7446  004CFC  5003               	movf	___lwmod@divisor^0,w,c
  7447  004CFE  5E01               	subwf	___lwmod@dividend^0,f,c
  7448  004D00  5004               	movf	(___lwmod@divisor+1)^0,w,c
  7449  004D02  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  7450  004D04                     l3738:
  7451  004D04  90D8               	bcf	status,0,c
  7452  004D06  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  7453  004D08  3203               	rrcf	___lwmod@divisor^0,f,c
  7454  004D0A  2E05               	decfsz	___lwmod@counter^0,f,c
  7455  004D0C  EF73  F026         	goto	l3734
  7456  004D10                     l1014:
  7457  004D10  C001  F001         	movff	___lwmod@dividend,?___lwmod
  7458  004D14  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  7459  004D18  0012               	return		;funcret
  7460  004D1A                     __end_of___lwmod:
  7461                           	callstack 0
  7462                           
  7463 ;; *************** function ___lwdiv *****************
  7464 ;; Defined at:
  7465 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;  dividend        2    5[COMRAM] unsigned int 
  7468 ;;  divisor         2    7[COMRAM] unsigned int 
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;  quotient        2    9[COMRAM] unsigned int 
  7471 ;;  counter         1   11[COMRAM] unsigned char 
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  2    5[COMRAM] unsigned int 
  7474 ;; Registers used:
  7475 ;;		wreg, status,2, status,0
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7481 ;;      Params:         4       0       0       0       0       0       0
  7482 ;;      Locals:         3       0       0       0       0       0       0
  7483 ;;      Temps:          0       0       0       0       0       0       0
  7484 ;;      Totals:         7       0       0       0       0       0       0
  7485 ;;Total ram usage:        7 bytes
  7486 ;; Hardware stack levels used: 1
  7487 ;; This function calls:
  7488 ;;		Nothing
  7489 ;; This function is called by:
  7490 ;;		_pwmSet1
  7491 ;;		_itoa
  7492 ;;		_ssdEstoque
  7493 ;;		_pwmSet2
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497                           	psect	text36
  7498  004E5E                     __ptext36:
  7499                           	callstack 0
  7500  004E5E                     ___lwdiv:
  7501                           	callstack 29
  7502  004E5E  0E00               	movlw	0
  7503  004E60  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  7504  004E62  0E00               	movlw	0
  7505  004E64  6E0A               	movwf	___lwdiv@quotient^0,c
  7506  004E66  5008               	movf	___lwdiv@divisor^0,w,c
  7507  004E68  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7508  004E6A  B4D8               	btfsc	status,2,c
  7509  004E6C  EF3A  F027         	goto	u3831
  7510  004E70  EF3C  F027         	goto	u3830
  7511  004E74                     u3831:
  7512  004E74  EF64  F027         	goto	l1004
  7513  004E78                     u3830:
  7514  004E78  0E01               	movlw	1
  7515  004E7A  6E0C               	movwf	___lwdiv@counter^0,c
  7516  004E7C  EF44  F027         	goto	l3712
  7517  004E80                     l3710:
  7518  004E80  90D8               	bcf	status,0,c
  7519  004E82  3608               	rlcf	___lwdiv@divisor^0,f,c
  7520  004E84  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7521  004E86  2A0C               	incf	___lwdiv@counter^0,f,c
  7522  004E88                     l3712:
  7523  004E88  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  7524  004E8A  EF49  F027         	goto	u3841
  7525  004E8E  EF4B  F027         	goto	u3840
  7526  004E92                     u3841:
  7527  004E92  EF40  F027         	goto	l3710
  7528  004E96                     u3840:
  7529  004E96                     l3714:
  7530  004E96  90D8               	bcf	status,0,c
  7531  004E98  360A               	rlcf	___lwdiv@quotient^0,f,c
  7532  004E9A  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7533  004E9C  5008               	movf	___lwdiv@divisor^0,w,c
  7534  004E9E  5C06               	subwf	___lwdiv@dividend^0,w,c
  7535  004EA0  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  7536  004EA2  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7537  004EA4  A0D8               	btfss	status,0,c
  7538  004EA6  EF57  F027         	goto	u3851
  7539  004EAA  EF59  F027         	goto	u3850
  7540  004EAE                     u3851:
  7541  004EAE  EF5E  F027         	goto	l3722
  7542  004EB2                     u3850:
  7543  004EB2  5008               	movf	___lwdiv@divisor^0,w,c
  7544  004EB4  5E06               	subwf	___lwdiv@dividend^0,f,c
  7545  004EB6  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  7546  004EB8  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7547  004EBA  800A               	bsf	___lwdiv@quotient^0,0,c
  7548  004EBC                     l3722:
  7549  004EBC  90D8               	bcf	status,0,c
  7550  004EBE  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7551  004EC0  3208               	rrcf	___lwdiv@divisor^0,f,c
  7552  004EC2  2E0C               	decfsz	___lwdiv@counter^0,f,c
  7553  004EC4  EF4B  F027         	goto	l3714
  7554  004EC8                     l1004:
  7555  004EC8  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  7556  004ECC  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7557  004ED0  0012               	return		;funcret
  7558  004ED2                     __end_of___lwdiv:
  7559                           	callstack 0
  7560                           
  7561 ;; *************** function _serial *****************
  7562 ;; Defined at:
  7563 ;;		line 34 in file "main.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;		None
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;  tmp             1   15[COMRAM] unsigned char 
  7568 ;;  i               1   14[COMRAM] unsigned char 
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  2   12[COMRAM] int 
  7571 ;; Registers used:
  7572 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7578 ;;      Params:         2       0       0       0       0       0       0
  7579 ;;      Locals:         2       0       0       0       0       0       0
  7580 ;;      Temps:          0       0       0       0       0       0       0
  7581 ;;      Totals:         4       0       0       0       0       0       0
  7582 ;;Total ram usage:        4 bytes
  7583 ;; Hardware stack levels used: 1
  7584 ;; Hardware stack levels required when called: 3
  7585 ;; This function calls:
  7586 ;;		_atraso_ms
  7587 ;;		_lcd_cmd
  7588 ;;		_lcd_str
  7589 ;;		_serial_rx
  7590 ;;		_serial_tx
  7591 ;;		_serial_tx_str
  7592 ;; This function is called by:
  7593 ;;		_controleEstoque
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597                           	psect	text37
  7598  005364                     __ptext37:
  7599                           	callstack 0
  7600  005364                     _serial:
  7601                           	callstack 26
  7602  005364                     
  7603                           ;main.c: 35:     char i;;main.c: 36:     unsigned char tmp = 10;
  7604  005364  0E0A               	movlw	10
  7605  005366  6E10               	movwf	serial@tmp^0,c
  7606  005368                     
  7607                           ;main.c: 37:     atraso_ms(2000);
  7608  005368  0E07               	movlw	7
  7609  00536A  6E02               	movwf	(atraso_ms@valor+1)^0,c
  7610  00536C  0ED0               	movlw	208
  7611  00536E  6E01               	movwf	atraso_ms@valor^0,c
  7612  005370  EC29  F026         	call	_atraso_ms	;wreg free
  7613                           
  7614                           ;main.c: 38:     while (tmp > 9) {
  7615  005374  EFFC  F029         	goto	l3924
  7616  005378                     l3898:
  7617                           
  7618                           ;main.c: 39:         serial_tx_str(" Digite:\r\n");
  7619  005378  0EB1               	movlw	low STR_1
  7620  00537A  6E02               	movwf	serial_tx_str@val^0,c
  7621  00537C  0E7F               	movlw	high STR_1
  7622  00537E  6E03               	movwf	(serial_tx_str@val+1)^0,c
  7623  005380  EC27  F025         	call	_serial_tx_str	;wreg free
  7624  005384                     
  7625                           ;main.c: 40:         lcd_cmd(0x01);
  7626  005384  0E01               	movlw	1
  7627  005386  EC98  F024         	call	_lcd_cmd
  7628  00538A                     
  7629                           ;main.c: 41:         lcd_cmd(0x80);
  7630  00538A  0E80               	movlw	128
  7631  00538C  EC98  F024         	call	_lcd_cmd
  7632                           
  7633                           ;main.c: 42:         lcd_str("Digite:");
  7634  005390  0EE1               	movlw	low STR_2
  7635  005392  6E08               	movwf	lcd_str@str^0,c
  7636  005394  0E7F               	movlw	high STR_2
  7637  005396  6E09               	movwf	(lcd_str@str+1)^0,c
  7638  005398  ECFF  F024         	call	_lcd_str	;wreg free
  7639  00539C                     
  7640                           ;main.c: 43:         for (i = 0; i < 16; i++) {
  7641  00539C  0E00               	movlw	0
  7642  00539E  6E0F               	movwf	serial@i^0,c
  7643  0053A0                     l3910:
  7644                           
  7645                           ;main.c: 44:             tmp = serial_rx(2000);
  7646  0053A0  0E07               	movlw	7
  7647  0053A2  6E08               	movwf	(serial_rx@timeout+1)^0,c
  7648  0053A4  0ED0               	movlw	208
  7649  0053A6  6E07               	movwf	serial_rx@timeout^0,c
  7650  0053A8  EC2B  F028         	call	_serial_rx	;wreg free
  7651  0053AC  6E10               	movwf	serial@tmp^0,c
  7652  0053AE                     
  7653                           ;main.c: 45:         }
  7654  0053AE  2A0F               	incf	serial@i^0,f,c
  7655  0053B0  0E0F               	movlw	15
  7656  0053B2  640F               	cpfsgt	serial@i^0,c
  7657  0053B4  EFDE  F029         	goto	u4221
  7658  0053B8  EFE0  F029         	goto	u4220
  7659  0053BC                     u4221:
  7660  0053BC  EFD0  F029         	goto	l3910
  7661  0053C0                     u4220:
  7662  0053C0                     
  7663                           ;main.c: 46:         tmp -= 48;
  7664  0053C0  0E30               	movlw	48
  7665  0053C2  5E10               	subwf	serial@tmp^0,f,c
  7666                           
  7667                           ;main.c: 47:         if (tmp < 0 || tmp > 9) {
  7668  0053C4  0E09               	movlw	9
  7669  0053C6  6410               	cpfsgt	serial@tmp^0,c
  7670  0053C8  EFE8  F029         	goto	u4231
  7671  0053CC  EFEA  F029         	goto	u4230
  7672  0053D0                     u4231:
  7673  0053D0  EFFC  F029         	goto	l3924
  7674  0053D4                     u4230:
  7675  0053D4                     
  7676                           ;main.c: 48:             lcd_cmd(0x01);
  7677  0053D4  0E01               	movlw	1
  7678  0053D6  EC98  F024         	call	_lcd_cmd
  7679                           
  7680                           ;main.c: 49:             lcd_cmd(0x80);
  7681  0053DA  0E80               	movlw	128
  7682  0053DC  EC98  F024         	call	_lcd_cmd
  7683  0053E0                     
  7684                           ;main.c: 50:             lcd_str("Valor invalido.");
  7685  0053E0  0E28               	movlw	low STR_3
  7686  0053E2  6E08               	movwf	lcd_str@str^0,c
  7687  0053E4  0E7F               	movlw	high STR_3
  7688  0053E6  6E09               	movwf	(lcd_str@str+1)^0,c
  7689  0053E8  ECFF  F024         	call	_lcd_str	;wreg free
  7690  0053EC                     
  7691                           ;main.c: 51:             atraso_ms(500);
  7692  0053EC  0E01               	movlw	1
  7693  0053EE  6E02               	movwf	(atraso_ms@valor+1)^0,c
  7694  0053F0  0EF4               	movlw	244
  7695  0053F2  6E01               	movwf	atraso_ms@valor^0,c
  7696  0053F4  EC29  F026         	call	_atraso_ms	;wreg free
  7697  0053F8                     l3924:
  7698                           
  7699                           ;main.c: 38:     while (tmp > 9) {
  7700  0053F8  0E0A               	movlw	10
  7701  0053FA  6010               	cpfslt	serial@tmp^0,c
  7702  0053FC  EF02  F02A         	goto	u4241
  7703  005400  EF04  F02A         	goto	u4240
  7704  005404                     u4241:
  7705  005404  EFBC  F029         	goto	l3898
  7706  005408                     u4240:
  7707  005408                     
  7708                           ;main.c: 54:     serial_tx_str("FIM");
  7709  005408  0EF8               	movlw	low STR_4
  7710  00540A  6E02               	movwf	serial_tx_str@val^0,c
  7711  00540C  0E7F               	movlw	high STR_4
  7712  00540E  6E03               	movwf	(serial_tx_str@val+1)^0,c
  7713  005410  EC27  F025         	call	_serial_tx_str	;wreg free
  7714  005414                     
  7715                           ;main.c: 55:     serial_tx(tmp);
  7716  005414  5010               	movf	serial@tmp^0,w,c
  7717  005416  EC4D  F024         	call	_serial_tx
  7718  00541A                     
  7719                           ;main.c: 56:     return (int) tmp;
  7720  00541A  C010  F00D         	movff	serial@tmp,?_serial
  7721  00541E  6A0E               	clrf	(?_serial+1)^0,c
  7722  005420  0012               	return		;funcret
  7723  005422                     __end_of_serial:
  7724                           	callstack 0
  7725                           
  7726 ;; *************** function _serial_tx_str *****************
  7727 ;; Defined at:
  7728 ;;		line 56 in file "serial.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  val             2    1[COMRAM] PTR const unsigned char 
  7731 ;;		 -> STR_4(4), STR_1(11), 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  i               1    5[COMRAM] unsigned char 
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  1    wreg      void 
  7736 ;; Registers used:
  7737 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7743 ;;      Params:         2       0       0       0       0       0       0
  7744 ;;      Locals:         1       0       0       0       0       0       0
  7745 ;;      Temps:          2       0       0       0       0       0       0
  7746 ;;      Totals:         5       0       0       0       0       0       0
  7747 ;;Total ram usage:        5 bytes
  7748 ;; Hardware stack levels used: 1
  7749 ;; Hardware stack levels required when called: 1
  7750 ;; This function calls:
  7751 ;;		_serial_tx
  7752 ;; This function is called by:
  7753 ;;		_serial
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text38
  7758  004A4E                     __ptext38:
  7759                           	callstack 0
  7760  004A4E                     _serial_tx_str:
  7761                           	callstack 27
  7762  004A4E                     
  7763                           ;serial.c: 56: void serial_tx_str(const char* val);serial.c: 57: {;serial.c: 58:   unsig
      +                          ned char i=0;
  7764  004A4E  0E00               	movlw	0
  7765  004A50  6E06               	movwf	serial_tx_str@i^0,c
  7766                           
  7767                           ;serial.c: 60:   while(val[i])
  7768  004A52  EF3A  F025         	goto	l3266
  7769  004A56                     l3262:
  7770                           
  7771                           ;serial.c: 61:   {;serial.c: 62:     serial_tx(val[i]);
  7772  004A56  5006               	movf	serial_tx_str@i^0,w,c
  7773  004A58  2402               	addwf	serial_tx_str@val^0,w,c
  7774  004A5A  6E04               	movwf	??_serial_tx_str^0,c
  7775  004A5C  0E00               	movlw	0
  7776  004A5E  2003               	addwfc	(serial_tx_str@val+1)^0,w,c
  7777  004A60  6E05               	movwf	(??_serial_tx_str+1)^0,c
  7778  004A62  C004  FFF6         	movff	??_serial_tx_str,tblptrl
  7779  004A66  C005  FFF7         	movff	??_serial_tx_str+1,tblptrh
  7780  004A6A                     	if	0	;tblptru may be non-zero
  7781  004A6A                     	endif
  7782  004A6A                     	if	0	;tblptru may be non-zero
  7783  004A6A                     	endif
  7784  004A6A  0008               	tblrd		*
  7785  004A6C  50F5               	movf	tablat,w,c
  7786  004A6E  EC4D  F024         	call	_serial_tx
  7787  004A72                     
  7788                           ;serial.c: 63:     i++;
  7789  004A72  2A06               	incf	serial_tx_str@i^0,f,c
  7790  004A74                     l3266:
  7791                           
  7792                           ;serial.c: 60:   while(val[i])
  7793  004A74  5006               	movf	serial_tx_str@i^0,w,c
  7794  004A76  2402               	addwf	serial_tx_str@val^0,w,c
  7795  004A78  6E04               	movwf	??_serial_tx_str^0,c
  7796  004A7A  0E00               	movlw	0
  7797  004A7C  2003               	addwfc	(serial_tx_str@val+1)^0,w,c
  7798  004A7E  6E05               	movwf	(??_serial_tx_str+1)^0,c
  7799  004A80  C004  FFF6         	movff	??_serial_tx_str,tblptrl
  7800  004A84  C005  FFF7         	movff	??_serial_tx_str+1,tblptrh
  7801  004A88                     	if	0	;tblptru may be non-zero
  7802  004A88                     	endif
  7803  004A88                     	if	0	;tblptru may be non-zero
  7804  004A88                     	endif
  7805  004A88  0008               	tblrd		*
  7806  004A8A  50F5               	movf	tablat,w,c
  7807  004A8C  0900               	iorlw	0
  7808  004A8E  A4D8               	btfss	status,2,c
  7809  004A90  EF4C  F025         	goto	u3031
  7810  004A94  EF4E  F025         	goto	u3030
  7811  004A98                     u3031:
  7812  004A98  EF2B  F025         	goto	l3262
  7813  004A9C                     u3030:
  7814  004A9C  0012               	return		;funcret
  7815  004A9E                     __end_of_serial_tx_str:
  7816                           	callstack 0
  7817                           
  7818 ;; *************** function _serial_tx *****************
  7819 ;; Defined at:
  7820 ;;		line 50 in file "serial.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;  val             1    wreg     unsigned char 
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  val             1    0[COMRAM] unsigned char 
  7825 ;; Return value:  Size  Location     Type
  7826 ;;                  1    wreg      void 
  7827 ;; Registers used:
  7828 ;;		wreg
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7834 ;;      Params:         0       0       0       0       0       0       0
  7835 ;;      Locals:         1       0       0       0       0       0       0
  7836 ;;      Temps:          0       0       0       0       0       0       0
  7837 ;;      Totals:         1       0       0       0       0       0       0
  7838 ;;Total ram usage:        1 bytes
  7839 ;; Hardware stack levels used: 1
  7840 ;; This function calls:
  7841 ;;		Nothing
  7842 ;; This function is called by:
  7843 ;;		_serial_tx_str
  7844 ;;		_serial
  7845 ;; This function uses a non-reentrant model
  7846 ;;
  7847                           
  7848                           	psect	text39
  7849  00489A                     __ptext39:
  7850                           	callstack 0
  7851  00489A                     _serial_tx:
  7852                           	callstack 27
  7853                           
  7854                           ;incstack = 0
  7855                           ;serial_tx@val stored from wreg
  7856  00489A  6E01               	movwf	serial_tx@val^0,c
  7857  00489C                     
  7858                           ;serial.c: 50: void serial_tx(unsigned char val);serial.c: 51: {;serial.c: 52:   TXREG=v
      +                          al;
  7859  00489C  C001  FFAD         	movff	serial_tx@val,4013	;volatile
  7860  0048A0                     l252:
  7861  0048A0  A2AC               	btfss	172,1,c	;volatile
  7862  0048A2  EF55  F024         	goto	u2761
  7863  0048A6  EF57  F024         	goto	u2760
  7864  0048AA                     u2761:
  7865  0048AA  EF50  F024         	goto	l252
  7866  0048AE                     u2760:
  7867  0048AE  0012               	return		;funcret
  7868  0048B0                     __end_of_serial_tx:
  7869                           	callstack 0
  7870                           
  7871 ;; *************** function _serial_rx *****************
  7872 ;; Defined at:
  7873 ;;		line 67 in file "serial.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;  timeout         2    6[COMRAM] unsigned int 
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;  to              2    8[COMRAM] unsigned int 
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  1    wreg      unsigned char 
  7880 ;; Registers used:
  7881 ;;		wreg, status,2, status,0, cstack
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7887 ;;      Params:         2       0       0       0       0       0       0
  7888 ;;      Locals:         2       0       0       0       0       0       0
  7889 ;;      Temps:          0       0       0       0       0       0       0
  7890 ;;      Totals:         4       0       0       0       0       0       0
  7891 ;;Total ram usage:        4 bytes
  7892 ;; Hardware stack levels used: 1
  7893 ;; Hardware stack levels required when called: 1
  7894 ;; This function calls:
  7895 ;;		_atraso_ms
  7896 ;; This function is called by:
  7897 ;;		_serial
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           	psect	text40
  7902  005056                     __ptext40:
  7903                           	callstack 0
  7904  005056                     _serial_rx:
  7905                           	callstack 27
  7906  005056                     
  7907                           ;serial.c: 67: unsigned char serial_rx(unsigned int timeout);serial.c: 68: {;serial.c: 6
      +                          9:   unsigned int to=0;
  7908  005056  0E00               	movlw	0
  7909  005058  6E0A               	movwf	(serial_rx@to+1)^0,c
  7910  00505A  0E00               	movlw	0
  7911  00505C  6E09               	movwf	serial_rx@to^0,c
  7912  00505E                     
  7913                           ;serial.c: 71:   if(RCSTAbits.FERR || RCSTAbits.OERR)
  7914  00505E  B4AB               	btfsc	171,2,c	;volatile
  7915  005060  EF34  F028         	goto	u3041
  7916  005064  EF36  F028         	goto	u3040
  7917  005068                     u3041:
  7918  005068  EF3D  F028         	goto	l266
  7919  00506C                     u3040:
  7920  00506C  A2AB               	btfss	171,1,c	;volatile
  7921  00506E  EF3B  F028         	goto	u3051
  7922  005072  EF3D  F028         	goto	u3050
  7923  005076                     u3051:
  7924  005076  EF4B  F028         	goto	l3278
  7925  00507A                     u3050:
  7926  00507A                     l266:
  7927                           
  7928                           ;serial.c: 72:   {;serial.c: 73:       RCSTAbits.CREN=0;
  7929  00507A  98AB               	bcf	171,4,c	;volatile
  7930                           
  7931                           ;serial.c: 74:       RCSTAbits.CREN=1;
  7932  00507C  88AB               	bsf	171,4,c	;volatile
  7933  00507E  EF4B  F028         	goto	l3278
  7934  005082                     l3274:
  7935                           
  7936                           ;serial.c: 78:   {;serial.c: 79:     atraso_ms(20);
  7937  005082  0E00               	movlw	0
  7938  005084  6E02               	movwf	(atraso_ms@valor+1)^0,c
  7939  005086  0E14               	movlw	20
  7940  005088  6E01               	movwf	atraso_ms@valor^0,c
  7941  00508A  EC29  F026         	call	_atraso_ms	;wreg free
  7942  00508E                     
  7943                           ;serial.c: 80:     to+=20;
  7944  00508E  0E14               	movlw	20
  7945  005090  2609               	addwf	serial_rx@to^0,f,c
  7946  005092  0E00               	movlw	0
  7947  005094  220A               	addwfc	(serial_rx@to+1)^0,f,c
  7948  005096                     l3278:
  7949                           
  7950                           ;serial.c: 77:   while(((to < timeout)||(!timeout))&&(!PIR1bits.RCIF))
  7951  005096  5007               	movf	serial_rx@timeout^0,w,c
  7952  005098  5C09               	subwf	serial_rx@to^0,w,c
  7953  00509A  5008               	movf	(serial_rx@timeout+1)^0,w,c
  7954  00509C  580A               	subwfb	(serial_rx@to+1)^0,w,c
  7955  00509E  A0D8               	btfss	status,0,c
  7956  0050A0  EF54  F028         	goto	u3061
  7957  0050A4  EF56  F028         	goto	u3060
  7958  0050A8                     u3061:
  7959  0050A8  EF5F  F028         	goto	l272
  7960  0050AC                     u3060:
  7961  0050AC  5007               	movf	serial_rx@timeout^0,w,c
  7962  0050AE  1008               	iorwf	(serial_rx@timeout+1)^0,w,c
  7963  0050B0  A4D8               	btfss	status,2,c
  7964  0050B2  EF5D  F028         	goto	u3071
  7965  0050B6  EF5F  F028         	goto	u3070
  7966  0050BA                     u3071:
  7967  0050BA  EF66  F028         	goto	l273
  7968  0050BE                     u3070:
  7969  0050BE                     l272:
  7970  0050BE  AA9E               	btfss	158,5,c	;volatile
  7971  0050C0  EF64  F028         	goto	u3081
  7972  0050C4  EF66  F028         	goto	u3080
  7973  0050C8                     u3081:
  7974  0050C8  EF41  F028         	goto	l3274
  7975  0050CC                     u3080:
  7976  0050CC                     l273:
  7977                           
  7978                           ;serial.c: 82:   if(PIR1bits.RCIF)
  7979  0050CC  AA9E               	btfss	158,5,c	;volatile
  7980  0050CE  EF6B  F028         	goto	u3091
  7981  0050D2  EF6D  F028         	goto	u3090
  7982  0050D6                     u3091:
  7983  0050D6  EF70  F028         	goto	l3288
  7984  0050DA                     u3090:
  7985  0050DA                     
  7986                           ;serial.c: 83:     return RCREG;
  7987  0050DA  50AE               	movf	174,w,c	;volatile
  7988  0050DC  EF71  F028         	goto	l275
  7989  0050E0                     l3288:
  7990                           
  7991                           ;serial.c: 85:     return 0xA5;
  7992  0050E0  0EA5               	movlw	165
  7993  0050E2                     l275:
  7994  0050E2  0012               	return		;funcret
  7995  0050E4                     __end_of_serial_rx:
  7996                           	callstack 0
  7997                           
  7998 ;; *************** function _lcd_str *****************
  7999 ;; Defined at:
  8000 ;;		line 73 in file "lcd.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;  str             2    7[COMRAM] PTR const unsigned char 
  8003 ;;		 -> STR_39(17), STR_38(15), STR_37(9), STR_36(8), 
  8004 ;;		 -> STR_35(2), STR_34(2), STR_33(17), STR_32(2), 
  8005 ;;		 -> STR_31(2), STR_30(17), STR_29(9), STR_28(8), 
  8006 ;;		 -> STR_27(13), STR_26(11), STR_25(12), STR_24(17), 
  8007 ;;		 -> STR_23(16), STR_22(12), STR_21(8), STR_20(2), 
  8008 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(17), 
  8009 ;;		 -> STR_15(7), STR_14(17), STR_13(16), STR_12(16), 
  8010 ;;		 -> STR_11(17), STR_10(14), STR_9(17), STR_8(13), 
  8011 ;;		 -> STR_7(14), STR_6(12), STR_5(9), STR_3(16), 
  8012 ;;		 -> STR_2(8), 
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;  i               1   11[COMRAM] unsigned char 
  8015 ;; Return value:  Size  Location     Type
  8016 ;;                  1    wreg      void 
  8017 ;; Registers used:
  8018 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8019 ;; Tracked objects:
  8020 ;;		On entry : 0/0
  8021 ;;		On exit  : 0/0
  8022 ;;		Unchanged: 0/0
  8023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8024 ;;      Params:         2       0       0       0       0       0       0
  8025 ;;      Locals:         1       0       0       0       0       0       0
  8026 ;;      Temps:          2       0       0       0       0       0       0
  8027 ;;      Totals:         5       0       0       0       0       0       0
  8028 ;;Total ram usage:        5 bytes
  8029 ;; Hardware stack levels used: 1
  8030 ;; Hardware stack levels required when called: 2
  8031 ;; This function calls:
  8032 ;;		_lcd_dat
  8033 ;; This function is called by:
  8034 ;;		_serial
  8035 ;;		_controleEstoque
  8036 ;;		_ligar
  8037 ;;		_imprime
  8038 ;;		_instrucoes
  8039 ;;		_resfria
  8040 ;;		_maxEmin
  8041 ;;		_main
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text41
  8046  0049FE                     __ptext41:
  8047                           	callstack 0
  8048  0049FE                     _lcd_str:
  8049                           	callstack 27
  8050  0049FE                     
  8051                           ;lcd.c: 74:     unsigned char i = 0;
  8052  0049FE  0E00               	movlw	0
  8053  004A00  6E0C               	movwf	lcd_str@i^0,c
  8054                           
  8055                           ;lcd.c: 76:     while (str[i] != 0) {
  8056  004A02  EF12  F025         	goto	l3190
  8057  004A06                     l3186:
  8058                           
  8059                           ;lcd.c: 77:         lcd_dat(str[i]);
  8060  004A06  500C               	movf	lcd_str@i^0,w,c
  8061  004A08  2408               	addwf	lcd_str@str^0,w,c
  8062  004A0A  6E0A               	movwf	??_lcd_str^0,c
  8063  004A0C  0E00               	movlw	0
  8064  004A0E  2009               	addwfc	(lcd_str@str+1)^0,w,c
  8065  004A10  6E0B               	movwf	(??_lcd_str+1)^0,c
  8066  004A12  C00A  FFF6         	movff	??_lcd_str,tblptrl
  8067  004A16  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  8068  004A1A                     	if	0	;tblptru may be non-zero
  8069  004A1A                     	endif
  8070  004A1A                     	if	0	;tblptru may be non-zero
  8071  004A1A                     	endif
  8072  004A1A  0008               	tblrd		*
  8073  004A1C  50F5               	movf	tablat,w,c
  8074  004A1E  ECAD  F024         	call	_lcd_dat
  8075  004A22                     
  8076                           ;lcd.c: 78:         i++;
  8077  004A22  2A0C               	incf	lcd_str@i^0,f,c
  8078  004A24                     l3190:
  8079                           
  8080                           ;lcd.c: 76:     while (str[i] != 0) {
  8081  004A24  500C               	movf	lcd_str@i^0,w,c
  8082  004A26  2408               	addwf	lcd_str@str^0,w,c
  8083  004A28  6E0A               	movwf	??_lcd_str^0,c
  8084  004A2A  0E00               	movlw	0
  8085  004A2C  2009               	addwfc	(lcd_str@str+1)^0,w,c
  8086  004A2E  6E0B               	movwf	(??_lcd_str+1)^0,c
  8087  004A30  C00A  FFF6         	movff	??_lcd_str,tblptrl
  8088  004A34  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  8089  004A38                     	if	0	;tblptru may be non-zero
  8090  004A38                     	endif
  8091  004A38                     	if	0	;tblptru may be non-zero
  8092  004A38                     	endif
  8093  004A38  0008               	tblrd		*
  8094  004A3A  50F5               	movf	tablat,w,c
  8095  004A3C  0900               	iorlw	0
  8096  004A3E  A4D8               	btfss	status,2,c
  8097  004A40  EF24  F025         	goto	u2771
  8098  004A44  EF26  F025         	goto	u2770
  8099  004A48                     u2771:
  8100  004A48  EF03  F025         	goto	l3186
  8101  004A4C                     u2770:
  8102  004A4C  0012               	return		;funcret
  8103  004A4E                     __end_of_lcd_str:
  8104                           	callstack 0
  8105                           
  8106 ;; *************** function _lcd_dat *****************
  8107 ;; Defined at:
  8108 ;;		line 45 in file "lcd.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  val             1    wreg     unsigned char 
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;  val             1    6[COMRAM] unsigned char 
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  1    wreg      void 
  8115 ;; Registers used:
  8116 ;;		wreg, status,2, status,0, cstack
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8122 ;;      Params:         0       0       0       0       0       0       0
  8123 ;;      Locals:         1       0       0       0       0       0       0
  8124 ;;      Temps:          0       0       0       0       0       0       0
  8125 ;;      Totals:         1       0       0       0       0       0       0
  8126 ;;Total ram usage:        1 bytes
  8127 ;; Hardware stack levels used: 1
  8128 ;; Hardware stack levels required when called: 1
  8129 ;; This function calls:
  8130 ;;		_atraso_ms
  8131 ;;		_lcd_wr
  8132 ;; This function is called by:
  8133 ;;		_lcd_str
  8134 ;;		_imprime
  8135 ;;		_maxEmin
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           	psect	text42
  8140  00495A                     __ptext42:
  8141                           	callstack 0
  8142  00495A                     _lcd_dat:
  8143                           	callstack 27
  8144                           
  8145                           ;incstack = 0
  8146                           ;lcd_dat@val stored from wreg
  8147  00495A  6E07               	movwf	lcd_dat@val^0,c
  8148  00495C                     
  8149                           ;lcd.c: 46:     PORTEbits.RE1 = 1;
  8150  00495C  8284               	bsf	132,1,c	;volatile
  8151  00495E                     
  8152                           ;lcd.c: 47:     lcd_wr(val);
  8153  00495E  5007               	movf	lcd_dat@val^0,w,c
  8154  004960  EC25  F024         	call	_lcd_wr
  8155  004964                     
  8156                           ;lcd.c: 48:     PORTEbits.RE2 = 1;
  8157  004964  8484               	bsf	132,2,c	;volatile
  8158  004966                     
  8159                           ;lcd.c: 49:     atraso_ms(3);
  8160  004966  0E00               	movlw	0
  8161  004968  6E02               	movwf	(atraso_ms@valor+1)^0,c
  8162  00496A  0E03               	movlw	3
  8163  00496C  6E01               	movwf	atraso_ms@valor^0,c
  8164  00496E  EC29  F026         	call	_atraso_ms	;wreg free
  8165  004972                     
  8166                           ;lcd.c: 50:     PORTEbits.RE1 = 0;
  8167  004972  9284               	bcf	132,1,c	;volatile
  8168  004974                     
  8169                           ;lcd.c: 51:     atraso_ms(3);
  8170  004974  0E00               	movlw	0
  8171  004976  6E02               	movwf	(atraso_ms@valor+1)^0,c
  8172  004978  0E03               	movlw	3
  8173  00497A  6E01               	movwf	atraso_ms@valor^0,c
  8174  00497C  EC29  F026         	call	_atraso_ms	;wreg free
  8175  004980                     
  8176                           ;lcd.c: 52:     PORTEbits.RE1 = 1;
  8177  004980  8284               	bsf	132,1,c	;volatile
  8178  004982  0012               	return		;funcret
  8179  004984                     __end_of_lcd_dat:
  8180                           	callstack 0
  8181                           
  8182 ;; *************** function _lcd_cmd *****************
  8183 ;; Defined at:
  8184 ;;		line 35 in file "lcd.c"
  8185 ;; Parameters:    Size  Location     Type
  8186 ;;  val             1    wreg     unsigned char 
  8187 ;; Auto vars:     Size  Location     Type
  8188 ;;  val             1    6[COMRAM] unsigned char 
  8189 ;; Return value:  Size  Location     Type
  8190 ;;                  1    wreg      void 
  8191 ;; Registers used:
  8192 ;;		wreg, status,2, status,0, cstack
  8193 ;; Tracked objects:
  8194 ;;		On entry : 0/0
  8195 ;;		On exit  : 0/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8198 ;;      Params:         0       0       0       0       0       0       0
  8199 ;;      Locals:         1       0       0       0       0       0       0
  8200 ;;      Temps:          0       0       0       0       0       0       0
  8201 ;;      Totals:         1       0       0       0       0       0       0
  8202 ;;Total ram usage:        1 bytes
  8203 ;; Hardware stack levels used: 1
  8204 ;; Hardware stack levels required when called: 1
  8205 ;; This function calls:
  8206 ;;		_atraso_ms
  8207 ;;		_lcd_wr
  8208 ;; This function is called by:
  8209 ;;		_lcd_init
  8210 ;;		_serial
  8211 ;;		_controleEstoque
  8212 ;;		_shift_texto
  8213 ;;		_ligar
  8214 ;;		_imprime
  8215 ;;		_instrucoes
  8216 ;;		_resfria
  8217 ;;		_maxEmin
  8218 ;;		_main
  8219 ;; This function uses a non-reentrant model
  8220 ;;
  8221                           
  8222                           	psect	text43
  8223  004930                     __ptext43:
  8224                           	callstack 0
  8225  004930                     _lcd_cmd:
  8226                           	callstack 28
  8227                           
  8228                           ;incstack = 0
  8229                           ;lcd_cmd@val stored from wreg
  8230  004930  6E07               	movwf	lcd_cmd@val^0,c
  8231  004932                     
  8232                           ;lcd.c: 36:     PORTEbits.RE1 = 1;
  8233  004932  8284               	bsf	132,1,c	;volatile
  8234  004934                     
  8235                           ;lcd.c: 37:     lcd_wr(val);
  8236  004934  5007               	movf	lcd_cmd@val^0,w,c
  8237  004936  EC25  F024         	call	_lcd_wr
  8238  00493A                     
  8239                           ;lcd.c: 38:     PORTEbits.RE2 = 0;
  8240  00493A  9484               	bcf	132,2,c	;volatile
  8241  00493C                     
  8242                           ;lcd.c: 39:     atraso_ms(3);
  8243  00493C  0E00               	movlw	0
  8244  00493E  6E02               	movwf	(atraso_ms@valor+1)^0,c
  8245  004940  0E03               	movlw	3
  8246  004942  6E01               	movwf	atraso_ms@valor^0,c
  8247  004944  EC29  F026         	call	_atraso_ms	;wreg free
  8248  004948                     
  8249                           ;lcd.c: 40:     PORTEbits.RE1 = 0;
  8250  004948  9284               	bcf	132,1,c	;volatile
  8251  00494A                     
  8252                           ;lcd.c: 41:     atraso_ms(3);
  8253  00494A  0E00               	movlw	0
  8254  00494C  6E02               	movwf	(atraso_ms@valor+1)^0,c
  8255  00494E  0E03               	movlw	3
  8256  004950  6E01               	movwf	atraso_ms@valor^0,c
  8257  004952  EC29  F026         	call	_atraso_ms	;wreg free
  8258  004956                     
  8259                           ;lcd.c: 42:     PORTEbits.RE1 = 1;
  8260  004956  8284               	bsf	132,1,c	;volatile
  8261  004958  0012               	return		;funcret
  8262  00495A                     __end_of_lcd_cmd:
  8263                           	callstack 0
  8264                           
  8265 ;; *************** function _lcd_wr *****************
  8266 ;; Defined at:
  8267 ;;		line 31 in file "lcd.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;  val             1    wreg     unsigned char 
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;  val             1    0[COMRAM] unsigned char 
  8272 ;; Return value:  Size  Location     Type
  8273 ;;                  1    wreg      void 
  8274 ;; Registers used:
  8275 ;;		wreg
  8276 ;; Tracked objects:
  8277 ;;		On entry : 0/0
  8278 ;;		On exit  : 0/0
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8281 ;;      Params:         0       0       0       0       0       0       0
  8282 ;;      Locals:         1       0       0       0       0       0       0
  8283 ;;      Temps:          0       0       0       0       0       0       0
  8284 ;;      Totals:         1       0       0       0       0       0       0
  8285 ;;Total ram usage:        1 bytes
  8286 ;; Hardware stack levels used: 1
  8287 ;; This function calls:
  8288 ;;		Nothing
  8289 ;; This function is called by:
  8290 ;;		_lcd_cmd
  8291 ;;		_lcd_dat
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           
  8295                           	psect	text44
  8296  00484A                     __ptext44:
  8297                           	callstack 0
  8298  00484A                     _lcd_wr:
  8299                           	callstack 27
  8300                           
  8301                           ;incstack = 0
  8302                           ;lcd_wr@val stored from wreg
  8303  00484A  6E01               	movwf	lcd_wr@val^0,c
  8304  00484C                     
  8305                           ;lcd.c: 32:     PORTD = val;
  8306  00484C  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  8307  004850  0012               	return		;funcret
  8308  004852                     __end_of_lcd_wr:
  8309                           	callstack 0
  8310                           
  8311 ;; *************** function _kpRead *****************
  8312 ;; Defined at:
  8313 ;;		line 35 in file "keypad.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;		None
  8316 ;; Auto vars:     Size  Location     Type
  8317 ;;		None
  8318 ;; Return value:  Size  Location     Type
  8319 ;;                  2    0[COMRAM] unsigned int 
  8320 ;; Registers used:
  8321 ;;		None
  8322 ;; Tracked objects:
  8323 ;;		On entry : 0/0
  8324 ;;		On exit  : 0/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8327 ;;      Params:         2       0       0       0       0       0       0
  8328 ;;      Locals:         0       0       0       0       0       0       0
  8329 ;;      Temps:          0       0       0       0       0       0       0
  8330 ;;      Totals:         2       0       0       0       0       0       0
  8331 ;;Total ram usage:        2 bytes
  8332 ;; Hardware stack levels used: 1
  8333 ;; This function calls:
  8334 ;;		Nothing
  8335 ;; This function is called by:
  8336 ;;		_controleEstoque
  8337 ;;		_main
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           	psect	text45
  8342  00485C                     __ptext45:
  8343                           	callstack 0
  8344  00485C                     _kpRead:
  8345                           	callstack 30
  8346  00485C                     
  8347                           ;keypad.c: 36:     return valor;
  8348  00485C  C065  F001         	movff	_valor,?_kpRead
  8349  004860  C066  F002         	movff	_valor+1,?_kpRead+1
  8350  004864  0012               	return		;funcret
  8351  004866                     __end_of_kpRead:
  8352                           	callstack 0
  8353                           
  8354 ;; *************** function _kpInit *****************
  8355 ;; Defined at:
  8356 ;;		line 87 in file "keypad.c"
  8357 ;; Parameters:    Size  Location     Type
  8358 ;;		None
  8359 ;; Auto vars:     Size  Location     Type
  8360 ;;		None
  8361 ;; Return value:  Size  Location     Type
  8362 ;;                  1    wreg      void 
  8363 ;; Registers used:
  8364 ;;		wreg, status,2, status,0
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/0
  8367 ;;		On exit  : 0/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8370 ;;      Params:         0       0       0       0       0       0       0
  8371 ;;      Locals:         0       0       0       0       0       0       0
  8372 ;;      Temps:          0       0       0       0       0       0       0
  8373 ;;      Totals:         0       0       0       0       0       0       0
  8374 ;;Total ram usage:        0 bytes
  8375 ;; Hardware stack levels used: 1
  8376 ;; This function calls:
  8377 ;;		Nothing
  8378 ;; This function is called by:
  8379 ;;		_controleEstoque
  8380 ;;		_main
  8381 ;; This function uses a non-reentrant model
  8382 ;;
  8383                           
  8384                           	psect	text46
  8385  004852                     __ptext46:
  8386                           	callstack 0
  8387  004852                     _kpInit:
  8388                           	callstack 30
  8389  004852                     
  8390                           ;keypad.c: 89:     TRISB &= 0x07;
  8391  004852  0E07               	movlw	7
  8392  004854  1693               	andwf	147,f,c	;volatile
  8393                           
  8394                           ;keypad.c: 91:     TRISD |= 0x0f;
  8395  004856  0E0F               	movlw	15
  8396  004858  1295               	iorwf	149,f,c	;volatile
  8397  00485A  0012               	return		;funcret
  8398  00485C                     __end_of_kpInit:
  8399                           	callstack 0
  8400                           
  8401 ;; *************** function _kpDebounce *****************
  8402 ;; Defined at:
  8403 ;;		line 39 in file "keypad.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;		None
  8406 ;; Auto vars:     Size  Location     Type
  8407 ;;  k               2    6[COMRAM] int 
  8408 ;;  i               1    9[COMRAM] unsigned char 
  8409 ;;  j               1    8[COMRAM] unsigned char 
  8410 ;;  old_D           1    5[COMRAM] unsigned char 
  8411 ;; Return value:  Size  Location     Type
  8412 ;;                  1    wreg      void 
  8413 ;; Registers used:
  8414 ;;		wreg, status,2, status,0, prodl, prodh
  8415 ;; Tracked objects:
  8416 ;;		On entry : 0/0
  8417 ;;		On exit  : 0/0
  8418 ;;		Unchanged: 0/0
  8419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8420 ;;      Params:         0       0       0       0       0       0       0
  8421 ;;      Locals:         5       0       0       0       0       0       0
  8422 ;;      Temps:          5       0       0       0       0       0       0
  8423 ;;      Totals:        10       0       0       0       0       0       0
  8424 ;;Total ram usage:       10 bytes
  8425 ;; Hardware stack levels used: 1
  8426 ;; This function calls:
  8427 ;;		Nothing
  8428 ;; This function is called by:
  8429 ;;		_controleEstoque
  8430 ;;		_main
  8431 ;; This function uses a non-reentrant model
  8432 ;;
  8433                           
  8434                           	psect	text47
  8435  005E72                     __ptext47:
  8436                           	callstack 0
  8437  005E72                     _kpDebounce:
  8438                           	callstack 30
  8439  005E72                     
  8440                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  8441  005E72  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  8442  005E76                     
  8443                           ;keypad.c: 51:     TRISD |= 0x0f;
  8444  005E76  0E0F               	movlw	15
  8445  005E78  1295               	iorwf	149,f,c	;volatile
  8446  005E7A                     
  8447                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  8448  005E7A  0E00               	movlw	0
  8449  005E7C  6E0A               	movwf	kpDebounce@i^0,c
  8450  005E7E                     l3832:
  8451                           
  8452                           ;keypad.c: 55:         TRISB &= 0xF8;
  8453  005E7E  0EF8               	movlw	248
  8454  005E80  1693               	andwf	147,f,c	;volatile
  8455                           
  8456                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  8457  005E82  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  8458  005E86  0E01               	movlw	1
  8459  005E88  6E02               	movwf	(??_kpDebounce+1)^0,c
  8460  005E8A  2A01               	incf	??_kpDebounce^0,f,c
  8461  005E8C  EF4A  F02F         	goto	u4114
  8462  005E90                     u4115:
  8463  005E90  90D8               	bcf	status,0,c
  8464  005E92  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  8465  005E94                     u4114:
  8466  005E94  2E01               	decfsz	??_kpDebounce^0,f,c
  8467  005E96  EF48  F02F         	goto	u4115
  8468  005E9A  5002               	movf	(??_kpDebounce+1)^0,w,c
  8469  005E9C  1293               	iorwf	147,f,c	;volatile
  8470                           
  8471                           ;keypad.c: 59:         PORTB |= 0x07;
  8472  005E9E  0E07               	movlw	7
  8473  005EA0  1281               	iorwf	129,f,c	;volatile
  8474                           
  8475                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  8476  005EA2  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  8477  005EA6  0E01               	movlw	1
  8478  005EA8  6E02               	movwf	(??_kpDebounce+1)^0,c
  8479  005EAA  2A01               	incf	??_kpDebounce^0,f,c
  8480  005EAC  EF5A  F02F         	goto	u4124
  8481  005EB0                     u4125:
  8482  005EB0  90D8               	bcf	status,0,c
  8483  005EB2  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  8484  005EB4                     u4124:
  8485  005EB4  2E01               	decfsz	??_kpDebounce^0,f,c
  8486  005EB6  EF58  F02F         	goto	u4125
  8487  005EBA  5002               	movf	(??_kpDebounce+1)^0,w,c
  8488  005EBC  0AFF               	xorlw	255
  8489  005EBE  1681               	andwf	129,f,c	;volatile
  8490  005EC0                     
  8491                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  8492  005EC0  0E00               	movlw	0
  8493  005EC2  6E08               	movwf	(kpDebounce@k+1)^0,c
  8494  005EC4  0E00               	movlw	0
  8495  005EC6  6E07               	movwf	kpDebounce@k^0,c
  8496  005EC8                     l3840:
  8497  005EC8  4A07               	infsnz	kpDebounce@k^0,f,c
  8498  005ECA  2A08               	incf	(kpDebounce@k+1)^0,f,c
  8499  005ECC  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  8500  005ECE  EF72  F02F         	goto	u4131
  8501  005ED2  5008               	movf	(kpDebounce@k+1)^0,w,c
  8502  005ED4  E109               	bnz	u4130
  8503  005ED6  0E0A               	movlw	10
  8504  005ED8  5C07               	subwf	kpDebounce@k^0,w,c
  8505  005EDA  A0D8               	btfss	status,0,c
  8506  005EDC  EF72  F02F         	goto	u4131
  8507  005EE0  EF74  F02F         	goto	u4130
  8508  005EE4                     u4131:
  8509  005EE4  EF64  F02F         	goto	l3840
  8510  005EE8                     u4130:
  8511  005EE8                     
  8512                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  8513  005EE8  0E00               	movlw	0
  8514  005EEA  6E09               	movwf	kpDebounce@j^0,c
  8515  005EEC                     l3850:
  8516                           
  8517                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  8518  005EEC  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  8519  005EF0  0E01               	movlw	1
  8520  005EF2  6E02               	movwf	(??_kpDebounce+1)^0,c
  8521  005EF4  2A01               	incf	??_kpDebounce^0,f,c
  8522  005EF6  EF7F  F02F         	goto	u4144
  8523  005EFA                     u4145:
  8524  005EFA  90D8               	bcf	status,0,c
  8525  005EFC  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  8526  005EFE                     u4144:
  8527  005EFE  2E01               	decfsz	??_kpDebounce^0,f,c
  8528  005F00  EF7D  F02F         	goto	u4145
  8529  005F04  5002               	movf	(??_kpDebounce+1)^0,w,c
  8530  005F06  1483               	andwf	131,w,c	;volatile
  8531  005F08  0900               	iorlw	0
  8532  005F0A  A4D8               	btfss	status,2,c
  8533  005F0C  EF8A  F02F         	goto	u4151
  8534  005F10  EF8C  F02F         	goto	u4150
  8535  005F14                     u4151:
  8536  005F14  EFA4  F02F         	goto	l3854
  8537  005F18                     u4150:
  8538  005F18                     
  8539                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  8540  005F18  500A               	movf	kpDebounce@i^0,w,c
  8541  005F1A  0D04               	mullw	4
  8542  005F1C  50F3               	movf	243,w,c
  8543  005F1E  2409               	addwf	kpDebounce@j^0,w,c
  8544  005F20  6E01               	movwf	??_kpDebounce^0,c
  8545  005F22  0E01               	movlw	1
  8546  005F24  6E02               	movwf	(??_kpDebounce+1)^0,c
  8547  005F26  0E00               	movlw	0
  8548  005F28  6E03               	movwf	(??_kpDebounce+2)^0,c
  8549  005F2A  2A01               	incf	??_kpDebounce^0,f,c
  8550  005F2C  EF9B  F02F         	goto	u4164
  8551  005F30                     u4165:
  8552  005F30  90D8               	bcf	status,0,c
  8553  005F32  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  8554  005F34  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  8555  005F36                     u4164:
  8556  005F36  2E01               	decfsz	??_kpDebounce^0,f,c
  8557  005F38  EF98  F02F         	goto	u4165
  8558  005F3C  5002               	movf	(??_kpDebounce+1)^0,w,c
  8559  005F3E  1263               	iorwf	kpDebounce@valorNovo^0,f,c
  8560  005F40  5003               	movf	(??_kpDebounce+2)^0,w,c
  8561  005F42  1264               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  8562                           
  8563                           ;keypad.c: 69:             } else {
  8564  005F44  EFBE  F02F         	goto	l3856
  8565  005F48                     l3854:
  8566                           
  8567                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  8568  005F48  500A               	movf	kpDebounce@i^0,w,c
  8569  005F4A  0D04               	mullw	4
  8570  005F4C  50F3               	movf	243,w,c
  8571  005F4E  2409               	addwf	kpDebounce@j^0,w,c
  8572  005F50  6E01               	movwf	??_kpDebounce^0,c
  8573  005F52  0E01               	movlw	1
  8574  005F54  6E02               	movwf	(??_kpDebounce+1)^0,c
  8575  005F56  0E00               	movlw	0
  8576  005F58  6E03               	movwf	(??_kpDebounce+2)^0,c
  8577  005F5A  2A01               	incf	??_kpDebounce^0,f,c
  8578  005F5C  EFB3  F02F         	goto	u4174
  8579  005F60                     u4175:
  8580  005F60  90D8               	bcf	status,0,c
  8581  005F62  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  8582  005F64  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  8583  005F66                     u4174:
  8584  005F66  2E01               	decfsz	??_kpDebounce^0,f,c
  8585  005F68  EFB0  F02F         	goto	u4175
  8586  005F6C  1C02               	comf	(??_kpDebounce+1)^0,w,c
  8587  005F6E  6E04               	movwf	(??_kpDebounce+3)^0,c
  8588  005F70  1C03               	comf	(??_kpDebounce+2)^0,w,c
  8589  005F72  6E05               	movwf	(??_kpDebounce+4)^0,c
  8590  005F74  5004               	movf	(??_kpDebounce+3)^0,w,c
  8591  005F76  1663               	andwf	kpDebounce@valorNovo^0,f,c
  8592  005F78  5005               	movf	(??_kpDebounce+4)^0,w,c
  8593  005F7A  1664               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  8594  005F7C                     l3856:
  8595                           
  8596                           ;keypad.c: 72:         }
  8597  005F7C  2A09               	incf	kpDebounce@j^0,f,c
  8598  005F7E  0E03               	movlw	3
  8599  005F80  6409               	cpfsgt	kpDebounce@j^0,c
  8600  005F82  EFC5  F02F         	goto	u4181
  8601  005F86  EFC7  F02F         	goto	u4180
  8602  005F8A                     u4181:
  8603  005F8A  EF76  F02F         	goto	l3850
  8604  005F8E                     u4180:
  8605  005F8E                     
  8606                           ;keypad.c: 73:     }
  8607  005F8E  2A0A               	incf	kpDebounce@i^0,f,c
  8608  005F90  0E02               	movlw	2
  8609  005F92  640A               	cpfsgt	kpDebounce@i^0,c
  8610  005F94  EFCE  F02F         	goto	u4191
  8611  005F98  EFD0  F02F         	goto	u4190
  8612  005F9C                     u4191:
  8613  005F9C  EF3F  F02F         	goto	l3832
  8614  005FA0                     u4190:
  8615  005FA0                     
  8616                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  8617  005FA0  5063               	movf	kpDebounce@valorNovo^0,w,c
  8618  005FA2  1861               	xorwf	kpDebounce@valorAntigo^0,w,c
  8619  005FA4  E107               	bnz	u4201
  8620  005FA6  5064               	movf	(kpDebounce@valorNovo+1)^0,w,c
  8621  005FA8  1862               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  8622  005FAA  A4D8               	btfss	status,2,c
  8623  005FAC  EFDA  F02F         	goto	u4201
  8624  005FB0  EFDC  F02F         	goto	u4200
  8625  005FB4                     u4201:
  8626  005FB4  EFDF  F02F         	goto	l3868
  8627  005FB8                     u4200:
  8628  005FB8                     
  8629                           ;keypad.c: 75:         tempo--;
  8630  005FB8  066C               	decf	kpDebounce@tempo^0,f,c
  8631                           
  8632                           ;keypad.c: 76:     } else {
  8633  005FBA  EFE5  F02F         	goto	l175
  8634  005FBE                     l3868:
  8635                           
  8636                           ;keypad.c: 77:         tempo = 10;
  8637  005FBE  0E0A               	movlw	10
  8638  005FC0  6E6C               	movwf	kpDebounce@tempo^0,c
  8639  005FC2                     
  8640                           ;keypad.c: 78:         valorAntigo = valorNovo;
  8641  005FC2  C063  F061         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  8642  005FC6  C064  F062         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  8643  005FCA                     l175:
  8644                           
  8645                           ;keypad.c: 80:     if (tempo == 0) {
  8646  005FCA  506C               	movf	kpDebounce@tempo^0,w,c
  8647  005FCC  A4D8               	btfss	status,2,c
  8648  005FCE  EFEB  F02F         	goto	u4211
  8649  005FD2  EFED  F02F         	goto	u4210
  8650  005FD6                     u4211:
  8651  005FD6  EFF1  F02F         	goto	l176
  8652  005FDA                     u4210:
  8653  005FDA                     
  8654                           ;keypad.c: 81:         valor = valorAntigo;
  8655  005FDA  C061  F065         	movff	kpDebounce@valorAntigo,_valor
  8656  005FDE  C062  F066         	movff	kpDebounce@valorAntigo+1,_valor+1
  8657  005FE2                     l176:
  8658                           
  8659                           ;keypad.c: 83:     PORTD = old_D;
  8660  005FE2  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  8661  005FE6                     
  8662                           ;keypad.c: 84:     TRISD = 0x00;
  8663  005FE6  0E00               	movlw	0
  8664  005FE8  6E95               	movwf	149,c	;volatile
  8665  005FEA  0012               	return		;funcret
  8666  005FEC                     __end_of_kpDebounce:
  8667                           	callstack 0
  8668                           
  8669 ;; *************** function _aquece *****************
  8670 ;; Defined at:
  8671 ;;		line 442 in file "main.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;		None
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;		None
  8676 ;; Return value:  Size  Location     Type
  8677 ;;                  1    wreg      void 
  8678 ;; Registers used:
  8679 ;;		wreg, status,2, status,0, cstack
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8685 ;;      Params:         0       0       0       0       0       0       0
  8686 ;;      Locals:         0       0       0       0       0       0       0
  8687 ;;      Temps:          0       0       0       0       0       0       0
  8688 ;;      Totals:         0       0       0       0       0       0       0
  8689 ;;Total ram usage:        0 bytes
  8690 ;; Hardware stack levels used: 1
  8691 ;; Hardware stack levels required when called: 2
  8692 ;; This function calls:
  8693 ;;		___fladd
  8694 ;;		___flge
  8695 ;;		_atraso_ms
  8696 ;;		_atualizar
  8697 ;; This function is called by:
  8698 ;;		_main
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           	psect	text48
  8703  005422                     __ptext48:
  8704                           	callstack 0
  8705  005422                     _aquece:
  8706                           	callstack 28
  8707  005422                     
  8708                           ;main.c: 443:     while (temperatura <= limiteInferior || tempPontos <= limiteInferior |
      +                          | tempLiquido <= limiteInferior) {
  8709  005422  EF36  F02A         	goto	l466
  8710  005426                     l467:
  8711                           
  8712                           ;main.c: 445:         PORTCbits.RC5 = 1;
  8713  005426  8A82               	bsf	130,5,c	;volatile
  8714  005428                     
  8715                           ;main.c: 446:         temperatura += 0.5;
  8716  005428  C07B  F028         	movff	_temperatura,___fladd@b
  8717  00542C  C07C  F029         	movff	_temperatura+1,___fladd@b+1
  8718  005430  C07D  F02A         	movff	_temperatura+2,___fladd@b+2
  8719  005434  C07E  F02B         	movff	_temperatura+3,___fladd@b+3
  8720  005438  0E00               	movlw	0
  8721  00543A  6E2C               	movwf	___fladd@a^0,c
  8722  00543C  0E00               	movlw	0
  8723  00543E  6E2D               	movwf	(___fladd@a+1)^0,c
  8724  005440  0E00               	movlw	0
  8725  005442  6E2E               	movwf	(___fladd@a+2)^0,c
  8726  005444  0E3F               	movlw	63
  8727  005446  6E2F               	movwf	(___fladd@a+3)^0,c
  8728  005448  ECE8  F03C         	call	___fladd	;wreg free
  8729  00544C  C028  F07B         	movff	?___fladd,_temperatura
  8730  005450  C029  F07C         	movff	?___fladd+1,_temperatura+1
  8731  005454  C02A  F07D         	movff	?___fladd+2,_temperatura+2
  8732  005458  C02B  F07E         	movff	?___fladd+3,_temperatura+3
  8733                           
  8734                           ;main.c: 447:         atraso_ms(150);
  8735  00545C  0E00               	movlw	0
  8736  00545E  6E02               	movwf	(atraso_ms@valor+1)^0,c
  8737  005460  0E96               	movlw	150
  8738  005462  6E01               	movwf	atraso_ms@valor^0,c
  8739  005464  EC29  F026         	call	_atraso_ms	;wreg free
  8740                           
  8741                           ;main.c: 448:         atualizar();
  8742  005468  EC7C  F02E         	call	_atualizar	;wreg free
  8743  00546C                     l466:
  8744                           
  8745                           ;main.c: 443:     while (temperatura <= limiteInferior || tempPontos <= limiteInferior |
      +                          | tempLiquido <= limiteInferior) {
  8746  00546C  0E00               	movlw	0
  8747  00546E  6E01               	movwf	___flge@ff1^0,c
  8748  005470  0E00               	movlw	0
  8749  005472  6E02               	movwf	(___flge@ff1+1)^0,c
  8750  005474  0E00               	movlw	0
  8751  005476  6E03               	movwf	(___flge@ff1+2)^0,c
  8752  005478  0E40               	movlw	64
  8753  00547A  6E04               	movwf	(___flge@ff1+3)^0,c
  8754  00547C  C07B  F005         	movff	_temperatura,___flge@ff2
  8755  005480  C07C  F006         	movff	_temperatura+1,___flge@ff2+1
  8756  005484  C07D  F007         	movff	_temperatura+2,___flge@ff2+2
  8757  005488  C07E  F008         	movff	_temperatura+3,___flge@ff2+3
  8758  00548C  EC83  F02A         	call	___flge	;wreg free
  8759  005490  B0D8               	btfsc	status,0,c
  8760  005492  EF4D  F02A         	goto	u4951
  8761  005496  EF4F  F02A         	goto	u4950
  8762  00549A                     u4951:
  8763  00549A  EF13  F02A         	goto	l467
  8764  00549E                     u4950:
  8765  00549E  0E00               	movlw	0
  8766  0054A0  6E01               	movwf	___flge@ff1^0,c
  8767  0054A2  0E00               	movlw	0
  8768  0054A4  6E02               	movwf	(___flge@ff1+1)^0,c
  8769  0054A6  0E00               	movlw	0
  8770  0054A8  6E03               	movwf	(___flge@ff1+2)^0,c
  8771  0054AA  0E40               	movlw	64
  8772  0054AC  6E04               	movwf	(___flge@ff1+3)^0,c
  8773  0054AE  C073  F005         	movff	_tempPontos,___flge@ff2
  8774  0054B2  C074  F006         	movff	_tempPontos+1,___flge@ff2+1
  8775  0054B6  C075  F007         	movff	_tempPontos+2,___flge@ff2+2
  8776  0054BA  C076  F008         	movff	_tempPontos+3,___flge@ff2+3
  8777  0054BE  EC83  F02A         	call	___flge	;wreg free
  8778  0054C2  B0D8               	btfsc	status,0,c
  8779  0054C4  EF66  F02A         	goto	u4961
  8780  0054C8  EF68  F02A         	goto	u4960
  8781  0054CC                     u4961:
  8782  0054CC  EF13  F02A         	goto	l467
  8783  0054D0                     u4960:
  8784  0054D0  0E00               	movlw	0
  8785  0054D2  6E01               	movwf	___flge@ff1^0,c
  8786  0054D4  0E00               	movlw	0
  8787  0054D6  6E02               	movwf	(___flge@ff1+1)^0,c
  8788  0054D8  0E00               	movlw	0
  8789  0054DA  6E03               	movwf	(___flge@ff1+2)^0,c
  8790  0054DC  0E40               	movlw	64
  8791  0054DE  6E04               	movwf	(___flge@ff1+3)^0,c
  8792  0054E0  C077  F005         	movff	_tempLiquido,___flge@ff2
  8793  0054E4  C078  F006         	movff	_tempLiquido+1,___flge@ff2+1
  8794  0054E8  C079  F007         	movff	_tempLiquido+2,___flge@ff2+2
  8795  0054EC  C07A  F008         	movff	_tempLiquido+3,___flge@ff2+3
  8796  0054F0  EC83  F02A         	call	___flge	;wreg free
  8797  0054F4  B0D8               	btfsc	status,0,c
  8798  0054F6  EF7F  F02A         	goto	u4971
  8799  0054FA  EF81  F02A         	goto	u4970
  8800  0054FE                     u4971:
  8801  0054FE  EF13  F02A         	goto	l467
  8802  005502                     u4970:
  8803  005502                     
  8804                           ;main.c: 450:     PORTCbits.RC5 = 0;
  8805  005502  9A82               	bcf	130,5,c	;volatile
  8806  005504  0012               	return		;funcret
  8807  005506                     __end_of_aquece:
  8808                           	callstack 0
  8809                           
  8810 ;; *************** function _atualizar *****************
  8811 ;; Defined at:
  8812 ;;		line 405 in file "main.c"
  8813 ;; Parameters:    Size  Location     Type
  8814 ;;		None
  8815 ;; Auto vars:     Size  Location     Type
  8816 ;;		None
  8817 ;; Return value:  Size  Location     Type
  8818 ;;                  1    wreg      void 
  8819 ;; Registers used:
  8820 ;;		wreg, status,2, status,0, cstack
  8821 ;; Tracked objects:
  8822 ;;		On entry : 0/0
  8823 ;;		On exit  : 0/0
  8824 ;;		Unchanged: 0/0
  8825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8826 ;;      Params:         0       0       0       0       0       0       0
  8827 ;;      Locals:         0       0       0       0       0       0       0
  8828 ;;      Temps:          0       0       0       0       0       0       0
  8829 ;;      Totals:         0       0       0       0       0       0       0
  8830 ;;Total ram usage:        0 bytes
  8831 ;; Hardware stack levels used: 1
  8832 ;; Hardware stack levels required when called: 1
  8833 ;; This function calls:
  8834 ;;		___fladd
  8835 ;;		___fldiv
  8836 ;;		___flge
  8837 ;; This function is called by:
  8838 ;;		_resfria
  8839 ;;		_aquece
  8840 ;;		_main
  8841 ;; This function uses a non-reentrant model
  8842 ;;
  8843                           
  8844                           	psect	text49
  8845  005CF8                     __ptext49:
  8846                           	callstack 0
  8847  005CF8                     _atualizar:
  8848                           	callstack 28
  8849  005CF8                     
  8850                           ;main.c: 406:     ponto1 = temperatura;
  8851  005CF8  C07B  F0AC         	movff	_temperatura,_ponto1
  8852  005CFC  C07C  F0AD         	movff	_temperatura+1,_ponto1+1
  8853  005D00  C07D  F0AE         	movff	_temperatura+2,_ponto1+2
  8854  005D04  C07E  F0AF         	movff	_temperatura+3,_ponto1+3
  8855  005D08                     
  8856                           ;main.c: 407:     ponto2 = temperatura + 1;
  8857  005D08  C07B  F028         	movff	_temperatura,___fladd@b
  8858  005D0C  C07C  F029         	movff	_temperatura+1,___fladd@b+1
  8859  005D10  C07D  F02A         	movff	_temperatura+2,___fladd@b+2
  8860  005D14  C07E  F02B         	movff	_temperatura+3,___fladd@b+3
  8861  005D18  0E00               	movlw	0
  8862  005D1A  6E2C               	movwf	___fladd@a^0,c
  8863  005D1C  0E00               	movlw	0
  8864  005D1E  6E2D               	movwf	(___fladd@a+1)^0,c
  8865  005D20  0E80               	movlw	128
  8866  005D22  6E2E               	movwf	(___fladd@a+2)^0,c
  8867  005D24  0E3F               	movlw	63
  8868  005D26  6E2F               	movwf	(___fladd@a+3)^0,c
  8869  005D28  ECE8  F03C         	call	___fladd	;wreg free
  8870  005D2C  C028  F0A8         	movff	?___fladd,_ponto2
  8871  005D30  C029  F0A9         	movff	?___fladd+1,_ponto2+1
  8872  005D34  C02A  F0AA         	movff	?___fladd+2,_ponto2+2
  8873  005D38  C02B  F0AB         	movff	?___fladd+3,_ponto2+3
  8874                           
  8875                           ;main.c: 408:     tempPontos = (ponto1 + ponto2) / 2;
  8876  005D3C  C0A8  F02C         	movff	_ponto2,___fladd@a
  8877  005D40  C0A9  F02D         	movff	_ponto2+1,___fladd@a+1
  8878  005D44  C0AA  F02E         	movff	_ponto2+2,___fladd@a+2
  8879  005D48  C0AB  F02F         	movff	_ponto2+3,___fladd@a+3
  8880  005D4C  C0AC  F028         	movff	_ponto1,___fladd@b
  8881  005D50  C0AD  F029         	movff	_ponto1+1,___fladd@b+1
  8882  005D54  C0AE  F02A         	movff	_ponto1+2,___fladd@b+2
  8883  005D58  C0AF  F02B         	movff	_ponto1+3,___fladd@b+3
  8884  005D5C  ECE8  F03C         	call	___fladd	;wreg free
  8885  005D60  C028  F038         	movff	?___fladd,___fldiv@b
  8886  005D64  C029  F039         	movff	?___fladd+1,___fldiv@b+1
  8887  005D68  C02A  F03A         	movff	?___fladd+2,___fldiv@b+2
  8888  005D6C  C02B  F03B         	movff	?___fladd+3,___fldiv@b+3
  8889  005D70  0E00               	movlw	0
  8890  005D72  6E3C               	movwf	___fldiv@a^0,c
  8891  005D74  0E00               	movlw	0
  8892  005D76  6E3D               	movwf	(___fldiv@a+1)^0,c
  8893  005D78  0E00               	movlw	0
  8894  005D7A  6E3E               	movwf	(___fldiv@a+2)^0,c
  8895  005D7C  0E40               	movlw	64
  8896  005D7E  6E3F               	movwf	(___fldiv@a+3)^0,c
  8897  005D80  EC06  F039         	call	___fldiv	;wreg free
  8898  005D84  C038  F073         	movff	?___fldiv,_tempPontos
  8899  005D88  C039  F074         	movff	?___fldiv+1,_tempPontos+1
  8900  005D8C  C03A  F075         	movff	?___fldiv+2,_tempPontos+2
  8901  005D90  C03B  F076         	movff	?___fldiv+3,_tempPontos+3
  8902                           
  8903                           ;main.c: 409:     tempLiquido = (temperatura + tempPontos) / 2;
  8904  005D94  C073  F02C         	movff	_tempPontos,___fladd@a
  8905  005D98  C074  F02D         	movff	_tempPontos+1,___fladd@a+1
  8906  005D9C  C075  F02E         	movff	_tempPontos+2,___fladd@a+2
  8907  005DA0  C076  F02F         	movff	_tempPontos+3,___fladd@a+3
  8908  005DA4  C07B  F028         	movff	_temperatura,___fladd@b
  8909  005DA8  C07C  F029         	movff	_temperatura+1,___fladd@b+1
  8910  005DAC  C07D  F02A         	movff	_temperatura+2,___fladd@b+2
  8911  005DB0  C07E  F02B         	movff	_temperatura+3,___fladd@b+3
  8912  005DB4  ECE8  F03C         	call	___fladd	;wreg free
  8913  005DB8  C028  F038         	movff	?___fladd,___fldiv@b
  8914  005DBC  C029  F039         	movff	?___fladd+1,___fldiv@b+1
  8915  005DC0  C02A  F03A         	movff	?___fladd+2,___fldiv@b+2
  8916  005DC4  C02B  F03B         	movff	?___fladd+3,___fldiv@b+3
  8917  005DC8  0E00               	movlw	0
  8918  005DCA  6E3C               	movwf	___fldiv@a^0,c
  8919  005DCC  0E00               	movlw	0
  8920  005DCE  6E3D               	movwf	(___fldiv@a+1)^0,c
  8921  005DD0  0E00               	movlw	0
  8922  005DD2  6E3E               	movwf	(___fldiv@a+2)^0,c
  8923  005DD4  0E40               	movlw	64
  8924  005DD6  6E3F               	movwf	(___fldiv@a+3)^0,c
  8925  005DD8  EC06  F039         	call	___fldiv	;wreg free
  8926  005DDC  C038  F077         	movff	?___fldiv,_tempLiquido
  8927  005DE0  C039  F078         	movff	?___fldiv+1,_tempLiquido+1
  8928  005DE4  C03A  F079         	movff	?___fldiv+2,_tempLiquido+2
  8929  005DE8  C03B  F07A         	movff	?___fldiv+3,_tempLiquido+3
  8930                           
  8931                           ;main.c: 411:     if (temperatura > maximo)
  8932  005DEC  C0A4  F001         	movff	_maximo,___flge@ff1
  8933  005DF0  C0A5  F002         	movff	_maximo+1,___flge@ff1+1
  8934  005DF4  C0A6  F003         	movff	_maximo+2,___flge@ff1+2
  8935  005DF8  C0A7  F004         	movff	_maximo+3,___flge@ff1+3
  8936  005DFC  C07B  F005         	movff	_temperatura,___flge@ff2
  8937  005E00  C07C  F006         	movff	_temperatura+1,___flge@ff2+1
  8938  005E04  C07D  F007         	movff	_temperatura+2,___flge@ff2+2
  8939  005E08  C07E  F008         	movff	_temperatura+3,___flge@ff2+3
  8940  005E0C  EC83  F02A         	call	___flge	;wreg free
  8941  005E10  B0D8               	btfsc	status,0,c
  8942  005E12  EF0D  F02F         	goto	u4381
  8943  005E16  EF0F  F02F         	goto	u4380
  8944  005E1A                     u4381:
  8945  005E1A  EF17  F02F         	goto	l4086
  8946  005E1E                     u4380:
  8947  005E1E                     
  8948                           ;main.c: 412:         maximo = temperatura;
  8949  005E1E  C07B  F0A4         	movff	_temperatura,_maximo
  8950  005E22  C07C  F0A5         	movff	_temperatura+1,_maximo+1
  8951  005E26  C07D  F0A6         	movff	_temperatura+2,_maximo+2
  8952  005E2A  C07E  F0A7         	movff	_temperatura+3,_maximo+3
  8953  005E2E                     l4086:
  8954                           
  8955                           ;main.c: 413:     if (temperatura < minimo)
  8956  005E2E  C07B  F001         	movff	_temperatura,___flge@ff1
  8957  005E32  C07C  F002         	movff	_temperatura+1,___flge@ff1+1
  8958  005E36  C07D  F003         	movff	_temperatura+2,___flge@ff1+2
  8959  005E3A  C07E  F004         	movff	_temperatura+3,___flge@ff1+3
  8960  005E3E  C0A0  F005         	movff	_minimo,___flge@ff2
  8961  005E42  C0A1  F006         	movff	_minimo+1,___flge@ff2+1
  8962  005E46  C0A2  F007         	movff	_minimo+2,___flge@ff2+2
  8963  005E4A  C0A3  F008         	movff	_minimo+3,___flge@ff2+3
  8964  005E4E  EC83  F02A         	call	___flge	;wreg free
  8965  005E52  B0D8               	btfsc	status,0,c
  8966  005E54  EF2E  F02F         	goto	u4391
  8967  005E58  EF30  F02F         	goto	u4390
  8968  005E5C                     u4391:
  8969  005E5C  EF38  F02F         	goto	l456
  8970  005E60                     u4390:
  8971  005E60                     
  8972                           ;main.c: 414:         minimo = temperatura;
  8973  005E60  C07B  F0A0         	movff	_temperatura,_minimo
  8974  005E64  C07C  F0A1         	movff	_temperatura+1,_minimo+1
  8975  005E68  C07D  F0A2         	movff	_temperatura+2,_minimo+2
  8976  005E6C  C07E  F0A3         	movff	_temperatura+3,_minimo+3
  8977  005E70                     l456:
  8978  005E70  0012               	return		;funcret
  8979  005E72                     __end_of_atualizar:
  8980                           	callstack 0
  8981                           
  8982 ;; *************** function ___fldiv *****************
  8983 ;; Defined at:
  8984 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  8985 ;; Parameters:    Size  Location     Type
  8986 ;;  b               4   55[COMRAM] void 
  8987 ;;  a               4   59[COMRAM] void 
  8988 ;; Auto vars:     Size  Location     Type
  8989 ;;  grs             4   74[COMRAM] unsigned long 
  8990 ;;  rem             4   67[COMRAM] unsigned long 
  8991 ;;  new_exp         2   72[COMRAM] short 
  8992 ;;  aexp            1   79[COMRAM] unsigned char 
  8993 ;;  bexp            1   78[COMRAM] unsigned char 
  8994 ;;  sign            1   71[COMRAM] unsigned char 
  8995 ;; Return value:  Size  Location     Type
  8996 ;;                  4   55[COMRAM] unsigned char 
  8997 ;; Registers used:
  8998 ;;		wreg, status,2, status,0
  8999 ;; Tracked objects:
  9000 ;;		On entry : 0/0
  9001 ;;		On exit  : 0/0
  9002 ;;		Unchanged: 0/0
  9003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9004 ;;      Params:         8       0       0       0       0       0       0
  9005 ;;      Locals:        13       0       0       0       0       0       0
  9006 ;;      Temps:          4       0       0       0       0       0       0
  9007 ;;      Totals:        25       0       0       0       0       0       0
  9008 ;;Total ram usage:       25 bytes
  9009 ;; Hardware stack levels used: 1
  9010 ;; This function calls:
  9011 ;;		Nothing
  9012 ;; This function is called by:
  9013 ;;		_atualizar
  9014 ;; This function uses a non-reentrant model
  9015 ;;
  9016                           
  9017                           	psect	text50
  9018  00720C                     __ptext50:
  9019                           	callstack 0
  9020  00720C                     ___fldiv:
  9021                           	callstack 28
  9022  00720C  503B               	movf	(___fldiv@b+3)^0,w,c
  9023  00720E  0B80               	andlw	128
  9024  007210  6E48               	movwf	___fldiv@sign^0,c
  9025  007212  503B               	movf	(___fldiv@b+3)^0,w,c
  9026  007214  243B               	addwf	(___fldiv@b+3)^0,w,c
  9027  007216  6E4F               	movwf	___fldiv@bexp^0,c
  9028  007218  AE3A               	btfss	(___fldiv@b+2)^0,7,c
  9029  00721A  EF11  F039         	goto	u3551
  9030  00721E  EF13  F039         	goto	u3550
  9031  007222                     u3551:
  9032  007222  EF14  F039         	goto	l3550
  9033  007226                     u3550:
  9034  007226  804F               	bsf	___fldiv@bexp^0,0,c
  9035  007228                     l3550:
  9036  007228  504F               	movf	___fldiv@bexp^0,w,c
  9037  00722A  B4D8               	btfsc	status,2,c
  9038  00722C  EF1A  F039         	goto	u3561
  9039  007230  EF1C  F039         	goto	u3560
  9040  007234                     u3561:
  9041  007234  EF31  F039         	goto	l3560
  9042  007238                     u3560:
  9043  007238  284F               	incf	___fldiv@bexp^0,w,c
  9044  00723A  A4D8               	btfss	status,2,c
  9045  00723C  EF22  F039         	goto	u3571
  9046  007240  EF24  F039         	goto	u3570
  9047  007244                     u3571:
  9048  007244  EF2C  F039         	goto	l3556
  9049  007248                     u3570:
  9050  007248  0E00               	movlw	0
  9051  00724A  6E38               	movwf	___fldiv@b^0,c
  9052  00724C  0E00               	movlw	0
  9053  00724E  6E39               	movwf	(___fldiv@b+1)^0,c
  9054  007250  0E00               	movlw	0
  9055  007252  6E3A               	movwf	(___fldiv@b+2)^0,c
  9056  007254  0E00               	movlw	0
  9057  007256  6E3B               	movwf	(___fldiv@b+3)^0,c
  9058  007258                     l3556:
  9059  007258  8E3A               	bsf	(___fldiv@b+2)^0,7,c
  9060  00725A  0E00               	movlw	0
  9061  00725C  6E3B               	movwf	(___fldiv@b+3)^0,c
  9062  00725E  EF39  F039         	goto	l3562
  9063  007262                     l3560:
  9064  007262  0E00               	movlw	0
  9065  007264  6E38               	movwf	___fldiv@b^0,c
  9066  007266  0E00               	movlw	0
  9067  007268  6E39               	movwf	(___fldiv@b+1)^0,c
  9068  00726A  0E00               	movlw	0
  9069  00726C  6E3A               	movwf	(___fldiv@b+2)^0,c
  9070  00726E  0E00               	movlw	0
  9071  007270  6E3B               	movwf	(___fldiv@b+3)^0,c
  9072  007272                     l3562:
  9073  007272  503F               	movf	(___fldiv@a+3)^0,w,c
  9074  007274  0B80               	andlw	128
  9075  007276  1A48               	xorwf	___fldiv@sign^0,f,c
  9076  007278  503F               	movf	(___fldiv@a+3)^0,w,c
  9077  00727A  243F               	addwf	(___fldiv@a+3)^0,w,c
  9078  00727C  6E50               	movwf	___fldiv@aexp^0,c
  9079  00727E  AE3E               	btfss	(___fldiv@a+2)^0,7,c
  9080  007280  EF44  F039         	goto	u3581
  9081  007284  EF46  F039         	goto	u3580
  9082  007288                     u3581:
  9083  007288  EF47  F039         	goto	l3570
  9084  00728C                     u3580:
  9085  00728C  8050               	bsf	___fldiv@aexp^0,0,c
  9086  00728E                     l3570:
  9087  00728E  5050               	movf	___fldiv@aexp^0,w,c
  9088  007290  B4D8               	btfsc	status,2,c
  9089  007292  EF4D  F039         	goto	u3591
  9090  007296  EF4F  F039         	goto	u3590
  9091  00729A                     u3591:
  9092  00729A  EF64  F039         	goto	l3580
  9093  00729E                     u3590:
  9094  00729E  2850               	incf	___fldiv@aexp^0,w,c
  9095  0072A0  A4D8               	btfss	status,2,c
  9096  0072A2  EF55  F039         	goto	u3601
  9097  0072A6  EF57  F039         	goto	u3600
  9098  0072AA                     u3601:
  9099  0072AA  EF5F  F039         	goto	l3576
  9100  0072AE                     u3600:
  9101  0072AE  0E00               	movlw	0
  9102  0072B0  6E3C               	movwf	___fldiv@a^0,c
  9103  0072B2  0E00               	movlw	0
  9104  0072B4  6E3D               	movwf	(___fldiv@a+1)^0,c
  9105  0072B6  0E00               	movlw	0
  9106  0072B8  6E3E               	movwf	(___fldiv@a+2)^0,c
  9107  0072BA  0E00               	movlw	0
  9108  0072BC  6E3F               	movwf	(___fldiv@a+3)^0,c
  9109  0072BE                     l3576:
  9110  0072BE  8E3E               	bsf	(___fldiv@a+2)^0,7,c
  9111  0072C0  0E00               	movlw	0
  9112  0072C2  6E3F               	movwf	(___fldiv@a+3)^0,c
  9113  0072C4  EF6C  F039         	goto	l3582
  9114  0072C8                     l3580:
  9115  0072C8  0E00               	movlw	0
  9116  0072CA  6E3C               	movwf	___fldiv@a^0,c
  9117  0072CC  0E00               	movlw	0
  9118  0072CE  6E3D               	movwf	(___fldiv@a+1)^0,c
  9119  0072D0  0E00               	movlw	0
  9120  0072D2  6E3E               	movwf	(___fldiv@a+2)^0,c
  9121  0072D4  0E00               	movlw	0
  9122  0072D6  6E3F               	movwf	(___fldiv@a+3)^0,c
  9123  0072D8                     l3582:
  9124  0072D8  503C               	movf	___fldiv@a^0,w,c
  9125  0072DA  103D               	iorwf	(___fldiv@a+1)^0,w,c
  9126  0072DC  103E               	iorwf	(___fldiv@a+2)^0,w,c
  9127  0072DE  103F               	iorwf	(___fldiv@a+3)^0,w,c
  9128  0072E0  A4D8               	btfss	status,2,c
  9129  0072E2  EF75  F039         	goto	u3611
  9130  0072E6  EF77  F039         	goto	u3610
  9131  0072EA                     u3611:
  9132  0072EA  EF8F  F039         	goto	l3594
  9133  0072EE                     u3610:
  9134  0072EE  0E00               	movlw	0
  9135  0072F0  6E38               	movwf	___fldiv@b^0,c
  9136  0072F2  0E00               	movlw	0
  9137  0072F4  6E39               	movwf	(___fldiv@b+1)^0,c
  9138  0072F6  0E00               	movlw	0
  9139  0072F8  6E3A               	movwf	(___fldiv@b+2)^0,c
  9140  0072FA  0E00               	movlw	0
  9141  0072FC  6E3B               	movwf	(___fldiv@b+3)^0,c
  9142  0072FE  0E80               	movlw	128
  9143  007300  123A               	iorwf	(___fldiv@b+2)^0,f,c
  9144  007302  0E7F               	movlw	127
  9145  007304  123B               	iorwf	(___fldiv@b+3)^0,f,c
  9146  007306                     l3588:
  9147  007306  5048               	movf	___fldiv@sign^0,w,c
  9148  007308  123B               	iorwf	(___fldiv@b+3)^0,f,c
  9149  00730A  C038  F038         	movff	___fldiv@b,?___fldiv
  9150  00730E  C039  F039         	movff	___fldiv@b+1,?___fldiv+1
  9151  007312  C03A  F03A         	movff	___fldiv@b+2,?___fldiv+2
  9152  007316  C03B  F03B         	movff	___fldiv@b+3,?___fldiv+3
  9153  00731A  EFD2  F03A         	goto	l1095
  9154  00731E                     l3594:
  9155  00731E  504F               	movf	___fldiv@bexp^0,w,c
  9156  007320  A4D8               	btfss	status,2,c
  9157  007322  EF95  F039         	goto	u3621
  9158  007326  EF97  F039         	goto	u3620
  9159  00732A                     u3621:
  9160  00732A  EFA1  F039         	goto	l3602
  9161  00732E                     u3620:
  9162  00732E  0E00               	movlw	0
  9163  007330  6E38               	movwf	?___fldiv^0,c
  9164  007332  0E00               	movlw	0
  9165  007334  6E39               	movwf	(?___fldiv+1)^0,c
  9166  007336  0E00               	movlw	0
  9167  007338  6E3A               	movwf	(?___fldiv+2)^0,c
  9168  00733A  0E00               	movlw	0
  9169  00733C  6E3B               	movwf	(?___fldiv+3)^0,c
  9170  00733E  EFD2  F03A         	goto	l1095
  9171  007342                     l3602:
  9172  007342  5050               	movf	___fldiv@aexp^0,w,c
  9173  007344  C04F  F040         	movff	___fldiv@bexp,??___fldiv
  9174  007348  6A41               	clrf	(??___fldiv+1)^0,c
  9175  00734A  5E40               	subwf	??___fldiv^0,f,c
  9176  00734C  0E00               	movlw	0
  9177  00734E  5A41               	subwfb	(??___fldiv+1)^0,f,c
  9178  007350  0E7F               	movlw	127
  9179  007352  2440               	addwf	??___fldiv^0,w,c
  9180  007354  6E49               	movwf	___fldiv@new_exp^0,c
  9181  007356  0E00               	movlw	0
  9182  007358  2041               	addwfc	(??___fldiv+1)^0,w,c
  9183  00735A  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
  9184  00735C  C038  F044         	movff	___fldiv@b,___fldiv@rem
  9185  007360  C039  F045         	movff	___fldiv@b+1,___fldiv@rem+1
  9186  007364  C03A  F046         	movff	___fldiv@b+2,___fldiv@rem+2
  9187  007368  C03B  F047         	movff	___fldiv@b+3,___fldiv@rem+3
  9188  00736C  0E00               	movlw	0
  9189  00736E  6E38               	movwf	___fldiv@b^0,c
  9190  007370  0E00               	movlw	0
  9191  007372  6E39               	movwf	(___fldiv@b+1)^0,c
  9192  007374  0E00               	movlw	0
  9193  007376  6E3A               	movwf	(___fldiv@b+2)^0,c
  9194  007378  0E00               	movlw	0
  9195  00737A  6E3B               	movwf	(___fldiv@b+3)^0,c
  9196  00737C  0E00               	movlw	0
  9197  00737E  6E4B               	movwf	___fldiv@grs^0,c
  9198  007380  0E00               	movlw	0
  9199  007382  6E4C               	movwf	(___fldiv@grs+1)^0,c
  9200  007384  0E00               	movlw	0
  9201  007386  6E4D               	movwf	(___fldiv@grs+2)^0,c
  9202  007388  0E00               	movlw	0
  9203  00738A  6E4E               	movwf	(___fldiv@grs+3)^0,c
  9204  00738C  0E00               	movlw	0
  9205  00738E  6E50               	movwf	___fldiv@aexp^0,c
  9206  007390  EF02  F03A         	goto	l1097
  9207  007394                     l3612:
  9208  007394  5050               	movf	___fldiv@aexp^0,w,c
  9209  007396  B4D8               	btfsc	status,2,c
  9210  007398  EFD0  F039         	goto	u3631
  9211  00739C  EFD2  F039         	goto	u3630
  9212  0073A0                     u3631:
  9213  0073A0  EFE9  F039         	goto	l3620
  9214  0073A4                     u3630:
  9215  0073A4  90D8               	bcf	status,0,c
  9216  0073A6  3644               	rlcf	___fldiv@rem^0,f,c
  9217  0073A8  3645               	rlcf	(___fldiv@rem+1)^0,f,c
  9218  0073AA  3646               	rlcf	(___fldiv@rem+2)^0,f,c
  9219  0073AC  3647               	rlcf	(___fldiv@rem+3)^0,f,c
  9220  0073AE  90D8               	bcf	status,0,c
  9221  0073B0  3638               	rlcf	___fldiv@b^0,f,c
  9222  0073B2  3639               	rlcf	(___fldiv@b+1)^0,f,c
  9223  0073B4  363A               	rlcf	(___fldiv@b+2)^0,f,c
  9224  0073B6  363B               	rlcf	(___fldiv@b+3)^0,f,c
  9225  0073B8  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
  9226  0073BA  EFE1  F039         	goto	u3641
  9227  0073BE  EFE3  F039         	goto	u3640
  9228  0073C2                     u3641:
  9229  0073C2  EFE4  F039         	goto	l1100
  9230  0073C6                     u3640:
  9231  0073C6  8038               	bsf	___fldiv@b^0,0,c
  9232  0073C8                     l1100:
  9233  0073C8  90D8               	bcf	status,0,c
  9234  0073CA  364B               	rlcf	___fldiv@grs^0,f,c
  9235  0073CC  364C               	rlcf	(___fldiv@grs+1)^0,f,c
  9236  0073CE  364D               	rlcf	(___fldiv@grs+2)^0,f,c
  9237  0073D0  364E               	rlcf	(___fldiv@grs+3)^0,f,c
  9238  0073D2                     l3620:
  9239  0073D2  503C               	movf	___fldiv@a^0,w,c
  9240  0073D4  5C44               	subwf	___fldiv@rem^0,w,c
  9241  0073D6  503D               	movf	(___fldiv@a+1)^0,w,c
  9242  0073D8  5845               	subwfb	(___fldiv@rem+1)^0,w,c
  9243  0073DA  503E               	movf	(___fldiv@a+2)^0,w,c
  9244  0073DC  5846               	subwfb	(___fldiv@rem+2)^0,w,c
  9245  0073DE  503F               	movf	(___fldiv@a+3)^0,w,c
  9246  0073E0  5847               	subwfb	(___fldiv@rem+3)^0,w,c
  9247  0073E2  A0D8               	btfss	status,0,c
  9248  0073E4  EFF6  F039         	goto	u3651
  9249  0073E8  EFF8  F039         	goto	u3650
  9250  0073EC                     u3651:
  9251  0073EC  EF01  F03A         	goto	l3626
  9252  0073F0                     u3650:
  9253  0073F0  8C4E               	bsf	(___fldiv@grs+3)^0,6,c
  9254  0073F2  503C               	movf	___fldiv@a^0,w,c
  9255  0073F4  5E44               	subwf	___fldiv@rem^0,f,c
  9256  0073F6  503D               	movf	(___fldiv@a+1)^0,w,c
  9257  0073F8  5A45               	subwfb	(___fldiv@rem+1)^0,f,c
  9258  0073FA  503E               	movf	(___fldiv@a+2)^0,w,c
  9259  0073FC  5A46               	subwfb	(___fldiv@rem+2)^0,f,c
  9260  0073FE  503F               	movf	(___fldiv@a+3)^0,w,c
  9261  007400  5A47               	subwfb	(___fldiv@rem+3)^0,f,c
  9262  007402                     l3626:
  9263  007402  2A50               	incf	___fldiv@aexp^0,f,c
  9264  007404                     l1097:
  9265  007404  0E19               	movlw	25
  9266  007406  6450               	cpfsgt	___fldiv@aexp^0,c
  9267  007408  EF08  F03A         	goto	u3661
  9268  00740C  EF0A  F03A         	goto	u3660
  9269  007410                     u3661:
  9270  007410  EFCA  F039         	goto	l3612
  9271  007414                     u3660:
  9272  007414  5044               	movf	___fldiv@rem^0,w,c
  9273  007416  1045               	iorwf	(___fldiv@rem+1)^0,w,c
  9274  007418  1046               	iorwf	(___fldiv@rem+2)^0,w,c
  9275  00741A  1047               	iorwf	(___fldiv@rem+3)^0,w,c
  9276  00741C  B4D8               	btfsc	status,2,c
  9277  00741E  EF13  F03A         	goto	u3671
  9278  007422  EF15  F03A         	goto	u3670
  9279  007426                     u3671:
  9280  007426  EF2D  F03A         	goto	l3638
  9281  00742A                     u3670:
  9282  00742A  804B               	bsf	___fldiv@grs^0,0,c
  9283  00742C  EF2D  F03A         	goto	l3638
  9284  007430                     l3632:
  9285  007430  90D8               	bcf	status,0,c
  9286  007432  3638               	rlcf	___fldiv@b^0,f,c
  9287  007434  3639               	rlcf	(___fldiv@b+1)^0,f,c
  9288  007436  363A               	rlcf	(___fldiv@b+2)^0,f,c
  9289  007438  363B               	rlcf	(___fldiv@b+3)^0,f,c
  9290  00743A  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
  9291  00743C  EF22  F03A         	goto	u3681
  9292  007440  EF24  F03A         	goto	u3680
  9293  007444                     u3681:
  9294  007444  EF25  F03A         	goto	l1106
  9295  007448                     u3680:
  9296  007448  8038               	bsf	___fldiv@b^0,0,c
  9297  00744A                     l1106:
  9298  00744A  90D8               	bcf	status,0,c
  9299  00744C  364B               	rlcf	___fldiv@grs^0,f,c
  9300  00744E  364C               	rlcf	(___fldiv@grs+1)^0,f,c
  9301  007450  364D               	rlcf	(___fldiv@grs+2)^0,f,c
  9302  007452  364E               	rlcf	(___fldiv@grs+3)^0,f,c
  9303  007454  0649               	decf	___fldiv@new_exp^0,f,c
  9304  007456  A0D8               	btfss	status,0,c
  9305  007458  064A               	decf	(___fldiv@new_exp+1)^0,f,c
  9306  00745A                     l3638:
  9307  00745A  AE3A               	btfss	(___fldiv@b+2)^0,7,c
  9308  00745C  EF32  F03A         	goto	u3691
  9309  007460  EF34  F03A         	goto	u3690
  9310  007464                     u3691:
  9311  007464  EF18  F03A         	goto	l3632
  9312  007468                     u3690:
  9313  007468  0E00               	movlw	0
  9314  00746A  6E50               	movwf	___fldiv@aexp^0,c
  9315  00746C  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
  9316  00746E  EF3B  F03A         	goto	u3701
  9317  007472  EF3D  F03A         	goto	u3700
  9318  007476                     u3701:
  9319  007476  EF61  F03A         	goto	l1108
  9320  00747A                     u3700:
  9321  00747A  0EFF               	movlw	255
  9322  00747C  144B               	andwf	___fldiv@grs^0,w,c
  9323  00747E  6E40               	movwf	??___fldiv^0,c
  9324  007480  0EFF               	movlw	255
  9325  007482  144C               	andwf	(___fldiv@grs+1)^0,w,c
  9326  007484  6E41               	movwf	(??___fldiv+1)^0,c
  9327  007486  0EFF               	movlw	255
  9328  007488  144D               	andwf	(___fldiv@grs+2)^0,w,c
  9329  00748A  6E42               	movwf	(??___fldiv+2)^0,c
  9330  00748C  0E7F               	movlw	127
  9331  00748E  144E               	andwf	(___fldiv@grs+3)^0,w,c
  9332  007490  6E43               	movwf	(??___fldiv+3)^0,c
  9333  007492  5040               	movf	??___fldiv^0,w,c
  9334  007494  1041               	iorwf	(??___fldiv+1)^0,w,c
  9335  007496  1042               	iorwf	(??___fldiv+2)^0,w,c
  9336  007498  1043               	iorwf	(??___fldiv+3)^0,w,c
  9337  00749A  B4D8               	btfsc	status,2,c
  9338  00749C  EF52  F03A         	goto	u3711
  9339  0074A0  EF54  F03A         	goto	u3710
  9340  0074A4                     u3711:
  9341  0074A4  EF58  F03A         	goto	l1109
  9342  0074A8                     u3710:
  9343  0074A8                     l3646:
  9344  0074A8  0E01               	movlw	1
  9345  0074AA  6E50               	movwf	___fldiv@aexp^0,c
  9346  0074AC  EF61  F03A         	goto	l1108
  9347  0074B0                     l1109:
  9348  0074B0  A038               	btfss	___fldiv@b^0,0,c
  9349  0074B2  EF5D  F03A         	goto	u3721
  9350  0074B6  EF5F  F03A         	goto	u3720
  9351  0074BA                     u3721:
  9352  0074BA  EF61  F03A         	goto	l1108
  9353  0074BE                     u3720:
  9354  0074BE  EF54  F03A         	goto	l3646
  9355  0074C2                     l1108:
  9356  0074C2  5050               	movf	___fldiv@aexp^0,w,c
  9357  0074C4  B4D8               	btfsc	status,2,c
  9358  0074C6  EF67  F03A         	goto	u3731
  9359  0074CA  EF69  F03A         	goto	u3730
  9360  0074CE                     u3731:
  9361  0074CE  EF8D  F03A         	goto	l3658
  9362  0074D2                     u3730:
  9363  0074D2  0E01               	movlw	1
  9364  0074D4  2638               	addwf	___fldiv@b^0,f,c
  9365  0074D6  0E00               	movlw	0
  9366  0074D8  2239               	addwfc	(___fldiv@b+1)^0,f,c
  9367  0074DA  223A               	addwfc	(___fldiv@b+2)^0,f,c
  9368  0074DC  223B               	addwfc	(___fldiv@b+3)^0,f,c
  9369  0074DE  A03B               	btfss	(___fldiv@b+3)^0,0,c
  9370  0074E0  EF74  F03A         	goto	u3741
  9371  0074E4  EF76  F03A         	goto	u3740
  9372  0074E8                     u3741:
  9373  0074E8  EF8D  F03A         	goto	l3658
  9374  0074EC                     u3740:
  9375  0074EC  C038  F040         	movff	___fldiv@b,??___fldiv
  9376  0074F0  C039  F041         	movff	___fldiv@b+1,??___fldiv+1
  9377  0074F4  C03A  F042         	movff	___fldiv@b+2,??___fldiv+2
  9378  0074F8  C03B  F043         	movff	___fldiv@b+3,??___fldiv+3
  9379  0074FC  3443               	rlcf	(??___fldiv+3)^0,w,c
  9380  0074FE  3243               	rrcf	(??___fldiv+3)^0,f,c
  9381  007500  3242               	rrcf	(??___fldiv+2)^0,f,c
  9382  007502  3241               	rrcf	(??___fldiv+1)^0,f,c
  9383  007504  3240               	rrcf	??___fldiv^0,f,c
  9384  007506  C040  F038         	movff	??___fldiv,___fldiv@b
  9385  00750A  C041  F039         	movff	??___fldiv+1,___fldiv@b+1
  9386  00750E  C042  F03A         	movff	??___fldiv+2,___fldiv@b+2
  9387  007512  C043  F03B         	movff	??___fldiv+3,___fldiv@b+3
  9388  007516  4A49               	infsnz	___fldiv@new_exp^0,f,c
  9389  007518  2A4A               	incf	(___fldiv@new_exp+1)^0,f,c
  9390  00751A                     l3658:
  9391  00751A  BE4A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9392  00751C  EF98  F03A         	goto	u3751
  9393  007520  504A               	movf	(___fldiv@new_exp+1)^0,w,c
  9394  007522  E108               	bnz	u3750
  9395  007524  2849               	incf	___fldiv@new_exp^0,w,c
  9396  007526  A0D8               	btfss	status,0,c
  9397  007528  EF98  F03A         	goto	u3751
  9398  00752C  EF9A  F03A         	goto	u3750
  9399  007530                     u3751:
  9400  007530  EFA5  F03A         	goto	l3662
  9401  007534                     u3750:
  9402  007534  0E00               	movlw	0
  9403  007536  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
  9404  007538  6849               	setf	___fldiv@new_exp^0,c
  9405  00753A  0E00               	movlw	0
  9406  00753C  6E38               	movwf	___fldiv@b^0,c
  9407  00753E  0E00               	movlw	0
  9408  007540  6E39               	movwf	(___fldiv@b+1)^0,c
  9409  007542  0E00               	movlw	0
  9410  007544  6E3A               	movwf	(___fldiv@b+2)^0,c
  9411  007546  0E00               	movlw	0
  9412  007548  6E3B               	movwf	(___fldiv@b+3)^0,c
  9413  00754A                     l3662:
  9414  00754A  BE4A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9415  00754C  EFB2  F03A         	goto	u3760
  9416  007550  504A               	movf	(___fldiv@new_exp+1)^0,w,c
  9417  007552  E106               	bnz	u3761
  9418  007554  0449               	decf	___fldiv@new_exp^0,w,c
  9419  007556  B0D8               	btfsc	status,0,c
  9420  007558  EFB0  F03A         	goto	u3761
  9421  00755C  EFB2  F03A         	goto	u3760
  9422  007560                     u3761:
  9423  007560  EFC0  F03A         	goto	l3666
  9424  007564                     u3760:
  9425  007564  0E00               	movlw	0
  9426  007566  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
  9427  007568  0E00               	movlw	0
  9428  00756A  6E49               	movwf	___fldiv@new_exp^0,c
  9429  00756C  0E00               	movlw	0
  9430  00756E  6E38               	movwf	___fldiv@b^0,c
  9431  007570  0E00               	movlw	0
  9432  007572  6E39               	movwf	(___fldiv@b+1)^0,c
  9433  007574  0E00               	movlw	0
  9434  007576  6E3A               	movwf	(___fldiv@b+2)^0,c
  9435  007578  0E00               	movlw	0
  9436  00757A  6E3B               	movwf	(___fldiv@b+3)^0,c
  9437  00757C  0E00               	movlw	0
  9438  00757E  6E48               	movwf	___fldiv@sign^0,c
  9439  007580                     l3666:
  9440  007580  C049  F04F         	movff	___fldiv@new_exp,___fldiv@bexp
  9441  007584  A04F               	btfss	___fldiv@bexp^0,0,c
  9442  007586  EFC7  F03A         	goto	u3771
  9443  00758A  EFC9  F03A         	goto	u3770
  9444  00758E                     u3771:
  9445  00758E  EFCC  F03A         	goto	l3672
  9446  007592                     u3770:
  9447  007592  8E3A               	bsf	(___fldiv@b+2)^0,7,c
  9448  007594  EFCD  F03A         	goto	l3674
  9449  007598                     l3672:
  9450  007598  9E3A               	bcf	(___fldiv@b+2)^0,7,c
  9451  00759A                     l3674:
  9452  00759A  90D8               	bcf	status,0,c
  9453  00759C  304F               	rrcf	___fldiv@bexp^0,w,c
  9454  00759E  6E3B               	movwf	(___fldiv@b+3)^0,c
  9455  0075A0  EF83  F039         	goto	l3588
  9456  0075A4                     l1095:
  9457  0075A4  0012               	return		;funcret
  9458  0075A6                     __end_of___fldiv:
  9459                           	callstack 0
  9460                           
  9461 ;; *************** function ___fladd *****************
  9462 ;; Defined at:
  9463 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  9464 ;; Parameters:    Size  Location     Type
  9465 ;;  b               4   39[COMRAM] unsigned char 
  9466 ;;  a               4   43[COMRAM] unsigned char 
  9467 ;; Auto vars:     Size  Location     Type
  9468 ;;  grs             1   54[COMRAM] unsigned char 
  9469 ;;  bexp            1   53[COMRAM] unsigned char 
  9470 ;;  aexp            1   52[COMRAM] unsigned char 
  9471 ;;  signs           1   51[COMRAM] unsigned char 
  9472 ;; Return value:  Size  Location     Type
  9473 ;;                  4   39[COMRAM] unsigned char 
  9474 ;; Registers used:
  9475 ;;		wreg, status,2, status,0
  9476 ;; Tracked objects:
  9477 ;;		On entry : 0/0
  9478 ;;		On exit  : 0/0
  9479 ;;		Unchanged: 0/0
  9480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9481 ;;      Params:         8       0       0       0       0       0       0
  9482 ;;      Locals:         4       0       0       0       0       0       0
  9483 ;;      Temps:          4       0       0       0       0       0       0
  9484 ;;      Totals:        16       0       0       0       0       0       0
  9485 ;;Total ram usage:       16 bytes
  9486 ;; Hardware stack levels used: 1
  9487 ;; This function calls:
  9488 ;;		Nothing
  9489 ;; This function is called by:
  9490 ;;		_atualizar
  9491 ;;		_aquece
  9492 ;;		_fecharPorta
  9493 ;;		_main
  9494 ;;		___flsub
  9495 ;; This function uses a non-reentrant model
  9496 ;;
  9497                           
  9498                           	psect	text51
  9499  0079D0                     __ptext51:
  9500                           	callstack 0
  9501  0079D0                     ___fladd:
  9502                           	callstack 28
  9503  0079D0  502B               	movf	(___fladd@b+3)^0,w,c
  9504  0079D2  0B80               	andlw	128
  9505  0079D4  6E34               	movwf	___fladd@signs^0,c
  9506  0079D6  502B               	movf	(___fladd@b+3)^0,w,c
  9507  0079D8  242B               	addwf	(___fladd@b+3)^0,w,c
  9508  0079DA  6E36               	movwf	___fladd@bexp^0,c
  9509  0079DC  AE2A               	btfss	(___fladd@b+2)^0,7,c
  9510  0079DE  EFF3  F03C         	goto	u3161
  9511  0079E2  EFF5  F03C         	goto	u3160
  9512  0079E6                     u3161:
  9513  0079E6  EFF6  F03C         	goto	l3348
  9514  0079EA                     u3160:
  9515  0079EA  8036               	bsf	___fladd@bexp^0,0,c
  9516  0079EC                     l3348:
  9517  0079EC  5036               	movf	___fladd@bexp^0,w,c
  9518  0079EE  B4D8               	btfsc	status,2,c
  9519  0079F0  EFFC  F03C         	goto	u3171
  9520  0079F4  EFFE  F03C         	goto	u3170
  9521  0079F8                     u3171:
  9522  0079F8  EF13  F03D         	goto	l3358
  9523  0079FC                     u3170:
  9524  0079FC  2836               	incf	___fladd@bexp^0,w,c
  9525  0079FE  A4D8               	btfss	status,2,c
  9526  007A00  EF04  F03D         	goto	u3181
  9527  007A04  EF06  F03D         	goto	u3180
  9528  007A08                     u3181:
  9529  007A08  EF0E  F03D         	goto	l3354
  9530  007A0C                     u3180:
  9531  007A0C  0E00               	movlw	0
  9532  007A0E  6E28               	movwf	___fladd@b^0,c
  9533  007A10  0E00               	movlw	0
  9534  007A12  6E29               	movwf	(___fladd@b+1)^0,c
  9535  007A14  0E00               	movlw	0
  9536  007A16  6E2A               	movwf	(___fladd@b+2)^0,c
  9537  007A18  0E00               	movlw	0
  9538  007A1A  6E2B               	movwf	(___fladd@b+3)^0,c
  9539  007A1C                     l3354:
  9540  007A1C  8E2A               	bsf	(___fladd@b+2)^0,7,c
  9541  007A1E  0E00               	movlw	0
  9542  007A20  6E2B               	movwf	(___fladd@b+3)^0,c
  9543  007A22  EF1B  F03D         	goto	l3360
  9544  007A26                     l3358:
  9545  007A26  0E00               	movlw	0
  9546  007A28  6E28               	movwf	___fladd@b^0,c
  9547  007A2A  0E00               	movlw	0
  9548  007A2C  6E29               	movwf	(___fladd@b+1)^0,c
  9549  007A2E  0E00               	movlw	0
  9550  007A30  6E2A               	movwf	(___fladd@b+2)^0,c
  9551  007A32  0E00               	movlw	0
  9552  007A34  6E2B               	movwf	(___fladd@b+3)^0,c
  9553  007A36                     l3360:
  9554  007A36  502F               	movf	(___fladd@a+3)^0,w,c
  9555  007A38  0B80               	andlw	128
  9556  007A3A  6E35               	movwf	___fladd@aexp^0,c
  9557  007A3C  5034               	movf	___fladd@signs^0,w,c
  9558  007A3E  1835               	xorwf	___fladd@aexp^0,w,c
  9559  007A40  B4D8               	btfsc	status,2,c
  9560  007A42  EF25  F03D         	goto	u3191
  9561  007A46  EF27  F03D         	goto	u3190
  9562  007A4A                     u3191:
  9563  007A4A  EF28  F03D         	goto	l3366
  9564  007A4E                     u3190:
  9565  007A4E  8C34               	bsf	___fladd@signs^0,6,c
  9566  007A50                     l3366:
  9567  007A50  502F               	movf	(___fladd@a+3)^0,w,c
  9568  007A52  242F               	addwf	(___fladd@a+3)^0,w,c
  9569  007A54  6E35               	movwf	___fladd@aexp^0,c
  9570  007A56  AE2E               	btfss	(___fladd@a+2)^0,7,c
  9571  007A58  EF30  F03D         	goto	u3201
  9572  007A5C  EF32  F03D         	goto	u3200
  9573  007A60                     u3201:
  9574  007A60  EF33  F03D         	goto	l3372
  9575  007A64                     u3200:
  9576  007A64  8035               	bsf	___fladd@aexp^0,0,c
  9577  007A66                     l3372:
  9578  007A66  5035               	movf	___fladd@aexp^0,w,c
  9579  007A68  B4D8               	btfsc	status,2,c
  9580  007A6A  EF39  F03D         	goto	u3211
  9581  007A6E  EF3B  F03D         	goto	u3210
  9582  007A72                     u3211:
  9583  007A72  EF50  F03D         	goto	l3382
  9584  007A76                     u3210:
  9585  007A76  2835               	incf	___fladd@aexp^0,w,c
  9586  007A78  A4D8               	btfss	status,2,c
  9587  007A7A  EF41  F03D         	goto	u3221
  9588  007A7E  EF43  F03D         	goto	u3220
  9589  007A82                     u3221:
  9590  007A82  EF4B  F03D         	goto	l3378
  9591  007A86                     u3220:
  9592  007A86  0E00               	movlw	0
  9593  007A88  6E2C               	movwf	___fladd@a^0,c
  9594  007A8A  0E00               	movlw	0
  9595  007A8C  6E2D               	movwf	(___fladd@a+1)^0,c
  9596  007A8E  0E00               	movlw	0
  9597  007A90  6E2E               	movwf	(___fladd@a+2)^0,c
  9598  007A92  0E00               	movlw	0
  9599  007A94  6E2F               	movwf	(___fladd@a+3)^0,c
  9600  007A96                     l3378:
  9601  007A96  8E2E               	bsf	(___fladd@a+2)^0,7,c
  9602  007A98  0E00               	movlw	0
  9603  007A9A  6E2F               	movwf	(___fladd@a+3)^0,c
  9604  007A9C  EF58  F03D         	goto	l3384
  9605  007AA0                     l3382:
  9606  007AA0  0E00               	movlw	0
  9607  007AA2  6E2C               	movwf	___fladd@a^0,c
  9608  007AA4  0E00               	movlw	0
  9609  007AA6  6E2D               	movwf	(___fladd@a+1)^0,c
  9610  007AA8  0E00               	movlw	0
  9611  007AAA  6E2E               	movwf	(___fladd@a+2)^0,c
  9612  007AAC  0E00               	movlw	0
  9613  007AAE  6E2F               	movwf	(___fladd@a+3)^0,c
  9614  007AB0                     l3384:
  9615  007AB0  5036               	movf	___fladd@bexp^0,w,c
  9616  007AB2  5C35               	subwf	___fladd@aexp^0,w,c
  9617  007AB4  B0D8               	btfsc	status,0,c
  9618  007AB6  EF5F  F03D         	goto	u3231
  9619  007ABA  EF61  F03D         	goto	u3230
  9620  007ABE                     u3231:
  9621  007ABE  EF88  F03D         	goto	l3420
  9622  007AC2                     u3230:
  9623  007AC2  AC34               	btfss	___fladd@signs^0,6,c
  9624  007AC4  EF66  F03D         	goto	u3241
  9625  007AC8  EF68  F03D         	goto	u3240
  9626  007ACC                     u3241:
  9627  007ACC  EF6A  F03D         	goto	l3390
  9628  007AD0                     u3240:
  9629  007AD0  0E80               	movlw	128
  9630  007AD2  1A34               	xorwf	___fladd@signs^0,f,c
  9631  007AD4                     l3390:
  9632  007AD4  C036  F037         	movff	___fladd@bexp,___fladd@grs
  9633  007AD8  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  9634  007ADC  C037  F035         	movff	___fladd@grs,___fladd@aexp
  9635  007AE0  C028  F037         	movff	___fladd@b,___fladd@grs
  9636  007AE4  C02C  F028         	movff	___fladd@a,___fladd@b
  9637  007AE8  C037  F02C         	movff	___fladd@grs,___fladd@a
  9638  007AEC  C029  F037         	movff	___fladd@b+1,___fladd@grs
  9639  007AF0  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  9640  007AF4  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  9641  007AF8  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  9642  007AFC  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  9643  007B00  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  9644  007B04  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  9645  007B08  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  9646  007B0C  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  9647  007B10                     l3420:
  9648  007B10  0E00               	movlw	0
  9649  007B12  6E37               	movwf	___fladd@grs^0,c
  9650  007B14  5036               	movf	___fladd@bexp^0,w,c
  9651  007B16  C035  F030         	movff	___fladd@aexp,??___fladd
  9652  007B1A  6A31               	clrf	(??___fladd+1)^0,c
  9653  007B1C  5E30               	subwf	??___fladd^0,f,c
  9654  007B1E  0E00               	movlw	0
  9655  007B20  5A31               	subwfb	(??___fladd+1)^0,f,c
  9656  007B22  BE31               	btfsc	(??___fladd+1)^0,7,c
  9657  007B24  EF9D  F03D         	goto	u3251
  9658  007B28  5031               	movf	(??___fladd+1)^0,w,c
  9659  007B2A  E109               	bnz	u3250
  9660  007B2C  0E1A               	movlw	26
  9661  007B2E  5C30               	subwf	??___fladd^0,w,c
  9662  007B30  A0D8               	btfss	status,0,c
  9663  007B32  EF9D  F03D         	goto	u3251
  9664  007B36  EF9F  F03D         	goto	u3250
  9665  007B3A                     u3251:
  9666  007B3A  EFD6  F03D         	goto	l1042
  9667  007B3E                     u3250:
  9668  007B3E  5028               	movf	___fladd@b^0,w,c
  9669  007B40  1029               	iorwf	(___fladd@b+1)^0,w,c
  9670  007B42  102A               	iorwf	(___fladd@b+2)^0,w,c
  9671  007B44  102B               	iorwf	(___fladd@b+3)^0,w,c
  9672  007B46  A4D8               	btfss	status,2,c
  9673  007B48  EFA8  F03D         	goto	u3261
  9674  007B4C  EFAB  F03D         	goto	u3260
  9675  007B50                     u3261:
  9676  007B50  0E01               	movlw	1
  9677  007B52  EFAC  F03D         	goto	u3270
  9678  007B56                     u3260:
  9679  007B56  0E00               	movlw	0
  9680  007B58                     u3270:
  9681  007B58  6E37               	movwf	___fladd@grs^0,c
  9682  007B5A  0E00               	movlw	0
  9683  007B5C  6E28               	movwf	___fladd@b^0,c
  9684  007B5E  0E00               	movlw	0
  9685  007B60  6E29               	movwf	(___fladd@b+1)^0,c
  9686  007B62  0E00               	movlw	0
  9687  007B64  6E2A               	movwf	(___fladd@b+2)^0,c
  9688  007B66  0E00               	movlw	0
  9689  007B68  6E2B               	movwf	(___fladd@b+3)^0,c
  9690  007B6A  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  9691  007B6E  EFDF  F03D         	goto	l1041
  9692  007B72                     l1043:
  9693  007B72  A037               	btfss	___fladd@grs^0,0,c
  9694  007B74  EFBE  F03D         	goto	u3281
  9695  007B78  EFC0  F03D         	goto	u3280
  9696  007B7C                     u3281:
  9697  007B7C  EFC6  F03D         	goto	l3432
  9698  007B80                     u3280:
  9699  007B80  90D8               	bcf	status,0,c
  9700  007B82  3037               	rrcf	___fladd@grs^0,w,c
  9701  007B84  0901               	iorlw	1
  9702  007B86  6E37               	movwf	___fladd@grs^0,c
  9703  007B88  EFC8  F03D         	goto	l3434
  9704  007B8C                     l3432:
  9705  007B8C  90D8               	bcf	status,0,c
  9706  007B8E  3237               	rrcf	___fladd@grs^0,f,c
  9707  007B90                     l3434:
  9708  007B90  A028               	btfss	___fladd@b^0,0,c
  9709  007B92  EFCD  F03D         	goto	u3291
  9710  007B96  EFCF  F03D         	goto	u3290
  9711  007B9A                     u3291:
  9712  007B9A  EFD0  F03D         	goto	l3438
  9713  007B9E                     u3290:
  9714  007B9E  8E37               	bsf	___fladd@grs^0,7,c
  9715  007BA0                     l3438:
  9716  007BA0  342B               	rlcf	(___fladd@b+3)^0,w,c
  9717  007BA2  322B               	rrcf	(___fladd@b+3)^0,f,c
  9718  007BA4  322A               	rrcf	(___fladd@b+2)^0,f,c
  9719  007BA6  3229               	rrcf	(___fladd@b+1)^0,f,c
  9720  007BA8  3228               	rrcf	___fladd@b^0,f,c
  9721  007BAA  2A36               	incf	___fladd@bexp^0,f,c
  9722  007BAC                     l1042:
  9723  007BAC  5035               	movf	___fladd@aexp^0,w,c
  9724  007BAE  5C36               	subwf	___fladd@bexp^0,w,c
  9725  007BB0  A0D8               	btfss	status,0,c
  9726  007BB2  EFDD  F03D         	goto	u3301
  9727  007BB6  EFDF  F03D         	goto	u3300
  9728  007BBA                     u3301:
  9729  007BBA  EFB9  F03D         	goto	l1043
  9730  007BBE                     u3300:
  9731  007BBE                     l1041:
  9732  007BBE  BC34               	btfsc	___fladd@signs^0,6,c
  9733  007BC0  EFE4  F03D         	goto	u3311
  9734  007BC4  EFE6  F03D         	goto	u3310
  9735  007BC8                     u3311:
  9736  007BC8  EF26  F03E         	goto	l3466
  9737  007BCC                     u3310:
  9738  007BCC  5036               	movf	___fladd@bexp^0,w,c
  9739  007BCE  A4D8               	btfss	status,2,c
  9740  007BD0  EFEC  F03D         	goto	u3321
  9741  007BD4  EFEE  F03D         	goto	u3320
  9742  007BD8                     u3321:
  9743  007BD8  EFF8  F03D         	goto	l3448
  9744  007BDC                     u3320:
  9745  007BDC  0E00               	movlw	0
  9746  007BDE  6E28               	movwf	?___fladd^0,c
  9747  007BE0  0E00               	movlw	0
  9748  007BE2  6E29               	movwf	(?___fladd+1)^0,c
  9749  007BE4  0E00               	movlw	0
  9750  007BE6  6E2A               	movwf	(?___fladd+2)^0,c
  9751  007BE8  0E00               	movlw	0
  9752  007BEA  6E2B               	movwf	(?___fladd+3)^0,c
  9753  007BEC  EF47  F03F         	goto	l1050
  9754  007BF0                     l3448:
  9755  007BF0  502C               	movf	___fladd@a^0,w,c
  9756  007BF2  2628               	addwf	___fladd@b^0,f,c
  9757  007BF4  502D               	movf	(___fladd@a+1)^0,w,c
  9758  007BF6  2229               	addwfc	(___fladd@b+1)^0,f,c
  9759  007BF8  502E               	movf	(___fladd@a+2)^0,w,c
  9760  007BFA  222A               	addwfc	(___fladd@b+2)^0,f,c
  9761  007BFC  502F               	movf	(___fladd@a+3)^0,w,c
  9762  007BFE  222B               	addwfc	(___fladd@b+3)^0,f,c
  9763  007C00  A02B               	btfss	(___fladd@b+3)^0,0,c
  9764  007C02  EF05  F03E         	goto	u3331
  9765  007C06  EF07  F03E         	goto	u3330
  9766  007C0A                     u3331:
  9767  007C0A  EFB3  F03E         	goto	l3502
  9768  007C0E                     u3330:
  9769  007C0E  A037               	btfss	___fladd@grs^0,0,c
  9770  007C10  EF0C  F03E         	goto	u3341
  9771  007C14  EF0E  F03E         	goto	u3340
  9772  007C18                     u3341:
  9773  007C18  EF14  F03E         	goto	l3456
  9774  007C1C                     u3340:
  9775  007C1C  90D8               	bcf	status,0,c
  9776  007C1E  3037               	rrcf	___fladd@grs^0,w,c
  9777  007C20  0901               	iorlw	1
  9778  007C22  6E37               	movwf	___fladd@grs^0,c
  9779  007C24  EF16  F03E         	goto	l3458
  9780  007C28                     l3456:
  9781  007C28  90D8               	bcf	status,0,c
  9782  007C2A  3237               	rrcf	___fladd@grs^0,f,c
  9783  007C2C                     l3458:
  9784  007C2C  A028               	btfss	___fladd@b^0,0,c
  9785  007C2E  EF1B  F03E         	goto	u3351
  9786  007C32  EF1D  F03E         	goto	u3350
  9787  007C36                     u3351:
  9788  007C36  EF1E  F03E         	goto	l3462
  9789  007C3A                     u3350:
  9790  007C3A  8E37               	bsf	___fladd@grs^0,7,c
  9791  007C3C                     l3462:
  9792  007C3C  342B               	rlcf	(___fladd@b+3)^0,w,c
  9793  007C3E  322B               	rrcf	(___fladd@b+3)^0,f,c
  9794  007C40  322A               	rrcf	(___fladd@b+2)^0,f,c
  9795  007C42  3229               	rrcf	(___fladd@b+1)^0,f,c
  9796  007C44  3228               	rrcf	___fladd@b^0,f,c
  9797  007C46  2A36               	incf	___fladd@bexp^0,f,c
  9798  007C48  EFB3  F03E         	goto	l3502
  9799  007C4C                     l3466:
  9800  007C4C  502C               	movf	___fladd@a^0,w,c
  9801  007C4E  5C28               	subwf	___fladd@b^0,w,c
  9802  007C50  502D               	movf	(___fladd@a+1)^0,w,c
  9803  007C52  5829               	subwfb	(___fladd@b+1)^0,w,c
  9804  007C54  502E               	movf	(___fladd@a+2)^0,w,c
  9805  007C56  582A               	subwfb	(___fladd@b+2)^0,w,c
  9806  007C58  502B               	movf	(___fladd@b+3)^0,w,c
  9807  007C5A  0A80               	xorlw	128
  9808  007C5C  6E30               	movwf	??___fladd^0,c
  9809  007C5E  502F               	movf	(___fladd@a+3)^0,w,c
  9810  007C60  0A80               	xorlw	128
  9811  007C62  5830               	subwfb	??___fladd^0,w,c
  9812  007C64  B0D8               	btfsc	status,0,c
  9813  007C66  EF37  F03E         	goto	u3361
  9814  007C6A  EF39  F03E         	goto	u3360
  9815  007C6E                     u3361:
  9816  007C6E  EF64  F03E         	goto	l3476
  9817  007C72                     u3360:
  9818  007C72  5028               	movf	___fladd@b^0,w,c
  9819  007C74  5C2C               	subwf	___fladd@a^0,w,c
  9820  007C76  6E30               	movwf	??___fladd^0,c
  9821  007C78  5029               	movf	(___fladd@b+1)^0,w,c
  9822  007C7A  582D               	subwfb	(___fladd@a+1)^0,w,c
  9823  007C7C  6E31               	movwf	(??___fladd+1)^0,c
  9824  007C7E  502A               	movf	(___fladd@b+2)^0,w,c
  9825  007C80  582E               	subwfb	(___fladd@a+2)^0,w,c
  9826  007C82  6E32               	movwf	(??___fladd+2)^0,c
  9827  007C84  502B               	movf	(___fladd@b+3)^0,w,c
  9828  007C86  582F               	subwfb	(___fladd@a+3)^0,w,c
  9829  007C88  6E33               	movwf	(??___fladd+3)^0,c
  9830  007C8A  0EFF               	movlw	255
  9831  007C8C  2430               	addwf	??___fladd^0,w,c
  9832  007C8E  6E28               	movwf	___fladd@b^0,c
  9833  007C90  0EFF               	movlw	255
  9834  007C92  2031               	addwfc	(??___fladd+1)^0,w,c
  9835  007C94  6E29               	movwf	(___fladd@b+1)^0,c
  9836  007C96  0EFF               	movlw	255
  9837  007C98  2032               	addwfc	(??___fladd+2)^0,w,c
  9838  007C9A  6E2A               	movwf	(___fladd@b+2)^0,c
  9839  007C9C  0EFF               	movlw	255
  9840  007C9E  2033               	addwfc	(??___fladd+3)^0,w,c
  9841  007CA0  6E2B               	movwf	(___fladd@b+3)^0,c
  9842  007CA2  0E80               	movlw	128
  9843  007CA4  1A34               	xorwf	___fladd@signs^0,f,c
  9844  007CA6  6C37               	negf	___fladd@grs^0,c
  9845  007CA8  5037               	movf	___fladd@grs^0,w,c
  9846  007CAA  A4D8               	btfss	status,2,c
  9847  007CAC  EF5A  F03E         	goto	u3371
  9848  007CB0  EF5C  F03E         	goto	u3370
  9849  007CB4                     u3371:
  9850  007CB4  EF6C  F03E         	goto	l1058
  9851  007CB8                     u3370:
  9852  007CB8  0E01               	movlw	1
  9853  007CBA  2628               	addwf	___fladd@b^0,f,c
  9854  007CBC  0E00               	movlw	0
  9855  007CBE  2229               	addwfc	(___fladd@b+1)^0,f,c
  9856  007CC0  222A               	addwfc	(___fladd@b+2)^0,f,c
  9857  007CC2  222B               	addwfc	(___fladd@b+3)^0,f,c
  9858  007CC4  EF6C  F03E         	goto	l1058
  9859  007CC8                     l3476:
  9860  007CC8  502C               	movf	___fladd@a^0,w,c
  9861  007CCA  5E28               	subwf	___fladd@b^0,f,c
  9862  007CCC  502D               	movf	(___fladd@a+1)^0,w,c
  9863  007CCE  5A29               	subwfb	(___fladd@b+1)^0,f,c
  9864  007CD0  502E               	movf	(___fladd@a+2)^0,w,c
  9865  007CD2  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  9866  007CD4  502F               	movf	(___fladd@a+3)^0,w,c
  9867  007CD6  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  9868  007CD8                     l1058:
  9869  007CD8  5028               	movf	___fladd@b^0,w,c
  9870  007CDA  1029               	iorwf	(___fladd@b+1)^0,w,c
  9871  007CDC  102A               	iorwf	(___fladd@b+2)^0,w,c
  9872  007CDE  102B               	iorwf	(___fladd@b+3)^0,w,c
  9873  007CE0  A4D8               	btfss	status,2,c
  9874  007CE2  EF75  F03E         	goto	u3381
  9875  007CE6  EF77  F03E         	goto	u3380
  9876  007CEA                     u3381:
  9877  007CEA  EFAC  F03E         	goto	l3500
  9878  007CEE                     u3380:
  9879  007CEE  5037               	movf	___fladd@grs^0,w,c
  9880  007CF0  A4D8               	btfss	status,2,c
  9881  007CF2  EF7D  F03E         	goto	u3391
  9882  007CF6  EF7F  F03E         	goto	u3390
  9883  007CFA                     u3391:
  9884  007CFA  EFAC  F03E         	goto	l3500
  9885  007CFE                     u3390:
  9886  007CFE  0E00               	movlw	0
  9887  007D00  6E28               	movwf	?___fladd^0,c
  9888  007D02  0E00               	movlw	0
  9889  007D04  6E29               	movwf	(?___fladd+1)^0,c
  9890  007D06  0E00               	movlw	0
  9891  007D08  6E2A               	movwf	(?___fladd+2)^0,c
  9892  007D0A  0E00               	movlw	0
  9893  007D0C  6E2B               	movwf	(?___fladd+3)^0,c
  9894  007D0E  EF47  F03F         	goto	l1050
  9895  007D12                     l3484:
  9896  007D12  90D8               	bcf	status,0,c
  9897  007D14  3628               	rlcf	___fladd@b^0,f,c
  9898  007D16  3629               	rlcf	(___fladd@b+1)^0,f,c
  9899  007D18  362A               	rlcf	(___fladd@b+2)^0,f,c
  9900  007D1A  362B               	rlcf	(___fladd@b+3)^0,f,c
  9901  007D1C  AE37               	btfss	___fladd@grs^0,7,c
  9902  007D1E  EF93  F03E         	goto	u3401
  9903  007D22  EF95  F03E         	goto	u3400
  9904  007D26                     u3401:
  9905  007D26  EF96  F03E         	goto	l3490
  9906  007D2A                     u3400:
  9907  007D2A  8028               	bsf	___fladd@b^0,0,c
  9908  007D2C                     l3490:
  9909  007D2C  A037               	btfss	___fladd@grs^0,0,c
  9910  007D2E  EF9B  F03E         	goto	u3411
  9911  007D32  EF9D  F03E         	goto	u3410
  9912  007D36                     u3411:
  9913  007D36  EFA1  F03E         	goto	l3494
  9914  007D3A                     u3410:
  9915  007D3A  80D8               	bsf	status,0,c
  9916  007D3C  3637               	rlcf	___fladd@grs^0,f,c
  9917  007D3E  EFA3  F03E         	goto	l3496
  9918  007D42                     l3494:
  9919  007D42  90D8               	bcf	status,0,c
  9920  007D44  3637               	rlcf	___fladd@grs^0,f,c
  9921  007D46                     l3496:
  9922  007D46  5036               	movf	___fladd@bexp^0,w,c
  9923  007D48  B4D8               	btfsc	status,2,c
  9924  007D4A  EFA9  F03E         	goto	u3421
  9925  007D4E  EFAB  F03E         	goto	u3420
  9926  007D52                     u3421:
  9927  007D52  EFAC  F03E         	goto	l3500
  9928  007D56                     u3420:
  9929  007D56  0636               	decf	___fladd@bexp^0,f,c
  9930  007D58                     l3500:
  9931  007D58  AE2A               	btfss	(___fladd@b+2)^0,7,c
  9932  007D5A  EFB1  F03E         	goto	u3431
  9933  007D5E  EFB3  F03E         	goto	u3430
  9934  007D62                     u3431:
  9935  007D62  EF89  F03E         	goto	l3484
  9936  007D66                     u3430:
  9937  007D66                     l3502:
  9938  007D66  0E00               	movlw	0
  9939  007D68  6E35               	movwf	___fladd@aexp^0,c
  9940  007D6A  AE37               	btfss	___fladd@grs^0,7,c
  9941  007D6C  EFBA  F03E         	goto	u3441
  9942  007D70  EFBC  F03E         	goto	u3440
  9943  007D74                     u3441:
  9944  007D74  EFD4  F03E         	goto	l1067
  9945  007D78                     u3440:
  9946  007D78  C037  F030         	movff	___fladd@grs,??___fladd
  9947  007D7C  0E7F               	movlw	127
  9948  007D7E  1630               	andwf	??___fladd^0,f,c
  9949  007D80  B4D8               	btfsc	status,2,c
  9950  007D82  EFC5  F03E         	goto	u3451
  9951  007D86  EFC7  F03E         	goto	u3450
  9952  007D8A                     u3451:
  9953  007D8A  EFCB  F03E         	goto	l1068
  9954  007D8E                     u3450:
  9955  007D8E                     l3508:
  9956  007D8E  0E01               	movlw	1
  9957  007D90  6E35               	movwf	___fladd@aexp^0,c
  9958  007D92  EFD4  F03E         	goto	l1067
  9959  007D96                     l1068:
  9960  007D96  A028               	btfss	___fladd@b^0,0,c
  9961  007D98  EFD0  F03E         	goto	u3461
  9962  007D9C  EFD2  F03E         	goto	u3460
  9963  007DA0                     u3461:
  9964  007DA0  EFD4  F03E         	goto	l1067
  9965  007DA4                     u3460:
  9966  007DA4  EFC7  F03E         	goto	l3508
  9967  007DA8                     l1067:
  9968  007DA8  5035               	movf	___fladd@aexp^0,w,c
  9969  007DAA  B4D8               	btfsc	status,2,c
  9970  007DAC  EFDA  F03E         	goto	u3471
  9971  007DB0  EFDC  F03E         	goto	u3470
  9972  007DB4                     u3471:
  9973  007DB4  EF07  F03F         	goto	l3520
  9974  007DB8                     u3470:
  9975  007DB8  0E01               	movlw	1
  9976  007DBA  2628               	addwf	___fladd@b^0,f,c
  9977  007DBC  0E00               	movlw	0
  9978  007DBE  2229               	addwfc	(___fladd@b+1)^0,f,c
  9979  007DC0  222A               	addwfc	(___fladd@b+2)^0,f,c
  9980  007DC2  222B               	addwfc	(___fladd@b+3)^0,f,c
  9981  007DC4  A02B               	btfss	(___fladd@b+3)^0,0,c
  9982  007DC6  EFE7  F03E         	goto	u3481
  9983  007DCA  EFE9  F03E         	goto	u3480
  9984  007DCE                     u3481:
  9985  007DCE  EF07  F03F         	goto	l3520
  9986  007DD2                     u3480:
  9987  007DD2  C028  F030         	movff	___fladd@b,??___fladd
  9988  007DD6  C029  F031         	movff	___fladd@b+1,??___fladd+1
  9989  007DDA  C02A  F032         	movff	___fladd@b+2,??___fladd+2
  9990  007DDE  C02B  F033         	movff	___fladd@b+3,??___fladd+3
  9991  007DE2  3433               	rlcf	(??___fladd+3)^0,w,c
  9992  007DE4  3233               	rrcf	(??___fladd+3)^0,f,c
  9993  007DE6  3232               	rrcf	(??___fladd+2)^0,f,c
  9994  007DE8  3231               	rrcf	(??___fladd+1)^0,f,c
  9995  007DEA  3230               	rrcf	??___fladd^0,f,c
  9996  007DEC  C030  F028         	movff	??___fladd,___fladd@b
  9997  007DF0  C031  F029         	movff	??___fladd+1,___fladd@b+1
  9998  007DF4  C032  F02A         	movff	??___fladd+2,___fladd@b+2
  9999  007DF8  C033  F02B         	movff	??___fladd+3,___fladd@b+3
 10000  007DFC  2836               	incf	___fladd@bexp^0,w,c
 10001  007DFE  B4D8               	btfsc	status,2,c
 10002  007E00  EF04  F03F         	goto	u3491
 10003  007E04  EF06  F03F         	goto	u3490
 10004  007E08                     u3491:
 10005  007E08  EF07  F03F         	goto	l3520
 10006  007E0C                     u3490:
 10007  007E0C  2A36               	incf	___fladd@bexp^0,f,c
 10008  007E0E                     l3520:
 10009  007E0E  2836               	incf	___fladd@bexp^0,w,c
 10010  007E10  B4D8               	btfsc	status,2,c
 10011  007E12  EF0D  F03F         	goto	u3501
 10012  007E16  EF0F  F03F         	goto	u3500
 10013  007E1A                     u3501:
 10014  007E1A  EF17  F03F         	goto	l3524
 10015  007E1E                     u3500:
 10016  007E1E  5036               	movf	___fladd@bexp^0,w,c
 10017  007E20  A4D8               	btfss	status,2,c
 10018  007E22  EF15  F03F         	goto	u3511
 10019  007E26  EF17  F03F         	goto	u3510
 10020  007E2A                     u3511:
 10021  007E2A  EF29  F03F         	goto	l3528
 10022  007E2E                     u3510:
 10023  007E2E                     l3524:
 10024  007E2E  0E00               	movlw	0
 10025  007E30  6E28               	movwf	___fladd@b^0,c
 10026  007E32  0E00               	movlw	0
 10027  007E34  6E29               	movwf	(___fladd@b+1)^0,c
 10028  007E36  0E00               	movlw	0
 10029  007E38  6E2A               	movwf	(___fladd@b+2)^0,c
 10030  007E3A  0E00               	movlw	0
 10031  007E3C  6E2B               	movwf	(___fladd@b+3)^0,c
 10032  007E3E  5036               	movf	___fladd@bexp^0,w,c
 10033  007E40  A4D8               	btfss	status,2,c
 10034  007E42  EF25  F03F         	goto	u3521
 10035  007E46  EF27  F03F         	goto	u3520
 10036  007E4A                     u3521:
 10037  007E4A  EF29  F03F         	goto	l3528
 10038  007E4E                     u3520:
 10039  007E4E  0E00               	movlw	0
 10040  007E50  6E34               	movwf	___fladd@signs^0,c
 10041  007E52                     l3528:
 10042  007E52  A036               	btfss	___fladd@bexp^0,0,c
 10043  007E54  EF2E  F03F         	goto	u3531
 10044  007E58  EF30  F03F         	goto	u3530
 10045  007E5C                     u3531:
 10046  007E5C  EF33  F03F         	goto	l3532
 10047  007E60                     u3530:
 10048  007E60  8E2A               	bsf	(___fladd@b+2)^0,7,c
 10049  007E62  EF34  F03F         	goto	l3534
 10050  007E66                     l3532:
 10051  007E66  9E2A               	bcf	(___fladd@b+2)^0,7,c
 10052  007E68                     l3534:
 10053  007E68  90D8               	bcf	status,0,c
 10054  007E6A  3036               	rrcf	___fladd@bexp^0,w,c
 10055  007E6C  6E2B               	movwf	(___fladd@b+3)^0,c
 10056  007E6E  AE34               	btfss	___fladd@signs^0,7,c
 10057  007E70  EF3C  F03F         	goto	u3541
 10058  007E74  EF3E  F03F         	goto	u3540
 10059  007E78                     u3541:
 10060  007E78  EF3F  F03F         	goto	l3540
 10061  007E7C                     u3540:
 10062  007E7C  8E2B               	bsf	(___fladd@b+3)^0,7,c
 10063  007E7E                     l3540:
 10064  007E7E  C028  F028         	movff	___fladd@b,?___fladd
 10065  007E82  C029  F029         	movff	___fladd@b+1,?___fladd+1
 10066  007E86  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
 10067  007E8A  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
 10068  007E8E                     l1050:
 10069  007E8E  0012               	return		;funcret
 10070  007E90                     __end_of___fladd:
 10071                           	callstack 0
 10072                           
 10073 ;; *************** function _atraso_ms *****************
 10074 ;; Defined at:
 10075 ;;		line 26 in file "atraso.c"
 10076 ;; Parameters:    Size  Location     Type
 10077 ;;  valor           2    0[COMRAM] unsigned int 
 10078 ;; Auto vars:     Size  Location     Type
 10079 ;;  i               2    2[COMRAM] unsigned int 
 10080 ;;  k               1    5[COMRAM] volatile unsigned char 
 10081 ;;  j               1    4[COMRAM] volatile unsigned char 
 10082 ;; Return value:  Size  Location     Type
 10083 ;;                  1    wreg      void 
 10084 ;; Registers used:
 10085 ;;		wreg, status,2, status,0
 10086 ;; Tracked objects:
 10087 ;;		On entry : 0/0
 10088 ;;		On exit  : 0/0
 10089 ;;		Unchanged: 0/0
 10090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10091 ;;      Params:         2       0       0       0       0       0       0
 10092 ;;      Locals:         4       0       0       0       0       0       0
 10093 ;;      Temps:          0       0       0       0       0       0       0
 10094 ;;      Totals:         6       0       0       0       0       0       0
 10095 ;;Total ram usage:        6 bytes
 10096 ;; Hardware stack levels used: 1
 10097 ;; This function calls:
 10098 ;;		Nothing
 10099 ;; This function is called by:
 10100 ;;		_lcd_cmd
 10101 ;;		_lcd_dat
 10102 ;;		_lcd_init
 10103 ;;		_serial_rx
 10104 ;;		_serial
 10105 ;;		_controleEstoque
 10106 ;;		_shift_texto
 10107 ;;		_ligar
 10108 ;;		_instrucoes
 10109 ;;		_resfria
 10110 ;;		_aquece
 10111 ;;		_fecharPorta
 10112 ;;		_perigo
 10113 ;;		_main
 10114 ;; This function uses a non-reentrant model
 10115 ;;
 10116                           
 10117                           	psect	text52
 10118  004C52                     __ptext52:
 10119                           	callstack 0
 10120  004C52                     _atraso_ms:
 10121                           	callstack 27
 10122  004C52                     
 10123                           ;atraso.c: 27:     unsigned int i;;atraso.c: 28:     volatile unsigned char j, k;;atraso
      +                          .c: 30:     for (i = 0; i < valor; i++) {
 10124  004C52  0E00               	movlw	0
 10125  004C54  6E04               	movwf	(atraso_ms@i+1)^0,c
 10126  004C56  0E00               	movlw	0
 10127  004C58  6E03               	movwf	atraso_ms@i^0,c
 10128  004C5A  EF4F  F026         	goto	l3142
 10129  004C5E                     l3120:
 10130                           
 10131                           ;atraso.c: 32:         for (j = 0; j < 41; j++) {
 10132  004C5E  0E00               	movlw	0
 10133  004C60  6E05               	movwf	atraso_ms@j^0,c	;volatile
 10134  004C62                     l3122:
 10135  004C62  0E28               	movlw	40
 10136  004C64  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
 10137  004C66  EF37  F026         	goto	u2721
 10138  004C6A  EF39  F026         	goto	u2720
 10139  004C6E                     u2721:
 10140  004C6E  EF3B  F026         	goto	l3126
 10141  004C72                     u2720:
 10142  004C72  EF4D  F026         	goto	l3140
 10143  004C76                     l3126:
 10144                           
 10145                           ;atraso.c: 33:             for (k = 0; k < 3; k++);
 10146  004C76  0E00               	movlw	0
 10147  004C78  6E06               	movwf	atraso_ms@k^0,c	;volatile
 10148  004C7A                     l3128:
 10149  004C7A  0E02               	movlw	2
 10150  004C7C  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
 10151  004C7E  EF43  F026         	goto	u2731
 10152  004C82  EF45  F026         	goto	u2730
 10153  004C86                     u2731:
 10154  004C86  EF47  F026         	goto	l3132
 10155  004C8A                     u2730:
 10156  004C8A  EF4A  F026         	goto	l3136
 10157  004C8E                     l3132:
 10158  004C8E  2A06               	incf	atraso_ms@k^0,f,c	;volatile
 10159  004C90  EF3D  F026         	goto	l3128
 10160  004C94                     l3136:
 10161                           
 10162                           ;atraso.c: 34:         }
 10163  004C94  2A05               	incf	atraso_ms@j^0,f,c	;volatile
 10164  004C96  EF31  F026         	goto	l3122
 10165  004C9A                     l3140:
 10166                           
 10167                           ;atraso.c: 35:     }
 10168  004C9A  4A03               	infsnz	atraso_ms@i^0,f,c
 10169  004C9C  2A04               	incf	(atraso_ms@i+1)^0,f,c
 10170  004C9E                     l3142:
 10171  004C9E  5001               	movf	atraso_ms@valor^0,w,c
 10172  004CA0  5C03               	subwf	atraso_ms@i^0,w,c
 10173  004CA2  5002               	movf	(atraso_ms@valor+1)^0,w,c
 10174  004CA4  5804               	subwfb	(atraso_ms@i+1)^0,w,c
 10175  004CA6  A0D8               	btfss	status,0,c
 10176  004CA8  EF58  F026         	goto	u2741
 10177  004CAC  EF5A  F026         	goto	u2740
 10178  004CB0                     u2741:
 10179  004CB0  EF2F  F026         	goto	l3120
 10180  004CB4                     u2740:
 10181  004CB4  0012               	return		;funcret
 10182  004CB6                     __end_of_atraso_ms:
 10183                           	callstack 0
 10184                           
 10185 ;; *************** function _alerta *****************
 10186 ;; Defined at:
 10187 ;;		line 507 in file "main.c"
 10188 ;; Parameters:    Size  Location     Type
 10189 ;;		None
 10190 ;; Auto vars:     Size  Location     Type
 10191 ;;		None
 10192 ;; Return value:  Size  Location     Type
 10193 ;;                  1    wreg      void 
 10194 ;; Registers used:
 10195 ;;		wreg, status,2, status,0, cstack
 10196 ;; Tracked objects:
 10197 ;;		On entry : 0/0
 10198 ;;		On exit  : 0/0
 10199 ;;		Unchanged: 0/0
 10200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10201 ;;      Params:         0       0       0       0       0       0       0
 10202 ;;      Locals:         0       0       0       0       0       0       0
 10203 ;;      Temps:          0       0       0       0       0       0       0
 10204 ;;      Totals:         0       0       0       0       0       0       0
 10205 ;;Total ram usage:        0 bytes
 10206 ;; Hardware stack levels used: 1
 10207 ;; Hardware stack levels required when called: 1
 10208 ;; This function calls:
 10209 ;;		___flge
 10210 ;; This function is called by:
 10211 ;;		_main
 10212 ;; This function uses a non-reentrant model
 10213 ;;
 10214                           
 10215                           	psect	text53
 10216  005924                     __ptext53:
 10217                           	callstack 0
 10218  005924                     _alerta:
 10219                           	callstack 29
 10220  005924                     
 10221                           ;main.c: 508:     TRISCbits.TRISC0 = 0;
 10222  005924  9094               	bcf	148,0,c	;volatile
 10223                           
 10224                           ;main.c: 509:     TRISEbits.TRISE0 = 0;
 10225  005926  9096               	bcf	150,0,c	;volatile
 10226  005928                     
 10227                           ;main.c: 510:     if (temperatura >= limiteSuperior - 2 || tempPontos >= limiteSuperior 
      +                          - 2 || tempLiquido >= limiteSuperior - 2 || temperatura <= limiteInferior + 2 || tempPon
      +                          tos <= limiteInferior + 2 || tempLiquido <= limiteInferior + 2) {
 10228  005928  C07B  F001         	movff	_temperatura,___flge@ff1
 10229  00592C  C07C  F002         	movff	_temperatura+1,___flge@ff1+1
 10230  005930  C07D  F003         	movff	_temperatura+2,___flge@ff1+2
 10231  005934  C07E  F004         	movff	_temperatura+3,___flge@ff1+3
 10232  005938  0E00               	movlw	0
 10233  00593A  6E05               	movwf	___flge@ff2^0,c
 10234  00593C  0E00               	movlw	0
 10235  00593E  6E06               	movwf	(___flge@ff2+1)^0,c
 10236  005940  0EC0               	movlw	192
 10237  005942  6E07               	movwf	(___flge@ff2+2)^0,c
 10238  005944  0E40               	movlw	64
 10239  005946  6E08               	movwf	(___flge@ff2+3)^0,c
 10240  005948  EC83  F02A         	call	___flge	;wreg free
 10241  00594C  B0D8               	btfsc	status,0,c
 10242  00594E  EFAB  F02C         	goto	u5001
 10243  005952  EFAD  F02C         	goto	u5000
 10244  005956                     u5001:
 10245  005956  EF2A  F02D         	goto	l4726
 10246  00595A                     u5000:
 10247  00595A  C073  F001         	movff	_tempPontos,___flge@ff1
 10248  00595E  C074  F002         	movff	_tempPontos+1,___flge@ff1+1
 10249  005962  C075  F003         	movff	_tempPontos+2,___flge@ff1+2
 10250  005966  C076  F004         	movff	_tempPontos+3,___flge@ff1+3
 10251  00596A  0E00               	movlw	0
 10252  00596C  6E05               	movwf	___flge@ff2^0,c
 10253  00596E  0E00               	movlw	0
 10254  005970  6E06               	movwf	(___flge@ff2+1)^0,c
 10255  005972  0EC0               	movlw	192
 10256  005974  6E07               	movwf	(___flge@ff2+2)^0,c
 10257  005976  0E40               	movlw	64
 10258  005978  6E08               	movwf	(___flge@ff2+3)^0,c
 10259  00597A  EC83  F02A         	call	___flge	;wreg free
 10260  00597E  B0D8               	btfsc	status,0,c
 10261  005980  EFC4  F02C         	goto	u5011
 10262  005984  EFC6  F02C         	goto	u5010
 10263  005988                     u5011:
 10264  005988  EF2A  F02D         	goto	l4726
 10265  00598C                     u5010:
 10266  00598C  C077  F001         	movff	_tempLiquido,___flge@ff1
 10267  005990  C078  F002         	movff	_tempLiquido+1,___flge@ff1+1
 10268  005994  C079  F003         	movff	_tempLiquido+2,___flge@ff1+2
 10269  005998  C07A  F004         	movff	_tempLiquido+3,___flge@ff1+3
 10270  00599C  0E00               	movlw	0
 10271  00599E  6E05               	movwf	___flge@ff2^0,c
 10272  0059A0  0E00               	movlw	0
 10273  0059A2  6E06               	movwf	(___flge@ff2+1)^0,c
 10274  0059A4  0EC0               	movlw	192
 10275  0059A6  6E07               	movwf	(___flge@ff2+2)^0,c
 10276  0059A8  0E40               	movlw	64
 10277  0059AA  6E08               	movwf	(___flge@ff2+3)^0,c
 10278  0059AC  EC83  F02A         	call	___flge	;wreg free
 10279  0059B0  B0D8               	btfsc	status,0,c
 10280  0059B2  EFDD  F02C         	goto	u5021
 10281  0059B6  EFDF  F02C         	goto	u5020
 10282  0059BA                     u5021:
 10283  0059BA  EF2A  F02D         	goto	l4726
 10284  0059BE                     u5020:
 10285  0059BE  0E00               	movlw	0
 10286  0059C0  6E01               	movwf	___flge@ff1^0,c
 10287  0059C2  0E00               	movlw	0
 10288  0059C4  6E02               	movwf	(___flge@ff1+1)^0,c
 10289  0059C6  0E80               	movlw	128
 10290  0059C8  6E03               	movwf	(___flge@ff1+2)^0,c
 10291  0059CA  0E40               	movlw	64
 10292  0059CC  6E04               	movwf	(___flge@ff1+3)^0,c
 10293  0059CE  C07B  F005         	movff	_temperatura,___flge@ff2
 10294  0059D2  C07C  F006         	movff	_temperatura+1,___flge@ff2+1
 10295  0059D6  C07D  F007         	movff	_temperatura+2,___flge@ff2+2
 10296  0059DA  C07E  F008         	movff	_temperatura+3,___flge@ff2+3
 10297  0059DE  EC83  F02A         	call	___flge	;wreg free
 10298  0059E2  B0D8               	btfsc	status,0,c
 10299  0059E4  EFF6  F02C         	goto	u5031
 10300  0059E8  EFF8  F02C         	goto	u5030
 10301  0059EC                     u5031:
 10302  0059EC  EF2A  F02D         	goto	l4726
 10303  0059F0                     u5030:
 10304  0059F0  0E00               	movlw	0
 10305  0059F2  6E01               	movwf	___flge@ff1^0,c
 10306  0059F4  0E00               	movlw	0
 10307  0059F6  6E02               	movwf	(___flge@ff1+1)^0,c
 10308  0059F8  0E80               	movlw	128
 10309  0059FA  6E03               	movwf	(___flge@ff1+2)^0,c
 10310  0059FC  0E40               	movlw	64
 10311  0059FE  6E04               	movwf	(___flge@ff1+3)^0,c
 10312  005A00  C073  F005         	movff	_tempPontos,___flge@ff2
 10313  005A04  C074  F006         	movff	_tempPontos+1,___flge@ff2+1
 10314  005A08  C075  F007         	movff	_tempPontos+2,___flge@ff2+2
 10315  005A0C  C076  F008         	movff	_tempPontos+3,___flge@ff2+3
 10316  005A10  EC83  F02A         	call	___flge	;wreg free
 10317  005A14  B0D8               	btfsc	status,0,c
 10318  005A16  EF0F  F02D         	goto	u5041
 10319  005A1A  EF11  F02D         	goto	u5040
 10320  005A1E                     u5041:
 10321  005A1E  EF2A  F02D         	goto	l4726
 10322  005A22                     u5040:
 10323  005A22  0E00               	movlw	0
 10324  005A24  6E01               	movwf	___flge@ff1^0,c
 10325  005A26  0E00               	movlw	0
 10326  005A28  6E02               	movwf	(___flge@ff1+1)^0,c
 10327  005A2A  0E80               	movlw	128
 10328  005A2C  6E03               	movwf	(___flge@ff1+2)^0,c
 10329  005A2E  0E40               	movlw	64
 10330  005A30  6E04               	movwf	(___flge@ff1+3)^0,c
 10331  005A32  C077  F005         	movff	_tempLiquido,___flge@ff2
 10332  005A36  C078  F006         	movff	_tempLiquido+1,___flge@ff2+1
 10333  005A3A  C079  F007         	movff	_tempLiquido+2,___flge@ff2+2
 10334  005A3E  C07A  F008         	movff	_tempLiquido+3,___flge@ff2+3
 10335  005A42  EC83  F02A         	call	___flge	;wreg free
 10336  005A46  A0D8               	btfss	status,0,c
 10337  005A48  EF28  F02D         	goto	u5051
 10338  005A4C  EF2A  F02D         	goto	u5050
 10339  005A50                     u5051:
 10340  005A50  EF2E  F02D         	goto	l480
 10341  005A54                     u5050:
 10342  005A54                     l4726:
 10343                           
 10344                           ;main.c: 513:         PORTCbits.RC0 ^= 1;
 10345  005A54  7082               	btg	130,0,c	;volatile
 10346                           
 10347                           ;main.c: 514:         PORTEbits.RE0 ^= 1;
 10348  005A56  7084               	btg	132,0,c	;volatile
 10349                           
 10350                           ;main.c: 516:     } else {
 10351  005A58  EF30  F02D         	goto	l484
 10352  005A5C                     l480:
 10353                           
 10354                           ;main.c: 517:         PORTCbits.RC0 = 0;
 10355  005A5C  9082               	bcf	130,0,c	;volatile
 10356                           
 10357                           ;main.c: 518:         PORTEbits.RE0 = 0;
 10358  005A5E  9084               	bcf	132,0,c	;volatile
 10359  005A60                     l484:
 10360  005A60  0012               	return		;funcret
 10361  005A62                     __end_of_alerta:
 10362                           	callstack 0
 10363                           
 10364 ;; *************** function ___flge *****************
 10365 ;; Defined at:
 10366 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 10367 ;; Parameters:    Size  Location     Type
 10368 ;;  ff1             4    0[COMRAM] void 
 10369 ;;  ff2             4    4[COMRAM] void 
 10370 ;; Auto vars:     Size  Location     Type
 10371 ;;		None
 10372 ;; Return value:  Size  Location     Type
 10373 ;;		None               void
 10374 ;; Registers used:
 10375 ;;		wreg, status,2, status,0
 10376 ;; Tracked objects:
 10377 ;;		On entry : 0/0
 10378 ;;		On exit  : 0/0
 10379 ;;		Unchanged: 0/0
 10380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10381 ;;      Params:         8       0       0       0       0       0       0
 10382 ;;      Locals:         0       0       0       0       0       0       0
 10383 ;;      Temps:          4       0       0       0       0       0       0
 10384 ;;      Totals:        12       0       0       0       0       0       0
 10385 ;;Total ram usage:       12 bytes
 10386 ;; Hardware stack levels used: 1
 10387 ;; This function calls:
 10388 ;;		Nothing
 10389 ;; This function is called by:
 10390 ;;		_atualizar
 10391 ;;		_resfria
 10392 ;;		_aquece
 10393 ;;		_alerta
 10394 ;;		_perigo
 10395 ;; This function uses a non-reentrant model
 10396 ;;
 10397                           
 10398                           	psect	text54
 10399  005506                     __ptext54:
 10400                           	callstack 0
 10401  005506                     ___flge:
 10402                           	callstack 28
 10403  005506  0E00               	movlw	0
 10404  005508  1401               	andwf	___flge@ff1^0,w,c
 10405  00550A  6E09               	movwf	??___flge^0,c
 10406  00550C  0E00               	movlw	0
 10407  00550E  1402               	andwf	(___flge@ff1+1)^0,w,c
 10408  005510  6E0A               	movwf	(??___flge+1)^0,c
 10409  005512  0E80               	movlw	128
 10410  005514  1403               	andwf	(___flge@ff1+2)^0,w,c
 10411  005516  6E0B               	movwf	(??___flge+2)^0,c
 10412  005518  0E7F               	movlw	127
 10413  00551A  1404               	andwf	(___flge@ff1+3)^0,w,c
 10414  00551C  6E0C               	movwf	(??___flge+3)^0,c
 10415  00551E  5009               	movf	??___flge^0,w,c
 10416  005520  100A               	iorwf	(??___flge+1)^0,w,c
 10417  005522  100B               	iorwf	(??___flge+2)^0,w,c
 10418  005524  100C               	iorwf	(??___flge+3)^0,w,c
 10419  005526  A4D8               	btfss	status,2,c
 10420  005528  EF98  F02A         	goto	u3781
 10421  00552C  EF9A  F02A         	goto	u3780
 10422  005530                     u3781:
 10423  005530  EFA2  F02A         	goto	l3686
 10424  005534                     u3780:
 10425  005534  0E00               	movlw	0
 10426  005536  6E01               	movwf	___flge@ff1^0,c
 10427  005538  0E00               	movlw	0
 10428  00553A  6E02               	movwf	(___flge@ff1+1)^0,c
 10429  00553C  0E00               	movlw	0
 10430  00553E  6E03               	movwf	(___flge@ff1+2)^0,c
 10431  005540  0E00               	movlw	0
 10432  005542  6E04               	movwf	(___flge@ff1+3)^0,c
 10433  005544                     l3686:
 10434  005544  0E00               	movlw	0
 10435  005546  1405               	andwf	___flge@ff2^0,w,c
 10436  005548  6E09               	movwf	??___flge^0,c
 10437  00554A  0E00               	movlw	0
 10438  00554C  1406               	andwf	(___flge@ff2+1)^0,w,c
 10439  00554E  6E0A               	movwf	(??___flge+1)^0,c
 10440  005550  0E80               	movlw	128
 10441  005552  1407               	andwf	(___flge@ff2+2)^0,w,c
 10442  005554  6E0B               	movwf	(??___flge+2)^0,c
 10443  005556  0E7F               	movlw	127
 10444  005558  1408               	andwf	(___flge@ff2+3)^0,w,c
 10445  00555A  6E0C               	movwf	(??___flge+3)^0,c
 10446  00555C  5009               	movf	??___flge^0,w,c
 10447  00555E  100A               	iorwf	(??___flge+1)^0,w,c
 10448  005560  100B               	iorwf	(??___flge+2)^0,w,c
 10449  005562  100C               	iorwf	(??___flge+3)^0,w,c
 10450  005564  A4D8               	btfss	status,2,c
 10451  005566  EFB7  F02A         	goto	u3791
 10452  00556A  EFB9  F02A         	goto	u3790
 10453  00556E                     u3791:
 10454  00556E  EFC1  F02A         	goto	l3690
 10455  005572                     u3790:
 10456  005572  0E00               	movlw	0
 10457  005574  6E05               	movwf	___flge@ff2^0,c
 10458  005576  0E00               	movlw	0
 10459  005578  6E06               	movwf	(___flge@ff2+1)^0,c
 10460  00557A  0E00               	movlw	0
 10461  00557C  6E07               	movwf	(___flge@ff2+2)^0,c
 10462  00557E  0E00               	movlw	0
 10463  005580  6E08               	movwf	(___flge@ff2+3)^0,c
 10464  005582                     l3690:
 10465  005582  AE04               	btfss	(___flge@ff1+3)^0,7,c
 10466  005584  EFC6  F02A         	goto	u3801
 10467  005588  EFC8  F02A         	goto	u3800
 10468  00558C                     u3801:
 10469  00558C  EFD1  F02A         	goto	l3694
 10470  005590                     u3800:
 10471  005590  6C01               	negf	___flge@ff1^0,c
 10472  005592  1E02               	comf	(___flge@ff1+1)^0,f,c
 10473  005594  B0D8               	btfsc	status,0,c
 10474  005596  2A02               	incf	(___flge@ff1+1)^0,f,c
 10475  005598  1E03               	comf	(___flge@ff1+2)^0,f,c
 10476  00559A  B0D8               	btfsc	status,0,c
 10477  00559C  2A03               	incf	(___flge@ff1+2)^0,f,c
 10478  00559E  0E80               	movlw	128
 10479  0055A0  5604               	subfwb	(___flge@ff1+3)^0,f,c
 10480  0055A2                     l3694:
 10481  0055A2  AE08               	btfss	(___flge@ff2+3)^0,7,c
 10482  0055A4  EFD6  F02A         	goto	u3811
 10483  0055A8  EFD8  F02A         	goto	u3810
 10484  0055AC                     u3811:
 10485  0055AC  EFE1  F02A         	goto	l778
 10486  0055B0                     u3810:
 10487  0055B0  6C05               	negf	___flge@ff2^0,c
 10488  0055B2  1E06               	comf	(___flge@ff2+1)^0,f,c
 10489  0055B4  B0D8               	btfsc	status,0,c
 10490  0055B6  2A06               	incf	(___flge@ff2+1)^0,f,c
 10491  0055B8  1E07               	comf	(___flge@ff2+2)^0,f,c
 10492  0055BA  B0D8               	btfsc	status,0,c
 10493  0055BC  2A07               	incf	(___flge@ff2+2)^0,f,c
 10494  0055BE  0E80               	movlw	128
 10495  0055C0  5608               	subfwb	(___flge@ff2+3)^0,f,c
 10496  0055C2                     l778:
 10497  0055C2  0E00               	movlw	0
 10498  0055C4  1A01               	xorwf	___flge@ff1^0,f,c
 10499  0055C6  0E00               	movlw	0
 10500  0055C8  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 10501  0055CA  0E00               	movlw	0
 10502  0055CC  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 10503  0055CE  0E80               	movlw	128
 10504  0055D0  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 10505  0055D2  0E00               	movlw	0
 10506  0055D4  1A05               	xorwf	___flge@ff2^0,f,c
 10507  0055D6  0E00               	movlw	0
 10508  0055D8  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 10509  0055DA  0E00               	movlw	0
 10510  0055DC  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 10511  0055DE  0E80               	movlw	128
 10512  0055E0  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 10513  0055E2  5005               	movf	___flge@ff2^0,w,c
 10514  0055E4  5C01               	subwf	___flge@ff1^0,w,c
 10515  0055E6  5006               	movf	(___flge@ff2+1)^0,w,c
 10516  0055E8  5802               	subwfb	(___flge@ff1+1)^0,w,c
 10517  0055EA  5007               	movf	(___flge@ff2+2)^0,w,c
 10518  0055EC  5803               	subwfb	(___flge@ff1+2)^0,w,c
 10519  0055EE  5008               	movf	(___flge@ff2+3)^0,w,c
 10520  0055F0  5804               	subwfb	(___flge@ff1+3)^0,w,c
 10521  0055F2  B0D8               	btfsc	status,0,c
 10522  0055F4  EFFE  F02A         	goto	u3821
 10523  0055F8  EF00  F02B         	goto	u3820
 10524  0055FC                     u3821:
 10525  0055FC  EF03  F02B         	goto	l3700
 10526  005600                     u3820:
 10527  005600  90D8               	bcf	status,0,c
 10528  005602  EF04  F02B         	goto	l783
 10529  005606                     l3700:
 10530  005606  80D8               	bsf	status,0,c
 10531  005608                     l783:
 10532  005608  0012               	return		;funcret
 10533  00560A                     __end_of___flge:
 10534                           	callstack 0
 10535                           
 10536 ;; *************** function ___fleq *****************
 10537 ;; Defined at:
 10538 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
 10539 ;; Parameters:    Size  Location     Type
 10540 ;;  ff1             4    0[COMRAM] void 
 10541 ;;  ff2             4    4[COMRAM] void 
 10542 ;; Auto vars:     Size  Location     Type
 10543 ;;		None
 10544 ;; Return value:  Size  Location     Type
 10545 ;;		None               void
 10546 ;; Registers used:
 10547 ;;		wreg, status,2, status,0
 10548 ;; Tracked objects:
 10549 ;;		On entry : 0/0
 10550 ;;		On exit  : 0/0
 10551 ;;		Unchanged: 0/0
 10552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10553 ;;      Params:         8       0       0       0       0       0       0
 10554 ;;      Locals:         0       0       0       0       0       0       0
 10555 ;;      Temps:          4       0       0       0       0       0       0
 10556 ;;      Totals:        12       0       0       0       0       0       0
 10557 ;;Total ram usage:       12 bytes
 10558 ;; Hardware stack levels used: 1
 10559 ;; This function calls:
 10560 ;;		Nothing
 10561 ;; This function is called by:
 10562 ;;		_main
 10563 ;; This function uses a non-reentrant model
 10564 ;;
 10565                           
 10566                           	psect	text55
 10567  00520C                     __ptext55:
 10568                           	callstack 0
 10569  00520C                     ___fleq:
 10570                           	callstack 30
 10571  00520C  0E00               	movlw	0
 10572  00520E  1401               	andwf	___fleq@ff1^0,w,c
 10573  005210  6E09               	movwf	??___fleq^0,c
 10574  005212  0E00               	movlw	0
 10575  005214  1402               	andwf	(___fleq@ff1+1)^0,w,c
 10576  005216  6E0A               	movwf	(??___fleq+1)^0,c
 10577  005218  0E80               	movlw	128
 10578  00521A  1403               	andwf	(___fleq@ff1+2)^0,w,c
 10579  00521C  6E0B               	movwf	(??___fleq+2)^0,c
 10580  00521E  0E7F               	movlw	127
 10581  005220  1404               	andwf	(___fleq@ff1+3)^0,w,c
 10582  005222  6E0C               	movwf	(??___fleq+3)^0,c
 10583  005224  5009               	movf	??___fleq^0,w,c
 10584  005226  100A               	iorwf	(??___fleq+1)^0,w,c
 10585  005228  100B               	iorwf	(??___fleq+2)^0,w,c
 10586  00522A  100C               	iorwf	(??___fleq+3)^0,w,c
 10587  00522C  A4D8               	btfss	status,2,c
 10588  00522E  EF1B  F029         	goto	u5141
 10589  005232  EF1D  F029         	goto	u5140
 10590  005236                     u5141:
 10591  005236  EF25  F029         	goto	l4774
 10592  00523A                     u5140:
 10593  00523A  0E00               	movlw	0
 10594  00523C  6E01               	movwf	___fleq@ff1^0,c
 10595  00523E  0E00               	movlw	0
 10596  005240  6E02               	movwf	(___fleq@ff1+1)^0,c
 10597  005242  0E00               	movlw	0
 10598  005244  6E03               	movwf	(___fleq@ff1+2)^0,c
 10599  005246  0E00               	movlw	0
 10600  005248  6E04               	movwf	(___fleq@ff1+3)^0,c
 10601  00524A                     l4774:
 10602  00524A  0E00               	movlw	0
 10603  00524C  1405               	andwf	___fleq@ff2^0,w,c
 10604  00524E  6E09               	movwf	??___fleq^0,c
 10605  005250  0E00               	movlw	0
 10606  005252  1406               	andwf	(___fleq@ff2+1)^0,w,c
 10607  005254  6E0A               	movwf	(??___fleq+1)^0,c
 10608  005256  0E80               	movlw	128
 10609  005258  1407               	andwf	(___fleq@ff2+2)^0,w,c
 10610  00525A  6E0B               	movwf	(??___fleq+2)^0,c
 10611  00525C  0E7F               	movlw	127
 10612  00525E  1408               	andwf	(___fleq@ff2+3)^0,w,c
 10613  005260  6E0C               	movwf	(??___fleq+3)^0,c
 10614  005262  5009               	movf	??___fleq^0,w,c
 10615  005264  100A               	iorwf	(??___fleq+1)^0,w,c
 10616  005266  100B               	iorwf	(??___fleq+2)^0,w,c
 10617  005268  100C               	iorwf	(??___fleq+3)^0,w,c
 10618  00526A  A4D8               	btfss	status,2,c
 10619  00526C  EF3A  F029         	goto	u5151
 10620  005270  EF3C  F029         	goto	u5150
 10621  005274                     u5151:
 10622  005274  EF44  F029         	goto	l4778
 10623  005278                     u5150:
 10624  005278  0E00               	movlw	0
 10625  00527A  6E05               	movwf	___fleq@ff2^0,c
 10626  00527C  0E00               	movlw	0
 10627  00527E  6E06               	movwf	(___fleq@ff2+1)^0,c
 10628  005280  0E00               	movlw	0
 10629  005282  6E07               	movwf	(___fleq@ff2+2)^0,c
 10630  005284  0E00               	movlw	0
 10631  005286  6E08               	movwf	(___fleq@ff2+3)^0,c
 10632  005288                     l4778:
 10633  005288  5005               	movf	___fleq@ff2^0,w,c
 10634  00528A  1801               	xorwf	___fleq@ff1^0,w,c
 10635  00528C  E10F               	bnz	u5160
 10636  00528E  5006               	movf	(___fleq@ff2+1)^0,w,c
 10637  005290  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 10638  005292  E10C               	bnz	u5160
 10639  005294  5007               	movf	(___fleq@ff2+2)^0,w,c
 10640  005296  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 10641  005298  E109               	bnz	u5160
 10642  00529A  5008               	movf	(___fleq@ff2+3)^0,w,c
 10643  00529C  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 10644  00529E  B4D8               	btfsc	status,2,c
 10645  0052A0  EF54  F029         	goto	u5161
 10646  0052A4  EF56  F029         	goto	u5160
 10647  0052A8                     u5161:
 10648  0052A8  EF59  F029         	goto	l4782
 10649  0052AC                     u5160:
 10650  0052AC  90D8               	bcf	status,0,c
 10651  0052AE  EF5A  F029         	goto	l772
 10652  0052B2                     l4782:
 10653  0052B2  80D8               	bsf	status,0,c
 10654  0052B4                     l772:
 10655  0052B4  0012               	return		;funcret
 10656  0052B6                     __end_of___fleq:
 10657                           	callstack 0
 10658                           
 10659                           	psect	rparam
 10660  0000                     
 10661                           	psect	idloc
 10662                           
 10663                           ;Config register IDLOC0 @ 0x200000
 10664                           ;	unspecified, using default values
 10665  200000                     	org	2097152
 10666  200000  FF                 	db	255
 10667                           
 10668                           ;Config register IDLOC1 @ 0x200001
 10669                           ;	unspecified, using default values
 10670  200001                     	org	2097153
 10671  200001  FF                 	db	255
 10672                           
 10673                           ;Config register IDLOC2 @ 0x200002
 10674                           ;	unspecified, using default values
 10675  200002                     	org	2097154
 10676  200002  FF                 	db	255
 10677                           
 10678                           ;Config register IDLOC3 @ 0x200003
 10679                           ;	unspecified, using default values
 10680  200003                     	org	2097155
 10681  200003  FF                 	db	255
 10682                           
 10683                           ;Config register IDLOC4 @ 0x200004
 10684                           ;	unspecified, using default values
 10685  200004                     	org	2097156
 10686  200004  FF                 	db	255
 10687                           
 10688                           ;Config register IDLOC5 @ 0x200005
 10689                           ;	unspecified, using default values
 10690  200005                     	org	2097157
 10691  200005  FF                 	db	255
 10692                           
 10693                           ;Config register IDLOC6 @ 0x200006
 10694                           ;	unspecified, using default values
 10695  200006                     	org	2097158
 10696  200006  FF                 	db	255
 10697                           
 10698                           ;Config register IDLOC7 @ 0x200007
 10699                           ;	unspecified, using default values
 10700  200007                     	org	2097159
 10701  200007  FF                 	db	255
 10702                           
 10703                           	psect	config
 10704                           
 10705                           ; Padding undefined space
 10706  300000                     	org	3145728
 10707  300000  FF                 	db	255
 10708                           
 10709                           ;Config register CONFIG1H @ 0x300001
 10710                           ;	Oscillator Selection bits
 10711                           ;	OSC = HS, HS oscillator
 10712                           ;	Fail-Safe Clock Monitor Enable bit
 10713                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10714                           ;	Internal/External Oscillator Switchover bit
 10715                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10716  300001                     	org	3145729
 10717  300001  02                 	db	2
 10718                           
 10719                           ;Config register CONFIG2L @ 0x300002
 10720                           ;	Power-up Timer Enable bit
 10721                           ;	PWRT = OFF, PWRT disabled
 10722                           ;	Brown-out Reset Enable bits
 10723                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 10724                           ;	Brown Out Reset Voltage bits
 10725                           ;	BORV = 0x2E, user specified literal
 10726  300002                     	org	3145730
 10727  300002  71                 	db	369
 10728                           
 10729                           ;Config register CONFIG2H @ 0x300003
 10730                           ;	Watchdog Timer Enable bit
 10731                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10732                           ;	Watchdog Timer Postscale Select bits
 10733                           ;	WDTPS = 1, 1:1
 10734  300003                     	org	3145731
 10735  300003  00                 	db	0
 10736                           
 10737                           ; Padding undefined space
 10738  300004                     	org	3145732
 10739  300004  FF                 	db	255
 10740                           
 10741                           ;Config register CONFIG3H @ 0x300005
 10742                           ;	CCP2 MUX bit
 10743                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 10744                           ;	PORTB A/D Enable bit
 10745                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 10746                           ;	Low-Power Timer1 Oscillator Enable bit
 10747                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10748                           ;	MCLR Pin Enable bit
 10749                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10750  300005                     	org	3145733
 10751  300005  83                 	db	131
 10752                           
 10753                           ;Config register CONFIG4L @ 0x300006
 10754                           ;	Stack Full/Underflow Reset Enable bit
 10755                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 10756                           ;	Single-Supply ICSP Enable bit
 10757                           ;	LVP = OFF, Single-Supply ICSP disabled
 10758                           ;	Extended Instruction Set Enable bit
 10759                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10760                           ;	Background Debugger Enable bit
 10761                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 10762  300006                     	org	3145734
 10763  300006  80                 	db	128
 10764                           
 10765                           ; Padding undefined space
 10766  300007                     	org	3145735
 10767  300007  FF                 	db	255
 10768                           
 10769                           ;Config register CONFIG5L @ 0x300008
 10770                           ;	Code Protection bit
 10771                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 10772                           ;	Code Protection bit
 10773                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 10774                           ;	Code Protection bit
 10775                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 10776                           ;	Code Protection bit
 10777                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 10778  300008                     	org	3145736
 10779  300008  0F                 	db	15
 10780                           
 10781                           ;Config register CONFIG5H @ 0x300009
 10782                           ;	Boot Block Code Protection bit
 10783                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10784                           ;	Data EEPROM Code Protection bit
 10785                           ;	CPD = OFF, Data EEPROM not code-protected
 10786  300009                     	org	3145737
 10787  300009  C0                 	db	192
 10788                           
 10789                           ;Config register CONFIG6L @ 0x30000A
 10790                           ;	Write Protection bit
 10791                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 10792                           ;	Write Protection bit
 10793                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 10794                           ;	Write Protection bit
 10795                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 10796                           ;	Write Protection bit
 10797                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 10798  30000A                     	org	3145738
 10799  30000A  0F                 	db	15
 10800                           
 10801                           ;Config register CONFIG6H @ 0x30000B
 10802                           ;	Configuration Register Write Protection bit
 10803                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10804                           ;	Boot Block Write Protection bit
 10805                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
 10806                           ;	Data EEPROM Write Protection bit
 10807                           ;	WRTD = OFF, Data EEPROM not write-protected
 10808  30000B                     	org	3145739
 10809  30000B  E0                 	db	224
 10810                           
 10811                           ;Config register CONFIG7L @ 0x30000C
 10812                           ;	Table Read Protection bit
 10813                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 10814                           ;	Table Read Protection bit
 10815                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 10816                           ;	Table Read Protection bit
 10817                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 10818                           ;	Table Read Protection bit
 10819                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10820  30000C                     	org	3145740
 10821  30000C  0F                 	db	15
 10822                           
 10823                           ;Config register CONFIG7H @ 0x30000D
 10824                           ;	Boot Block Table Read Protection bit
 10825                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10826  30000D                     	org	3145741
 10827  30000D  40                 	db	64
 10828                           tosu	equ	0xFFF
 10829                           tosh	equ	0xFFE
 10830                           tosl	equ	0xFFD
 10831                           stkptr	equ	0xFFC
 10832                           pclatu	equ	0xFFB
 10833                           pclath	equ	0xFFA
 10834                           pcl	equ	0xFF9
 10835                           tblptru	equ	0xFF8
 10836                           tblptrh	equ	0xFF7
 10837                           tblptrl	equ	0xFF6
 10838                           tablat	equ	0xFF5
 10839                           prodh	equ	0xFF4
 10840                           prodl	equ	0xFF3
 10841                           indf0	equ	0xFEF
 10842                           postinc0	equ	0xFEE
 10843                           postdec0	equ	0xFED
 10844                           preinc0	equ	0xFEC
 10845                           plusw0	equ	0xFEB
 10846                           fsr0h	equ	0xFEA
 10847                           fsr0l	equ	0xFE9
 10848                           wreg	equ	0xFE8
 10849                           indf1	equ	0xFE7
 10850                           postinc1	equ	0xFE6
 10851                           postdec1	equ	0xFE5
 10852                           preinc1	equ	0xFE4
 10853                           plusw1	equ	0xFE3
 10854                           fsr1h	equ	0xFE2
 10855                           fsr1l	equ	0xFE1
 10856                           bsr	equ	0xFE0
 10857                           indf2	equ	0xFDF
 10858                           postinc2	equ	0xFDE
 10859                           postdec2	equ	0xFDD
 10860                           preinc2	equ	0xFDC
 10861                           plusw2	equ	0xFDB
 10862                           fsr2h	equ	0xFDA
 10863                           fsr2l	equ	0xFD9
 10864                           status	equ	0xFD8

Data Sizes:
    Strings     349
    Constant    16
    Data        64
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     92     126
    BANK0           128      0      52
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    itoa@str	PTR unsigned char  size(2) Largest target is 6
		 -> str(COMRAM[6]), 

    serial_tx_str@val	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[4]), STR_1(CODE[11]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_39(CODE[17]), STR_38(CODE[15]), STR_37(CODE[9]), STR_36(CODE[8]), 
		 -> STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[17]), STR_32(CODE[2]), 
		 -> STR_31(CODE[2]), STR_30(CODE[17]), STR_29(CODE[9]), STR_28(CODE[8]), 
		 -> STR_27(CODE[13]), STR_26(CODE[11]), STR_25(CODE[12]), STR_24(CODE[17]), 
		 -> STR_23(CODE[16]), STR_22(CODE[12]), STR_21(CODE[8]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[17]), 
		 -> STR_15(CODE[7]), STR_14(CODE[17]), STR_13(CODE[16]), STR_12(CODE[16]), 
		 -> STR_11(CODE[17]), STR_10(CODE[14]), STR_9(CODE[17]), STR_8(CODE[13]), 
		 -> STR_7(CODE[14]), STR_6(CODE[12]), STR_5(CODE[9]), STR_3(CODE[16]), 
		 -> STR_2(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_resfria
    _ssdUpdate->_digitalWrite
    _ssdInit->_pinMode
    _pwmSet1->___lwdiv
    ___flsub->___fladd
    _perigo->_pwmFrequency
    _pwmFrequency->___aldiv
    _maxEmin->_itoa
    _ligar->_lcd_str
    _lcd_init->_lcd_cmd
    _instrucoes->_lcd_str
    _inicia->_shift_texto
    _shift_texto->_lcd_cmd
    _lcdData->_digitalWrite
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    _imprime->_itoa
    _itoa->___fltol
    ___fltol->___flmul
    _fecharPorta->___fladd
    ___flmul->___xxtofl
    _controleEstoque->_serial
    _ssdEstoque->_ssdDigit
    _ssdDigit->___lwdiv
    ___lwdiv->___lwmod
    _serial->_lcd_str
    _serial_tx_str->_serial_tx
    _serial_rx->_atraso_ms
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_cmd->_atraso_ms
    _atualizar->___fldiv
    ___fldiv->___fladd
    ___fladd->___flmul
    _alerta->___flge

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0  185577
                                             82 COMRAM    10    10      0
                            ___fladd
                             ___fleq
                             _alerta
                             _aquece
                          _atraso_ms
                          _atualizar
                    _controleEstoque
                        _fecharPorta
                            _imprime
                             _inicia
                         _instrucoes
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                              _ligar
                            _maxEmin
                             _perigo
                            _pwmInit
                            _resfria
                        _serial_init
                         _ssdEstoque
                            _ssdInit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _resfria                                              2     2      0   25878
                                             80 COMRAM     2     2      0
                             ___flge
                            ___flsub
                          _atraso_ms
                          _atualizar
                            _lcd_cmd
                            _lcd_str
                            _pwmSet1
 ---------------------------------------------------------------------------------
 (2) _pwmSet1                                              5     5      0    1780
                                             12 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3649
                                             55 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _perigo                                               2     2      0    5968
                                             16 COMRAM     2     2      0
                             ___flge
                          _atraso_ms
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _maxEmin                                              0     0      0   15484
                            ___flmul
                            ___fltol
                               _itoa
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _ligar                                               17    17      0   14658
                                             12 COMRAM    17    17      0
                          _atraso_ms
                         _lcdCommand
                            _lcdData
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    4120
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _instrucoes                                           0     0      0    9104
                          _atraso_ms
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _inicia                                              17    17      0   10482
                                             10 COMRAM    17    17      0
                              _desce
                         _lcdCommand
                            _lcdData
                        _shift_texto
                               _sobe
 ---------------------------------------------------------------------------------
 (2) _sobe                                                 4     4      0     230
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _shift_texto                                          3     1      2    4468
                                              7 COMRAM     3     1      2
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              2     2      0    2663
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    2799
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _desce                                                4     4      0     230
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _imprime                                              0     0      0   15484
                            ___flmul
                            ___fltol
                               _itoa
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 4     0      4    3451
                                             49 COMRAM     4     0      4
                            ___flmul (ARG)
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     533
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _fecharPorta                                          2     0      2    9504
                                             55 COMRAM     2     0      2
                            ___fladd
                            ___flmul
                           ___xxtofl
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1690
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2352
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _controleEstoque                                      7     7      0   24082
                                             16 COMRAM     7     7      0
                          _atraso_ms
                         _kpDebounce
                             _kpInit
                             _kpRead
                            _lcd_cmd
                            _lcd_str
                             _serial
                         _ssdEstoque
 ---------------------------------------------------------------------------------
 (1) _ssdEstoque                                           0     0      0    2701
                            ___lwdiv
                            ___lwmod
                           _ssdDigit
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     404
                                             12 COMRAM     2     1      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1071
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1226
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _serial                                               4     2      2   11709
                                             12 COMRAM     4     2      2
                          _atraso_ms
                            _lcd_cmd
                            _lcd_str
                          _serial_rx
                          _serial_tx
                      _serial_tx_str
 ---------------------------------------------------------------------------------
 (3) _serial_tx_str                                        5     3      2     264
                                              1 COMRAM     5     3      2
                          _serial_tx
 ---------------------------------------------------------------------------------
 (4) _serial_tx                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _serial_rx                                            4     2      2    2182
                                              6 COMRAM     4     2      2
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2    4984
                                              7 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              1     1      0    2082
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0    2082
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _aquece                                               0     0      0   16685
                            ___fladd
                             ___flge
                          _atraso_ms
                          _atualizar
 ---------------------------------------------------------------------------------
 (2) _atualizar                                            0     0      0    8099
                            ___fladd
                            ___fldiv
                             ___flge
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1551
                                             55 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3326
                                             39 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _atraso_ms                                            6     4      2    2038
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _alerta                                               0     0      0    3222
                             ___flge
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    3222
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fleq                                              12     4      8     494
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fladd
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fleq
   _alerta
     ___flge
   _aquece
     ___fladd
     ___flge
     _atraso_ms
     _atualizar
       ___fladd
       ___fldiv
         ___fladd (ARG)
       ___flge
   _atraso_ms
   _atualizar
   _controleEstoque
     _atraso_ms
     _kpDebounce
     _kpInit
     _kpRead
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _serial
       _atraso_ms
       _lcd_cmd
       _lcd_str
       _serial_rx
         _atraso_ms
       _serial_tx
       _serial_tx_str
         _serial_tx
     _ssdEstoque
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
       _ssdDigit
         ___lwdiv (ARG)
         ___lwmod (ARG)
   _fecharPorta
     ___fladd
     ___flmul
     ___xxtofl
     _atraso_ms
   _imprime
     ___flmul
     ___fltol
       ___flmul (ARG)
     _itoa
       ___flmul (ARG)
       ___fltol (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
     _lcd_cmd
     _lcd_dat
     _lcd_str
   _inicia
     _desce
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _lcdData
       _Delay40us
       _digitalWrite
     _shift_texto
       _atraso_ms
       _lcd_cmd
     _sobe
   _instrucoes
     _atraso_ms
     _lcd_cmd
     _lcd_str
   _kpDebounce
   _kpInit
   _kpRead
   _lcdCommand
   _lcd_cmd
   _lcd_init
     _atraso_ms
     _lcd_cmd
   _lcd_str
   _ligar
     _atraso_ms
     _lcdCommand
     _lcdData
     _lcd_cmd
     _lcd_str
   _maxEmin
     ___flmul
     ___fltol
     _itoa
     _lcd_cmd
     _lcd_dat
     _lcd_str
   _perigo
     ___flge
     _atraso_ms
     _pwmFrequency
       ___aldiv
   _pwmInit
   _resfria
     ___flge
     ___flsub
       ___fladd
     _atraso_ms
     _atualizar
     _lcd_cmd
     _lcd_str
     _pwmSet1
       ___lwdiv
       ___wmul
   _serial_init
   _ssdEstoque
   _ssdInit
     _pinMode
   _ssdUpdate
     _digitalWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      34       5       40.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     5C      7E       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B2      15        0.0%
DATA                 0      0      B2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jul 28 13:30:17 2021

            ___fldiv@aexp 0050              ___fldiv@bexp 004F              ___fldiv@sign 0048  
                      l21 4982                        l30 4A4C                        l15 4850  
                      l40 48E2                        l24 4C50                        l18 4958  
                      l50 4AF0                        l35 48C6                        l47 4F4E  
                      l68 4CB4                        _v0 006A                        _v1 0069  
                      _v2 0068                        _v3 0067       ___wmul@multiplicand 0003  
__size_of_controleEstoque 0244                       l110 6CBE                       l144 6F0C  
                     l232 4B46                       l219 4BF4                       l180 485A  
                     l252 48A0                       l420 4DF0                       l412 4D92  
                     l157 4864                       l261 4A9C                       l229 5CF6  
                     l175 5FCA                       l255 48AE                       l431 4D84  
                     l423 4D26                       l183 4E5C                       l176 5FE2  
                     l272 50BE                       l192 4884                       l177 5FEA  
                     l273 50CC                       l409 5362                       l513 492E  
                     l249 4898                       l266 507A                       l275 50E2  
                     l451 5174                       l365 5816                       l445 520A  
                     l189 4908                       l374 5420                       l438 682C  
                     l463 5BA6                       l480 5A5C                       l456 5E70  
                     l472 4FD0                       l448 649C                       l466 546C  
                     l394 6A50                       l810 570E                       l467 5426  
                     l379 5054                       l484 5A60                       l468 5502  
                     l469 5504                       l477 616A                       l398 6A70  
                     l494 62F6                       l592 5922                       l772 52B4  
                     l783 5608                       l778 55C2          shift_texto@tempo 0008  
                     _str 006D                       wreg 000FE8              ___flmul@aexp 0020  
            ___flmul@bexp 0021              ___flmul@sign 001B              ___flmul@temp 0026  
            ___flmul@prod 0022              ___fltol@exp1 0031                      l1011 4ED0  
                    l1100 73C8                      l1004 4EC8                      l1021 4D18  
                    l1014 4D10                      l1041 7BBE                      l1050 7E8E  
                    l1042 7BAC                      l1106 744A                      l1043 7B72  
                    l1131 79CE                      l1108 74C2                      l1109 74B0  
                    l1134 7860                      l1127 766A                      l1144 7990  
                    l1136 78D8                      l1137 78C6                      l1058 7CD8  
                    l1067 7DA8                      l1171 6650                      l1083 49FC  
                    l1068 7D96                      l1182 65E8                      l1095 75A4  
                    l1175 658C                      l3120 4C5E                      l1168 64F4  
                    l3200 48D0                      l1097 7404                      l3122 4C62  
                    l3202 48D2                      l3210 6AC0                      l4002 4D96  
                    l3132 4C8E                      l3140 4C9A                      l3116 484C  
                    l4100 75E2                      l3220 6B5A                      l3212 6AE2  
                    l3204 6A72                      l3300 581C                      l3126 4C76  
                    l3142 4C9E                      l3118 4C52                      l3150 4966  
                    l4110 7614                      l4102 75F2                      l3230 6BEE  
                    l3222 6B76                      l3214 6AFE                      l3206 6A8E  
                    l4030 4DC8                      l4014 4D9E                      l3310 585C  
                    l3302 582A                      l3136 4C94                      l3128 4C7A  
                    l3400 7AE8                      l3152 4972                      l3144 495C  
                    l4200 794A                      l4120 7654                      l4112 7622  
                    l4104 75F8                      l3240 6C80                      l3232 6C08  
                    l3224 6B90                      l3216 6B18                      l3208 6AA0  
                    l4032 4DD8                      l4024 4DB4                      l4016 4DA0  
                    l4008 4D9A                      l3320 589A                      l3312 5860  
                    l3304 583A                      l3410 7AFC                      l3402 7AEC  
                    l3170 4932                      l3154 4974                      l3146 495E  
                    l3250 4BC4                      l4210 79B2                      l4202 795E  
                    l4130 769E                      l4122 765A                      l4114 7624  
                    l4106 7608                      l4050 4D2E                      l3242 6CA0  
                    l3234 6C28                      l3226 6BB0                      l3218 6B38  
                    l4034 4DDE                      l4026 4DB6                      l4018 4DB0  
                    l3330 58E2                      l3322 58A8                      l3314 5870  
                    l3306 583E                      l3500 7D58                      l3412 7B00  
                    l3404 7AF0                      l3420 7B10                      l3180 494A  
                    l3172 4934                      l3156 4980                      l3148 4964  
                    l3260 4A4E                      l3252 4BC8                      l3244 4BA0  
                    l4212 79B4                      l4204 7978                      l4140 76EE  
                    l4132 76AA                      l4124 767A                      l4116 7634  
                    l4108 760E                      l4300 65F6                      l4060 4D44  
                    l4044 4D2A                      l3164 48B4                      l3236 6C4A  
                    l3228 6BD2                      l4036 4DE0                      l4028 4DC6  
                    l3332 58EC                      l3324 58B2                      l3316 5886  
                    l3308 584C                      l4220 49B8                      l3502 7D66  
                    l3430 7B80                      l3422 7B14                      l3414 7B04  
                    l3406 7AF4                      l3350 79FC                      l3342 79D0  
                    l3182 4956                      l3174 493A                      l3190 4A24  
                    l3270 505E                      l3262 4A56                      l3254 4BDA  
                    l3246 4BB0                      l4206 7994                      l4214 79BA  
                    l4150 7730                      l4142 76FA                      l4134 76B4  
                    l4126 768A                      l4118 7644                      l4310 663E  
                    l4302 65F8                      l4070 4D5A                      l4038 4D1A  
                    l3166 48B6                      l3158 48B0                      l3238 6C66  
                    l3326 58D0                      l3318 588E                      l3334 58F2  
                    l4222 49C8                      l3512 7DB8                      l3520 7E0E  
                    l3504 7D6A                      l3440 7BAA                      l3432 7B8C  
                    l3424 7B3E                      l3416 7B08                      l3408 7AF8  
                    l3360 7A36                      l3352 7A0C                      l3344 79DC  
                    l4080 5CF8                      l3176 493C                      l3184 49FE  
                    l3280 50AC                      l3272 506C                      l3168 489C  
                    l3264 4A72                      l3256 4BDE                      l3248 4BB4  
                    l4400 6856                      l4216 79BE                      l4208 79A4  
                    l4160 7792                      l4152 773C                      l4144 7706  
                    l4136 76CA                      l4312 6640                      l4304 65FC  
                    l4240 5674                      l4232 5634                      l4072 4D5C  
                    l4056 4D32                      l3192 48C8                      l4320 4C06  
                    l3336 5902                      l3328 58E0                      l5024 5CD0  
                    l3530 7E60                      l3522 7E1E                      l3514 7DC4  
                    l3506 7D78                      l3450 7C00                      l3442 7BCC  
                    l3434 7B90                      l3426 7B5A                      l3418 7B0C  
                    l3370 7A64                      l3362 7A3C                      l3354 7A1C  
                    l3346 79EA                      l3610 738C                      l3602 7342  
                    l4082 5D08                      l3178 4948                      l3186 4A06  
                    l3282 50DA                      l3274 5082                      l3266 4A74  
                    l3258 4BF0                      l4410 6880                      l4402 685C  
                    l4170 7828                      l4162 779E                      l4154 774C  
                    l4146 7714                      l4138 76D6                      l4090 75A6  
                    l4306 6620                      l4250 56A4                      l4242 5682  
                    l4234 565E                      l4226 560A                      l4074 4D6C  
                    l4066 4D48                      l4058 4D34                      l3338 5912  
                    l4322 4872                      l4330 5BAC                      l3700 5606  
                    l3540 7E7E                      l3532 7E66                      l3524 7E2E  
                    l3516 7DD2                      l3508 7D8E                      l3460 7C3A  
                    l3452 7C0E                      l3444 7BDC                      l3436 7B9E  
                    l3428 7B6A                      l3380 7A98                      l3372 7A66  
                    l3364 7A4E                      l3356 7A1E                      l3348 79EC  
                    l3620 73D2                      l3612 7394                      l3604 735C  
                    l4084 5E1E                      l3188 4A22                      l3276 508E  
                    l3268 5056                      l4420 68CE                      l4412 688C  
                    l4404 6868                      l4180 787E                      l4172 7846  
                    l4164 77BA                      l4156 7766                      l4148 7720  
                    l4092 75B2                      l4308 6630                      l4260 56CE  
                    l4252 56AE                      l4236 5660                      l4228 5620  
                    l4076 4D72                      l4068 4D4A                      l4500 6686  
                    l4316 4BF6                      l4324 4876                      l3292 490A  
                    l4340 5C16                      l4332 5BC0                      l3534 7E68  
                    l3526 7E4E                      l3518 7E0C                      l3470 7CA6  
                    l3462 7C3C                      l3454 7C1C                      l3438 7BA0  
                    l3390 7AD4                      l3374 7A76                      l3382 7AA0  
                    l3366 7A50                      l3358 7A26                      l3630 742A  
                    l3622 73F0                      l3614 73A4                      l3606 736C  
                    l3550 7228                      l4086 5E2E                      l3278 5096  
                    l3710 4E80                      l4422 68DA                      l4430 6916  
                    l4414 6890                      l4406 686E                      l4190 78E8  
                    l4182 7882                      l4174 7850                      l4166 77E4  
                    l4158 7776                      l4094 75C0                      l4270 64A0  
                    l4262 56DE                      l4238 5670                      l4078 4D74  
                    l3198 48CC                      l4502 6688                      l4318 4BFA  
                    l4510 518E                      l4326 487A                      l3294 4926  
                    l4350 5C60                      l4342 5C2A                      l4334 5BD4  
                    l3536 7E6E                      l3528 7E52                      l3480 7CFE  
                    l3472 7CA8                      l3464 7C46                      l3456 7C28  
                    l3448 7BF0                      l3392 7AD8                      l3384 7AB0  
                    l3376 7A86                      l3368 7A56                      l3640 7468  
                    l3632 7430                      l3624 73F2                      l3616 73B8  
                    l3608 737C                      l3552 7238                      l3560 7262  
                    l3544 720C                      l4088 5E60                      l3288 50E0  
                    l3720 4EBA                      l3712 4E88                      l3704 4E5E  
                    l4424 68EC                      l4440 6930                      l4416 6894  
                    l4408 687A                      l4192 78F4                      l4184 7890  
                    l4176 785E                      l4168 781A                      l4096 75C2  
                    l4272 64B0                      l4264 56EE                      l4248 569A  
                    l4504 6698                      l4600 513E                      l4520 51AA  
                    l4512 5194                      l3800 6DD6                      l4360 5CB4  
                    l4352 5C72                      l4344 5C32                      l4336 5BE8  
                    l4328 5BA8                      l3538 7E7C                      l3490 7D2C  
                    l3474 7CB8                      l3458 7C2C                      l3466 7C4C  
                    l3394 7ADC                      l3386 7AC2                      l3378 7A96  
                    l3650 74D2                      l3642 746C                      l3634 743A  
                    l3626 7402                      l3618 73C6                      l3570 728E  
                    l3562 7272                      l3554 7248                      l3546 7218  
                    l3722 4EBC                      l3714 4E96                      l3706 4E66  
                    l3730 4CD0                      l4450 6972                      l4442 6942  
                    l4426 68F8                      l4418 68B0                      l4194 7902  
                    l4186 78BE                      l4178 7870                      l4098 75D2  
                    l4290 6576                      l4282 652E                      l4274 64BE  
                    l4266 56FE                      l4258 56C2                      l4530 62F8  
                    l4602 5150                      l4522 51AC                      l4506 5176  
                    l3298 5818                      l4610 5A74                      l3810 6E72  
                    l3802 6DFA                      l4354 5C86                      l4346 5C44  
                    l4338 5C04                      l3492 7D3A                      l3484 7D12  
                    l3468 7C72                      l3476 7CC8                      l3396 7AE0  
                    l3388 7AD0                      l3660 7534                      l3652 74DE  
                    l3644 747A                      l3636 7448                      l3628 7414  
                    l3572 729E                      l3580 72C8                      l3564 7278  
                    l3556 7258                      l3548 7226                      l3820 485C  
                    l3900 5384                      l3724 4EC2                      l3716 4E9C  
                    l3708 4E78                      l3740 4D0A                      l3732 4CD8  
                    l4460 69C6                      l4452 6984                      l4444 694E  
                    l4436 691A                      l4428 690A                      l4196 792C  
                    l4292 6582                      l4284 6536                      l4276 6504  
                    l4540 6368                      l4532 6304                      l4604 5156  
                    l4524 51BC                      l4508 5188                      l4700 6140  
                    l4620 5ACA                      l4612 5A80                      l4380 488C  
                    l3812 6E98                      l3804 6E20                      l4372 4AF2  
                    l4356 5C8E                      l4348 5C58                      l3494 7D42  
                    l3486 7D1C                      l3478 7CEE                      l3398 7AE4  
                    l3670 7592                      l3662 754A                      l3654 74EC  
                    l3646 74A8                      l3638 745A                      l3590 730A  
                    l3582 72D8                      l3574 72AE                      l3566 727E  
                    l3558 725A                      l3822 5E72                      l3910 53A0  
                    l3902 538A                      l3718 4EB2                      l3734 4CE6  
                    l3726 4CB6                      l4470 69F8                      l4462 69D2  
                    l4454 6990                      l4446 695A                      l4438 691C  
                    l4198 7930                      l4294 65BE                      l4286 6542  
                    l4278 651A                      l4550 6386                      l4542 636E  
                    l4534 6310                      l3750 4EF4                      l3742 4ED4  
                    l4526 51F2                      l4518 5198                      l4710 615E  
                    l4702 6146                      l4630 5B76                      l4614 5A86  
                    l4622 5ACE                      l4606 5A62                      l4390 4896  
                    l4382 488E                      l3814 6EB4                      l3806 6E3C  
                    l4374 4B42                      l4358 5CA0                      l4366 5CBC  
                    l4720 59BE                      l4712 5924                      l3496 7D46  
                    l3488 7D2A                      l3672 7598                      l3664 7564  
                    l3656 7516                      l3584 72EE                      l3576 72BE  
                    l3568 728C                      l4640 5428                      l3840 5EC8  
                    l3832 5E7E                      l3824 5E76                      l3920 53E0  
                    l3912 53AE                      l3904 539C                      l3736 4CFC  
                    l3728 4CC8                      l4480 6A48                      l4472 6A0A  
                    l4464 69DE                      l4456 699C                      l4448 696C  
                    l4392 682E                      l4296 65CA                      l4288 6574  
                    l4560 641A                      l4552 6392                      l4544 6374  
                    l4536 6316                      l3760 4F42                      l3752 4F08  
                    l3744 4ED8                      l4528 51FE                      l4704 614C  
                    l4632 5B82                      l4624 5B00                      l4616 5ABA  
                    l4608 5A6E                      l4384 4890                      l4376 4886  
                    l3816 6EC6                      l3808 6E4E                      l3690 5582  
                    l3682 5506                      l4722 59F0                      l4714 5928  
                    l3498 7D56                      l3674 759A                      l3666 7580  
                    l3658 751A                      l3586 72FE                      l3594 731E  
                    l3578 72C0                      l4642 549E                      l3850 5EEC  
                    l3842 5ECC                      l3834 5EC0                      l3826 5E7A  
                    l3930 541A                      l3922 53EC                      l3914 53B0  
                    l3738 4D04                      l4482 6A64                      l4474 6A20  
                    l4466 69EA                      l4458 69AA                      l4394 683E  
                    l4298 65D8                      l4650 4FC2                      l4570 6446  
                    l4562 642E                      l4554 6398                      l4546 637A  
                    l4538 6362                      l3762 4F4A                      l3754 4F1C  
                    l3746 4EDC                      l3770 4ABC                      l4490 666A  
                    l4706 6152                      l4730 619E                      l4634 5B8E  
                    l4626 5B32                      l4618 5AC6                      l4386 4892  
                    l4378 488A                      l3818 6EEA                      l3692 5590  
                    l3684 5534                      l4724 5A22                      l4716 595A  
                    l3668 7584                      l3596 732E                      l3588 7306  
                    l4644 54D0                      l3860 5F8E                      l3852 5F18  
                    l3844 5EE8                      l3916 53C0                      l3924 53F8  
                    l3940 4FDA                      l4484 6A6C                      l4476 6A2C  
                    l4468 69F2                      l4396 6844                      l4652 4FCE  
                    l4580 647E                      l4572 644C                      l4564 6434  
                    l4556 6408                      l4548 6380                      l3756 4F20  
                    l3748 4EF0                      l3772 4AC0                      l3764 4AA0  
                    l4492 6670                      l4708 6158                      l4660 600A  
                    l4732 61D0                      l4740 6298                      l4636 5BA0  
                    l4628 5B64                      l4388 4894                      l3780 6CC0  
                    l4900 7080                      l3694 55A2                      l3686 5544  
                    l4718 598C                      l4726 5A54                      l3598 732E  
                    l4638 5422                      l3870 5FC2                      l3862 5F90  
                    l3854 5F48                      l3926 5408                      l3918 53D4  
                    l3942 4FDE                      l3934 4FD2                      l4478 6A38  
                    l4398 684A                      l4646 4F50                      l4582 6484  
                    l4574 6458                      l4566 643A                      l4558 6414  
                    l3758 4F32                      l3774 4AD4                      l3766 4AA4  
                    l4486 6652                      l4590 50EA                      l4670 607E  
                    l4662 6056                      l4654 5FEC                      l4742 62A4  
                    l4734 6202                      l3790 6D4C                      l3782 6CDC  
                    l4910 70AA                      l4902 7086                      l3696 55B0  
                    l3688 5572                      l3872 5FDA                      l3864 5FA0  
                    l3856 5F7C                      l3928 5414                      l3944 4FFA  
                    l4648 4FC0                      l4584 648A                      l4576 6472  
                    l4568 6440                      l3776 4AE8                      l3768 4AA8  
                    l3952 52BA                      l4488 6664                      l4592 50F6  
                    l4680 609C                      l4672 6084                      l4664 605C  
                    l4656 5FF8                      l4760 62C2                      l4752 62AC  
                    l4736 6234                      l4728 616C                      l3880 4E12  
                    l3792 6D5E                      l3784 6CEE                      l4920 70EA  
                    l4904 708C                      l4912 70B2                      l4840 6F0E  
                    l4770 520C                      l3698 5600                      l3874 5FE6  
                    l3866 5FB8                      l3858 5F7E                      l3890 5710  
                    l4586 6490                      l4578 6478                      l3778 4AEC  
                    l3970 5306                      l3954 52CC                      l3946 52B6  
                    l4498 6674                      l4594 5108                      l4690 6112  
                    l4682 60A2                      l4674 608A                      l4666 606C  
                    l4658 6004                      l4762 62CA                      l4754 62AE  
                    l4738 6266                      l3882 4E2E                      l3794 6D82  
                    l3786 6D0E                      l4930 7120                      l4922 70F0  
                    l4914 70C4                      l4906 7098                      l4850 6F5E  
                    l4842 6F4E                      l4780 52AC                      l4772 523A  
                    l3868 5FBE                      l3876 4852                      l3892 5806  
                    l3980 531E                      l3964 52E2                      l3956 52CE  
                    l4596 510E                      l4588 50E4                      l4692 6118  
                    l4684 60B4                      l4676 6090                      l4668 6072  
                    l4764 62DA                      l4756 62B2                      l4748 62A8  
                    l3884 4E36                      l3796 6DA8                      l3788 6D30  
                    l4940 713A                      l4932 7126                      l4916 70D6  
                    l4924 70F8                      l4908 709E                      l4860 6F8C  
                    l4852 6F64                      l4844 6F52                      l4782 52B2  
                    l4774 524A                      l3894 5364                      l3990 5344  
                    l3982 532E                      l3966 52F4                      l3958 52DE  
                    l4598 5132                      l4694 6128                      l4686 60C0  
                    l4678 6096                      l4766 62DE                      l4758 62B6  
                    l3886 4E4E                      l3878 4DF4                      l3798 6DC4  
                    l4950 71DC                      l4942 713E                      l4926 710A  
                    l4918 70E2                      l4934 712E                      l4870 6FDC  
                    l4862 6F9C                      l4854 6F68                      l4846 6F56  
                    l4776 5278                      l3896 5368                      l3992 5346  
                    l3976 530A                      l3968 52F6                      l4696 612E  
                    l4688 60C6                      l3888 48E4                      l4768 62EE  
                    l4952 71EA                      l4944 7142                      l4936 7132  
                    l4928 710E                      l4880 7004                      l4872 6FE2  
                    l4864 6FAC                      l4856 6F6C                      l4848 6F5A  
                    l4778 5288                      l3898 5378                      l3994 5356  
                    l3978 531C                      l4698 613A                      l4954 71EC  
                    l4946 7176                      l4938 7136                      l4882 7008  
                    l4890 702C                      l4874 6FE6                      l4866 6FBC  
                    l4858 6F7C                      l3988 5332                      l3996 4D86  
                    l4948 71A8                      l4956 71FC                      l4892 7048  
                    l4884 700E                      l4876 6FEA                      l4868 6FCC  
                    l4958 7200                      l4894 7066                      l4886 701A  
                    l4878 6FFC                      l4896 706A                      l4888 7020  
                    l4898 707C                      STR_1 7FB1                      STR_2 7FE1  
                    STR_3 7F28                      STR_4 7FF8                      STR_5 7FC7  
                    STR_6 7F99                      STR_7 7F65                      STR_8 7F80  
                    STR_9 7EF6                      u3000 4BC4                      u3001 4BC0  
                    u3010 4BDA                      u3011 4BD6                      u3020 4BF0  
                    u3100 582A                      u3021 4BEC                      u3101 5826  
                    u3030 4A9C                      u3110 584C                      u3031 4A98  
                    u3111 5848                      u3200 7A64                      u3040 506C  
                    u3120 5886                      u4000 6DD6                      u3201 7A60  
                    u3041 5068                      u3121 5882                      u4001 6DD2  
                    u3210 7A76                      u3050 507A                      u3130 58A8  
                    u3211 7A72                      u3051 5076                      u3131 58A4  
                    u3300 7BBE                      u3220 7A86                      u3060 50AC  
                    u3140 58D0                      u3301 7BBA                      u3221 7A82  
                    u3061 50A8                      u3141 58CC                      u3310 7BCC  
                    u3230 7AC2                      u3070 50BE                      u3150 5902  
                    u4030 6E3C                      u4014 6DEC                      u3311 7BC8  
                    u3231 7ABE                      u3071 50BA                      u3151 58FE  
                    u4031 6E38                      u4015 6DE8                      u5000 595A  
                    u3400 7D2A                      u3320 7BDC                      u3240 7AD0  
                    u3160 79EA                      u4200 5FB8                      u3080 50CC  
                    u4104 6F00                      u4040 6E4E                      u4024 6E10  
                    u5001 5956                      u3401 7D26                      u3321 7BD8  
                    u3241 7ACC                      u3161 79E6                      u4201 5FB4  
                    u3081 50C8                      u4105 6EFC                      u4041 6E4A  
                    u4025 6E0C                      u5010 598C                      u3410 7D3A  
                    u3330 7C0E                      u3250 7B3E                      u3170 79FC  
                    u4210 5FDA                      u4130 5EE8                      u4114 5E94  
                    u3090 50DA                      u5011 5988                      u3411 7D36  
                    u3331 7C0A                      u3251 7B3A                      u3171 79F8  
                    u4211 5FD6                      u4131 5EE4                      u4115 5E90  
                    u3091 50D6                      u5020 59BE                      u3500 7E1E  
                    u3420 7D56                      u3340 7C1C                      u3260 7B56  
                    u3180 7A0C                      u4124 5EB4                      u4220 53C0  
                    u4300 4DB0                      u5100 6266                      u5021 59BA  
                    u3501 7E1A                      u3421 7D52                      u3341 7C18  
                    u3261 7B50                      u3181 7A08                      u4125 5EB0  
                    u4221 53BC                      u4301 4DAC                      u5101 6262  
                    u5030 59F0                      u3510 7E2E                      u3430 7D66  
                    u3350 7C3A                      u3270 7B58                      u3190 7A4E  
                    u4150 5F18                      u4230 53D4                      u4310 4DC6  
                    u5110 6298                      u4070 6EB4                      u4054 6E64  
                    u5031 59EC                      u3511 7E2A                      u3431 7D62  
                    u3351 7C36                      u3191 7A4A                      u4151 5F14  
                    u4231 53D0                      u4311 4DC2                      u5111 6294  
                    u4071 6EB0                      u4055 6E60                      u5040 5A22  
                    u2720 4C72                      u3520 7E4E                      u3440 7D78  
                    u3360 7C72                      u3280 7B80                      u3600 72AE  
                    u4144 5EFE                      u4240 5408                      u4400 75C0  
                    u2800 6AA0                      u4320 4DD8                      u5120 62DA  
                    u4080 6EC6                      u4064 6E88                      u5200 7048  
                    u5041 5A1E                      u2721 4C6E                      u3521 7E4A  
                    u3441 7D74                      u3361 7C6E                      u3281 7B7C  
                    u3601 72AA                      u4145 5EFA                      u4241 5404  
                    u4401 75BC                      u2801 6A9C                      u4321 4DD4  
                    u5121 62D6                      u4081 6EC2                      u4065 6E84  
                    u5201 7044                      u5050 5A54                      u2730 4C8A  
                    u3530 7E60                      u3450 7D8E                      u3370 7CB8  
                    u3290 7B9E                      u3610 72EE                      u4250 4FFA  
                    u4410 75D2                      u4330 4DF0                      u5130 62EE  
                    u5210 7066                      u5051 5A50                      u2731 4C86  
                    u3531 7E5C                      u3451 7D8A                      u3371 7CB4  
                    u3291 7B9A                      u3611 72EA                      u4251 4FF6  
                    u4411 75CE                      u4331 4DEC                      u5131 62EA  
                    u5211 7062                      u5140 523A                      u2740 4CB4  
                    u3540 7E7C                      u3460 7DA4                      u3380 7CEE  
                    u3700 747A                      u3620 732E                      u4180 5F8E  
                    u4164 5F36                      u4500 787E                      u4420 75E2  
                    u4340 4D44                      u4260 52DE                      u5060 619E  
                    u5220 707C                      u5141 5236                      u2741 4CB0  
                    u3541 7E78                      u3461 7DA0                      u3381 7CEA  
                    u3701 7476                      u3621 732A                      u4181 5F8A  
                    u4165 5F30                      u4501 787A                      u4421 75DE  
                    u4341 4D40                      u4261 52DA                      u5061 619A  
                    u5221 7078                      u5150 5278                      u3470 7DB8  
                    u3390 7CFE                      u3710 74A8                      u3630 73A4  
                    u3550 7226                      u4190 5FA0                      u4174 5F66  
                    u4510 7890                      u4430 7622                      u4350 4D5A  
                    u2750 48C6                      u2910 6BEE                      u2830 6AFE  
                    u2814 6AB2                      u4270 5306                      u5070 61D0  
                    u4094 6EDC                      u5230 70C4                      u5151 5274  
                    u3471 7DB4                      u3391 7CFA                      u3711 74A4  
                    u3631 73A0                      u3551 7222                      u4191 5F9C  
                    u4175 5F60                      u4511 788C                      u4431 761E  
                    u4351 4D56                      u2751 48C2                      u2911 6BEA  
                    u2831 6AFA                      u2815 6AAE                      u4271 5302  
                    u5071 61CC                      u4095 6ED8                      u5231 70C0  
                    u5160 52AC                      u3800 5590                      u3480 7DD2  
                    u3720 74BE                      u3640 73C6                      u3560 7238  
                    u2760 48AE                      u4520 78BE                      u4440 7634  
                    u4600 5654                      u4360 4D6C                      u2920 6C08  
                    u2904 6BC2                      u2840 6B18                      u2824 6AD2  
                    u4280 532E                      u5080 6202                      u5240 70D6  
                    u5161 52A8                      u3801 558C                      u3481 7DCE  
                    u3721 74BA                      u3641 73C2                      u3561 7234  
                    u2761 48AA                      u4521 78BA                      u4441 7630  
                    u4361 4D68                      u2921 6C04                      u2905 6BBE  
                    u2841 6B14                      u2825 6ACE                      u4281 532A  
                    u5081 61FE                      u5241 70D2                      u3810 55B0  
                    u3490 7E0C                      u3730 74D2                      u3650 73F0  
                    u3570 7248                      u2770 4A4C                      u4530 78D4  
                    u4450 7644                      u4610 5682                      u4370 4D84  
                    u4290 5356                      u5090 6234                      u5250 710A  
                    u3811 55AC                      u3491 7E08                      u3731 74CE  
                    u3651 73EC                      u3571 7244                      u2771 4A48  
                    u4531 78D0                      u4451 7640                      u4611 567E  
                    u4371 4D80                      u4291 5352                      u5091 6230  
                    u5251 7106                      u3820 5600                      u3740 74EC  
                    u3660 7414                      u3580 728C                      u4380 5E1E  
                    u4540 78E8                      u4460 767A                      u4700 65BA  
                    u4620 5696                      u2780 48E2                      u3900 4F42  
                    u5260 7120                      u3821 55FC                      u3741 74E8  
                    u3661 7410                      u3581 7288                      u4381 5E1A  
                    u4541 78E4                      u4461 7676                      u4701 65B6  
                    u4621 5692                      u4605 564A                      u2781 48DE  
                    u3901 4F3E                      u5261 711C                      u3750 7534  
                    u3670 742A                      u3590 729E                      u4390 5E60  
                    u3830 4E78                      u4550 7902                      u4470 768A  
                    u4710 65D8                      u4630 56BE                      u2950 6C66  
                    u2934 6C1A                      u2870 6B76                      u2854 6B2A  
                    u2790 6A8E                      u3910 6CDC                      u5270 71A8  
                    u5190 6FFC                      u3751 7530                      u3671 7426  
                    u3591 729A                      u4391 5E5C                      u3831 4E74  
                    u4551 78FE                      u4471 7686                      u4711 65D4  
                    u4631 56BA                      u2951 6C62                      u2935 6C16  
                    u2871 6B72                      u2855 6B26                      u2791 6A8A  
                    u3911 6CD8                      u5271 71A4                      u5191 6FF8  
                    u3760 7564                      u3680 7448                      u3840 4E96  
                    u4800 692C                      u4560 794A                      u4480 7804  
                    u4720 65E8                      u4640 56DE                      u2960 6C80  
                    u2944 6C3A                      u2880 6B90                      u2864 6B4A  
                    u3920 6CEE                      u3761 7560                      u3681 7444  
                    u3841 4E92                      u4801 6928                      u4561 7946  
                    u4721 65E4                      u4641 56DA                      u2961 6C7C  
                    u2945 6C36                      u2881 6B8C                      u2865 6B46  
                    u3921 6CEA                      u3770 7592                      u3690 7468  
                    u3850 4EB2                      u4810 6942                      u4570 7978  
                    u4490 785E                      u4730 65F6                      u4650 56EE  
                    u3771 758E                      u3691 7464                      u3851 4EAE  
                    u4811 693E                      u4571 7974                      u4491 785A  
                    u4731 65F2                      u4651 56EA                      u3780 5534  
                    u3860 4CC8                      u4820 69AA                      u4580 79B2  
                    u4740 6630                      u4660 64B0                      u4900 51BC  
                    u3781 5530                      u3861 4CC4                      u4821 69A6  
                    u4581 79AE                      u4485 77FA                      u4741 662C  
                    u4661 64AC                      u4901 51B8                      u3790 5572  
                    u3870 4CE6                      u2990 4BB0                      u4830 69C6  
                    u4750 663E                      u4670 64BE                      u4590 5620  
                    u2974 6C92                      u2894 6BA2                      u4910 5B00  
                    u3950 6D4C                      u3934 6D00                      u3791 556E  
                    u3871 4CE2                      u2991 4BAC                      u4831 69C2  
                    u4751 663A                      u4671 64BA                      u4591 561C  
                    u2975 6C8E                      u2895 6B9E                      u4911 5AFC  
                    u3951 6D48                      u3935 6CFC                      u3880 4CFC  
                    u4840 6A0A                      u4760 68B0                      u4680 651A  
                    u2984 6CB2                      u4920 5B32                      u3960 6D5E  
                    u3944 6D20                      u3881 4CF8                      u4841 6A06  
                    u4761 68AC                      u4681 6516                      u2985 6CAE  
                    u4921 5B2E                      u3961 6D5A                      u3945 6D1C  
                    u4850 6A20                      u4770 68CE                      u4690 6570  
                    u3890 4F32                      u4930 5B64                      u4851 6A1C  
                    u4771 68CA                      u4691 656C                      u3891 4F2E  
                    u4931 5B60                      u4860 6A64                      u4780 68EC  
                    u4940 5B76                      u4861 6A60                      u4781 68E8  
                    u4941 5B72                      u4950 549E                      u4790 690A  
                    u3990 6DC4                      u3974 6D74                      u4951 549A  
                    u4791 6906                      u4871 665C                      u3991 6DC0  
                    u3975 6D70                      u4960 54D0                      u4880 6698  
                    u3984 6D98                      u4961 54CC                      u4881 6694  
                    u3985 6D94                      u4970 5502                      u4971 54FE  
                    u4891 5180                      u4980 606C                      u4981 6068  
                    u4990 6128                      u4991 6124      controleEstoque@tecla 0011  
                    _main 6F0E                      _itoa 5710                      _sobe 4D86  
                    fsr2h 000FDA                      indf2 000FDF                      fsr1l 000FE1  
                    fsr2l 000FD9                      prodh 000FF4                      prodl 000FF3  
                    start 0000           ___fldiv@new_exp 0049          serial_rx@timeout 0007  
            ___param_bank 000000             ___fltol@sign1 0030           __end_of___aldiv 5924  
         __end_of___fladd 7E90                     ?_main 0001           __end_of___fldiv 75A6  
                   ?_itoa 0032                     STR_10 7F57                     STR_11 7EE5  
                   STR_20 7FFC                     STR_12 7F18                     STR_13 7F28  
                   STR_21 7FD9                     STR_22 7FA5                     STR_14 7ED4  
                   STR_30 7EA1                     STR_31 7EF4                     STR_15 7FF1  
                   STR_23 7F38                     STR_32 7FFC                     STR_24 7F07  
                   STR_16 7EC3                     STR_17 7FFC                     STR_25 7F8D  
                   STR_33 7EB2                     STR_34 7EF4                     STR_18 7FFC  
                   STR_26 7FBC                     STR_35 7FFC                     STR_19 7FFC  
                   STR_27 7F73                     STR_36 7FE9                     STR_28 7FE9  
                   STR_37 7FD0                     STR_29 7FD0                     STR_38 7F48  
                   STR_39 7F07                     ?_sobe 0001           __end_of___flmul 79D0  
         __end_of___flsub 49FE           __end_of___fltol 5710              main@controle 0055  
         __end_of___lwdiv 4ED2           __end_of___lwmod 4D1A                     _RCREG 000FAE  
                   _SPBRG 000FAF                     _PORTA 000F80                     _PORTB 000F81  
                   _PORTC 000F82                     _PORTD 000F83                     _PORTE 000F84  
                   _TRISA 000F92                     _TRISB 000F93                     _TRISC 000F94  
                   _TRISD 000F95                     _TRISE 000F96                     _TXREG 000FAD  
         __end_of_lcdData 4AF2           __end_of_lcd_dat 4984           __end_of_lcd_cmd 495A  
         __end_of_lcd_str 4A4E           __end_of_maxEmin 616C                     _desce 4D1A  
                   _ligar 5176           __end_of_pinMode 6F0E           __end_of_imprime 649E  
                   _valor 0065           __end_of_resfria 5BA8                     tablat 000FF5  
         __end_of_ssdInit 4B48                     sobe@i 0001                     sobe@j 0004  
                   sobe@k 0002           __end_of_pwmSet1 4E5E           __end_of_pwmInit 4886  
             inicia@F2432 0090                     plusw1 000FE3                     plusw2 000FDB  
                   status 000FD8          __end_of_Delay2ms 48E4      __size_of_fecharPorta 0082  
    __end_of_digitalWrite 6CC0           __initialization 4B48              __end_of_main 720C  
            __end_of_itoa 5818              __end_of_sobe 4DF2        __size_of_Delay40us 0018  
        serial_tx_str@val 0002                    ??_main 0053                    ??_itoa 0036  
                  ??_sobe 0001             __activetblptr 000002         ??_controleEstoque 0011  
                  ?_desce 0001                    ?_ligar 0001          __end_of___xxtofl 6652  
            ?_serial_init 0001              ?_shift_texto 0008          __end_of_lcd_init 4C52  
                  ___flge 5506                    ___fleq 520C                 ??___aldiv 0009  
               ??___fladd 0030                    ___wmul 490A                 ??___fldiv 0040  
               ??___flmul 0017                 ??___flsub 0040                 ??___fltol 002C  
                  _alerta 5924                 ??___lwdiv 000A                 ??___lwmod 0005  
                  _aquece 5422                    _kpInit 4852                    _kpRead 485C  
                  _lcd_wr 484A                    _inicia 6652                    _maximo 00A4  
                  _minimo 00A0                    clear_0 4B8E                    desce@i 0001  
                  desce@j 0004                    desce@k 0002                    _perigo 616C  
               ??_lcdData 0007                    _serial 5364                    isa$std 000001  
                  _ponto1 00AC                    _ponto2 00A8                 ??_lcd_dat 0007  
               ??_lcd_cmd 0007                 ??_lcd_str 000A                 ??_maxEmin 0036  
                  ligar@i 001D          __end_of_ssdDigit 4BF6              __pdataCOMRAM 0073  
               ??_pinMode 0005                 ??_imprime 0036              __mediumconst 7E90  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
               ??_resfria 0051                 ??_ssdInit 0007                 ??_pwmSet1 000D  
               ??_pwmInit 0001         __end_of_Delay40us 48C8                ___flge@ff1 0001  
              ___flge@ff2 0005              ___xxtofl@arg 000B              ___xxtofl@exp 000A  
            ___xxtofl@val 0001                ___fleq@ff1 0001                ___fleq@ff2 0005  
              __accesstop 0080   __end_of__initialization 4B94             ___rparam_used 000001  
              ___fltol@f1 0028        controleEstoque@aux 0016        controleEstoque@opc 0014  
             pinMode@type 0003            __pcstackCOMRAM 0001              __pidataBANK0 4984  
           __end_of_desce 4D86             __end_of_ligar 520C     __end_of_serial_tx_str 4A9E  
               ?_Delay2ms 0001                   ??_desce 0001                   ??_ligar 000D  
      __size_of_atraso_ms 0064        __size_of_atualizar 017A     __size_of_digitalWrite 024E  
                 ?___flge 0001                   ?___fleq 0001                _lcdCommand 4ED2  
                 ?___wmul 0001                   ?_alerta 0001                   ?_aquece 0001  
                 ?_kpInit 0001                   ?_kpRead 0001                   ?_lcd_wr 0001  
                 ?_inicia 0001                   ?_perigo 0001                _kpDebounce 5E72  
                 ?_serial 000D        __size_of_serial_rx 008E        __size_of_serial_tx 0016  
      __size_of_ssdUpdate 0150                 ?___xxtofl 0001                ??_Delay2ms 0002  
            _digitalWrite 6A72                 ?_lcd_init 0001                   __Hparam 0000  
                 __Lparam 0000                 ?_ssdDigit 000D           kpDebounce@old_D 0006  
         kpDebounce@tempo 006C                   ___aldiv 5818           __size_of___flge 0104  
         __size_of___fleq 00AA                   ___fladd 79D0                   ___fldiv 720C  
                 ___flmul 75A6                   ___flsub 49B8                   ___fltol 560A  
         __size_of___wmul 0026                   ___lwdiv 4E5E                   ___lwmod 4CB6  
         __size_of_alerta 013E      __size_of_serial_init 0014      __size_of_shift_texto 00AE  
       __end_of_atraso_ms 4CB6           __size_of_aquece 00E4         __end_of_atualizar 5E72  
         __size_of_kpInit 000A           __size_of_kpRead 000A           __size_of_lcd_wr 0008  
         _controleEstoque 682E               ssdDigit@val 000E               ssdDigit@pos 000D  
         __size_of_inicia 01DC                   __pcinit 4B48                   _lcdData 4A9E  
                 __ramtop 0600           __size_of_perigo 018C                   __ptext0 6F0E  
                 __ptext1 5BA8                   __ptext2 4AF2           __size_of_serial 00BE  
                 __ptext3 6CC0                   __ptext4 4886                   __ptext5 5A62  
                 __ptext6 4DF2                   __ptext7 490A                   __ptext8 49B8  
                 __ptext9 4872                   _lcd_dat 495A                   _lcd_cmd 4930  
                 _display 006B                   _lcd_str 49FE               resfria@cont 0051  
                 _maxEmin 5FEC                ??___xxtofl 0005                   _pinMode 6CC0  
                 _imprime 62F8                   _estoque 005D          ___aldiv@dividend 0001  
                 _resfria 5A62                   _ssdInit 4AF2                   _pwmSet1 4DF2  
                 _pwmInit 4872                 Delay2ms@i 0002               serial_rx@to 0009  
                 main@aux 0057                ??_lcd_init 0008       kpDebounce@valorNovo 0063  
    end_of_initialization 4B94                   inicia@i 001B                _instrucoes 50E4  
           ??_fecharPorta 003A                   itoa@val 0032             __Lmediumconst 7E90  
                 itoa@str 0034         __end_of_serial_rx 50E4         __end_of_serial_tx 48B0  
           ?_pwmFrequency 000F                   perigo@i 0012                   perigo@k 0011  
       __end_of_ssdUpdate 5CF8                   serial@i 000F                ??_ssdDigit 000E  
              _tempPontos 0073                 _RCSTAbits 000FAB          ___aldiv@quotient 000B  
                 postdec1 000FE5               ?_lcdCommand 0001                   postinc0 000FEE  
              _ssdEstoque 4FD2               ?_kpDebounce 0001                 _PORTCbits 000F82  
               _PORTEbits 000F84            _valor@ssd$F306 7E91               ___fladd@grs 0037  
           ___xxtofl@sign 0009                 _TRISCbits 000F94                 _TRISEbits 000F96  
              lcd_dat@val 0007                lcd_cmd@val 0007               ___fldiv@grs 004B  
             ___fldiv@rem 0044               ___flmul@grs 001C            ??_pwmFrequency 0011  
               _Delay40us 48B0                 _TXSTAbits 000FAC                lcd_str@str 0008  
 __end_of_controleEstoque 6A72       __end_of_fecharPorta 4FD2            serial_tx_str@i 0006  
          __end_of___flge 560A            __end_of___fleq 52B6                atraso_ms@i 0003  
              atraso_ms@j 0005                atraso_ms@k 0006                ligar@F2436 0080  
          __end_of___wmul 4930            __end_of_alerta 5A62             __pidataCOMRAM 4866  
           inicia@desenho 000B            __end_of_aquece 5506            __end_of_kpInit 485C  
          __end_of_kpRead 4866            __end_of_lcd_wr 4852    __end_of_valor@ssd$F306 7EA1  
          __end_of_inicia 682E            __end_of_perigo 62F8            __end_of_serial 5422  
     start_initialization 4B48         __size_of_Delay2ms 001C       __size_of_lcdCommand 007E  
             ?_instrucoes 0001       __size_of_kpDebounce 017A                ?_Delay40us 0001  
                ??___flge 0009                  ??___fleq 0009                  ??___wmul 0005  
             ?_ssdEstoque 0001                  ??_alerta 000D                  ??_aquece 0051  
                ??_kpInit 0001                  ??_kpRead 0003                  ??_lcd_wr 0001  
             __pdataBANK0 0080                  ??_inicia 000B                  ??_perigo 0011  
                ??_serial 000F                 ___fladd@a 002C                 ___fladd@b 0028  
               ___fldiv@a 003C                 ___fldiv@b 0038                 ___flmul@a 0013  
               ___flmul@b 000F               __pbssCOMRAM 005D                 ___flsub@a 003C  
               ___flsub@b 0038                pinMode@pin 0001         __size_of___xxtofl 01B4  
             _fecharPorta 4F50    __size_of_serial_tx_str 0050         __size_of_lcd_init 005C  
        ___lwdiv@dividend 0006          ?_controleEstoque 0001             __pmediumconst 7E90  
                ?___aldiv 0001                  ?___fladd 0028                  ?___fldiv 0038  
                ?___flmul 000F                  ?___flsub 0038                  ?___fltol 0028  
       __size_of_ssdDigit 0058                  ?___lwdiv 0006                  ?___lwmod 0001  
                ?_lcdData 0001       __size_of_instrucoes 0092                  ?_lcd_dat 0001  
                ?_lcd_cmd 0001                  ?_lcd_str 0008      __end_of_pwmFrequency 490A  
              sobe@before 0003             lcdCommand@cmd 0008                  ?_maxEmin 0001  
               _atraso_ms 4C52                 _atualizar 5CF8                  ?_pinMode 0001  
                ?_imprime 0001                  ?_resfria 0001                  ?_ssdInit 0001  
                ?_pwmSet1 0001                  ?_pwmInit 0001          ___lwdiv@quotient 000A  
          __size_of_desce 006C            __size_of_ligar 0096       __size_of_ssdEstoque 0084  
        pwmFrequency@freq 000F            atraso_ms@valor 0001           ___aldiv@divisor 0005  
         ___aldiv@counter 0009               ??_Delay40us 0001            ___wmul@product 0005  
          _limiteInferior 00B0                  _PIR1bits 000F9E             ??_serial_init 0001  
           ??_shift_texto 000A                 _serial_rx 5056                 _serial_tx 489A  
            ??_lcdCommand 0007                 _ssdUpdate 5BA8                pwmSet1@val 0010  
            ??_kpDebounce 0001             _serial_tx_str 4A4E         ___wmul@multiplier 0001  
          _limiteSuperior 00B2                ?_atraso_ms 0001           lcdCommand@old_D 0007  
              ?_atualizar 0001     kpDebounce@valorAntigo 0061                 lcd_wr@val 0001  
                _Delay2ms 48C8                 main@tecla 0053                 copy_data0 4B5C  
               copy_data1 4B7C        __end_of_lcdCommand 4F50              lcdData@old_D 0008  
            lcdData@valor 0007                 ligar@logo 000D        __end_of_kpDebounce 5FEC  
                __Hrparam 0000                  __Lrparam 0000                ?_serial_rx 0007  
              ?_serial_tx 0001                ?_ssdUpdate 0001          __size_of___aldiv 010C  
        __size_of___fladd 04C0          __size_of___fldiv 039A          __size_of___flmul 042A  
        __size_of___flsub 0046          __size_of___fltol 0106            ?_serial_tx_str 0002  
        __size_of___lwdiv 0074          __size_of___lwmod 0064          controleEstoque@i 0013  
         pwmSet1@porcento 000F       __end_of_serial_init 489A       __end_of_shift_texto 5364  
        __size_of_lcdData 0054          __size_of_lcd_dat 002A          __size_of_lcd_cmd 002A  
        __size_of_lcd_str 0050          __size_of_maxEmin 0180                  ___xxtofl 649E  
        __size_of_pinMode 024E          __size_of_imprime 01A6           ___lwdiv@divisor 0008  
         ___lwdiv@counter 000C                  __ptext10 616C                  __ptext11 48E4  
                __ptext20 4A9E                  __ptext12 5818                  __ptext21 4ED2  
                __ptext13 5FEC                  __ptext30 649E                  __ptext22 6A72  
                __ptext14 5176                  __ptext31 75A6                  __ptext23 48C8  
                __ptext15 4BF6                  __ptext40 5056                  __ptext32 682E  
                __ptext24 48B0                  __ptext16 50E4                  __ptext41 49FE  
                __ptext33 4FD2                  __ptext25 4D1A                  __ptext17 6652  
                __ptext50 720C                  __ptext42 495A                  __ptext34 4B9E  
                __ptext26 62F8                  __ptext18 4D86                  __ptext51 79D0  
                __ptext43 4930                  __ptext35 4CB6                  __ptext27 5710  
                __ptext19 52B6                  __ptext52 4C52                  __ptext44 484A  
                __ptext36 4E5E                  __ptext28 560A                  __ptext53 5924  
                __ptext45 485C                  __ptext37 5364                  __ptext29 4F50  
                __ptext54 5506                  __ptext46 4852                  __ptext38 4A4E  
                __ptext55 520C                  __ptext47 5E72                  __ptext39 489A  
                __ptext48 5422                  __ptext49 5CF8          __size_of_resfria 0146  
        __size_of_ssdInit 0056          __size_of_pwmSet1 006C          __size_of_pwmInit 0014  
                _lcd_init 4BF6              ??_instrucoes 000D                  _auxiliar 005F  
           __size_of_main 02FE             __size_of_itoa 0108             __size_of_sobe 006C  
               serial@tmp 0010                Delay40us@i 0001                  _ssdDigit 4B9E  
                isa$xinst 000000              ??_ssdEstoque 000F     __size_of_pwmFrequency 0026  
             desce@before 0003           fecharPorta@cont 0038              shift_texto@i 000A  
            serial_tx@val 0001                  main@cont 005B                  lcd_str@i 000C  
      __end_of_instrucoes 5176               ??_atraso_ms 0003               ??_atualizar 0051  
           ?_digitalWrite 0001        __end_of_ssdEstoque 5056              ?_fecharPorta 0038  
       digitalWrite@value 0003          ___lwmod@dividend 0001              _pwmFrequency 48E4  
             _tempLiquido 0077               ??_serial_rx 0009               ??_serial_tx 0001  
             _serial_init 4886               _shift_texto 52B6           ??_serial_tx_str 0004  
             ??_ssdUpdate 0007               _temperatura 007B           ___lwmod@divisor 0003  
             kpDebounce@i 000A               kpDebounce@j 0009               kpDebounce@k 0007  
         ___lwmod@counter 0005            ??_digitalWrite 0005              ___aldiv@sign 000A  
           ___fladd@signs 0034           digitalWrite@pin 0001              ___fladd@aexp 0035  
            ___fladd@bexp 0036  
